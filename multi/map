mapping MultiMapping MultiRec {
  shape { RectShape }
  static {
    double attrs[2];
    attrs[0] = 10.0; attrs[1] = 10.0;
    TDataMap::SetDefaultShape(MultiMapping_RectShapeID,2,attrs);
    TDataMap::SetDefaultColor(ColorMgr::AllocColor("black"));

    /*
       offsets of GData attributes must correspond to the dynamic
       GData attributes listed in the next section
    */
    GDataAttrOffset *_offsets = new GDataAttrOffset;
    _offsets->xOffset = 0;
    _offsets->yOffset = sizeof(double);
    _offsets->zOffset = -1;
    _offsets->colorOffset = _offsets->sizeOffset = _offsets->shapeOffset = -1;
    _offsets->patternOffset = _offsets->orientationOffset = -1;
    _offsets->shapeAttrOffset[0] = 2 * sizeof(double);
    _offsets->shapeAttrOffset[1] = 3 * sizeof(double);
    for(int i = 2; i < MAX_GDATA_ATTRS; i++)
      _offsets->shapeAttrOffset[i] = -1;
    TDataMap::SetGDataOffset(_offsets);
  }
  dynamic x,y,color, shapeAttr[0], shapeAttr[1] {
    MapInfo *mapInfo = (MapInfo *)userData;
    symbol->x = (((float)(data->begin+data->end))/2.0);
    symbol->y = (float)data->node + 0.5;
    if (data->job == 0 )
      /* suspended*/
      symbol->color = suspendColor;
    else if (data->job <0)
      /* aborted? */
      symbol->color = abortColor;
    else {
      int index;
      if (data->cycles == 0)
	index = 2;
      else
	index = (data->cycles -1) %3;
      index = (index + 1) % 3;
      symbol->color = 
	mapInfo->colorArrays[index][mapInfo->job_ordering[data->job]];
    }
#if 0
    printf("color %d job %d \n", symbol->color, data->job);
#endif

    symbol->shapeAttr_0 = data->end-data->begin+1;
    if (data->job == -1)
      symbol->shapeAttr_1 = 0.9;
    else
      symbol->shapeAttr_1 = 0.9;
#if 0
    printf("sym %d (%f,%f,%f,%f) color %d\n", recId,
	   symbol->x, symbol->y, symbol->shapeAttr_0, symbol->shapeAttr_1,
	   symbol->color);
#endif
  }
}
