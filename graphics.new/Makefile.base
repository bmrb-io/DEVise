LD = ld
CC = g++

# flags:
#	-DUSE_AMSDISKFILE: set this to use in-memory file for AMS
#	-DUNIX: use this for Unix file
#	-DBATCH: true to batch symbols
#		files: TDataView.c, SymbolBin.c
#	-DRANDOMIZE: randomize existing pages before returning them.
#		file: QueryProc.c
#	-DTRACE_GDATA: trace GDATa query, file: QueryProc.c

CFLAGS =  $(ARCH_FLAGS)  -Wall -Wno-unused -O -DUNIX -I../../graphics \
	-I../../graphics.new -I../../tape -fexternal-templates

.c.o: 
	$(CC) -c  $(CFLAGS) $<
.C.o: 
	$(CC) -c  $(CFLAGS) $<

# Buffer manager

BufMgrSrc = BufMgr.c BufMgrNull.c VoidArray.c RangeInfo.c RecRange.c \
	RangeInfoArray.c BufferFifo.c BufferFocal.c BufferLifo.c \
	BufferRnd.c BufMgrFull.c \
	RangeList.c TDataRangeList.c MultiArray.c  RangeCallback.c \
	GDataRangeSource.c TDataRangeSource.c

BufMgrObj = $(BufMgrSrc:.c=.o)

# query processor

QPSrc = CompositeParser.c MappingInterp.c MapInterpClassInfo.c \
	Bitmap.c ParseCat.c ItemList.C Group.C GroupDir.C\
	DispQueryProc.c QueryProc.c QueryProcSimple.c QueryProcFull.c \
	RecInterp.c TDataAsciiInterp.c TDataBinaryInterp.c TDataMap.c \
	TDataMapDispatch.c GDataBin.c TDataAscii.c TDataBinary.c \
	TDataRec.c TData2DRec.c PageRange.c  RecFile.c UnixRecFile.c \
	GDataRangeMap.c GData.c Temp.c TData.c TDataViewX.c ViewScatter.c \
	ViewRanges.c ViewGraph.c QPRange.c \
	ViewClassInfo.c MapInterpShape.C DataSource.c
	
QPSrc1 = $(filter %.c,$(QPSrc))
QPSrc2 = $(filter %.C,$(QPSrc))
QPObj = $(QPSrc1:.c=.o)
QPObj += $(QPSrc2:.C=.o)

# View

VIEWSRC = ActionDefault.c ConnectorShape.h Snapshot.c BasicStats.c \
	KGraph.c ViewKGraph.c Seq.C Web.C Action.c ActionClassInfo.c
VIEWSRC1 = $(filter %.c,$(VIEWSRC))
VIEWSRC2 = $(filter %.C,$(VIEWSRC))
VIEWSRC3 = $(filter %.h,$(VIEWSRC))
VIEWOBJ = $(VIEWSRC1:.c=.o)
VIEWOBJ += $(VIEWSRC2:.C=.o)
VIEWOBJ += $(VIEWSRC3:.h=.o)

# Command

CMDSRC =  Command.c
CMDOBJ =  $(CMDSRC:.c=.o)

LIBSRC = $(BufMgrSrc) $(QPSrc) $(VIEWSRC) $(CMDSRC)

LIBOBJ = $(BufMgrObj) $(QPObj) $(VIEWOBJ) $(CMDOBJ)

TESTSRC = testbuf.c testpage.c testpfile.c testpfileGap.c testQueryProc.c \
	testTdata.c testbit.c testPageRange.c testPageRangeMap.c \
	testPageRangeFile.c testAms1.c rstat.c testAms1Sym.c makeGData.c \
	testGData.c testGDataVar.c testBufPage.c testRecFile.c testTDataRec.c \
	testBufMgrNull.c test2d.c testraw.c testVoidArray.c testRecRange.c \
	testBufMech.c testBufMgrFull.c testRangeList.c genStrData.c testStr.c\
	StringHash.c testViewRanges.c testXY.c

CLIENTSRC = ClientAPI.c 
SERVERSRC = ServerAPI.c 
MONLITHSRC = TkControl.c 

ALLSRC = $(LIBSRC) $(TESTSRC) $(SERVERSRC) $(MONOLITHSRC)

LIBOBJS = $(VIEWOBJ) $(QPObj) $(CMDOBJ) $(BufMgrObj)

all: libobj.o clientobj.o servobj.o monolith.o

monolith.o: TkControl.o
	$(LD) -r -o $@ TkControl.o

clientobj.o: ClientAPI.o
	$(LD) -r -o $@ ClientAPI.o 

servobj.o: ServerAPI.o
	$(LD) -r -o $@ ServerAPI.o 

libobj.o: $(LIBOBJS) ../graphics/allobj.o
	$(LD) -r -o $@ ../graphics/allobj.o $(LIBOBJS)

BufMgrObj.o: $(BufMgrObj)
	$(LD) -r -o $@ $(BufMgrObj)

testViewRanges: testViewRanges.o ViewRanges.o RangeCallback.o
	$(CC) -o $@ $@.o ViewRanges.o RangeCallback.o \
		../graphics/allobj.o $(ARCH_LDFLAGS) \
		-ltk -lXaw -lXmu -lXt -lXext -lX11 -lm

testStr: $(VIEWOBJ) $(QPObj) $(CMDOBJ) BufMgrObj.o testStr.o StringHash.o
	$(CC) -o $@ $@.o $(VIEWOBJ) BufMgrObj.o $(QPObj) \
	 $(CMDOBJ)  StringHash.o ../graphics/allobj.o  \
	-lXaw -lXmu -lXt -lXext -lX11 -lm -l44bsd

genStrData: genStrData.o
	$(CC) -o $@ $@.o

rstat: rstat.o ../graphics/Parse.o
	$(CC) -o $@ $@.o ../graphics/Parse.o ../graphics/Exit.o -lm

TESTBUFMGROBJ =  RangeInfoArray.o MultiArray.o ../graphics/Parse.o \
	RecRange.o RangeInfo.o VoidArray.o BufferFifo.o BufMgrFull.o \
	RangeList.o TDataRangeList.o

testBufMgrFull: testBufMgrFull.o $(TESTBUFMGROBJ)
	$(CC) -o $@ $@.o $(TESTBUFMGROBJ) ../graphics/ExitClean.o

testGDataRange: testGDataRange.o GDataRangeMap.o ../graphics/Parse.o \
	../graphics/ExitClean.o
	$(CC) -o $@ $@.o GDataRangeMap.o ../graphics/Parse.o \
	../graphics/ExitClean.o
	
testRangeList: testRangeList.o ../graphics/Parse.o RangeList.o RangeInfo.o \
	../graphics/Exit.o
	$(CC) -o $@ $@.o ../graphics/Parse.o RangeList.o RangeInfo.o \
		../graphics/ExitClean.o

testRecRange: testRecRange.o ../graphics/Parse.o RecRange.o ../graphics/Exit.o
	$(CC) -o $@ $@.o ../graphics/Parse.o RecRange.o ../graphics/ExitClean.o

testVoidArray: testVoidArray.o ../graphics/Parse.o VoidArray.o ../graphics/Exit.o
	$(CC) -o $@ $@.o ../graphics/Parse.o VoidArray.o \
	../graphics/ExitClean.o

testraw: testraw.o $(VIEWOBJ) $(QPObj) $(CMDOBJ) BufMgrObj.o
	$(CC) -o $@ $@.o $(VIEWOBJ) BufMgrObj.o $(QPObj) \
		$(CMDOBJ) ../graphics/allobj.o \
		-lXaw -lXmu -lXt -lXext -lX11 -lm -l44bsd

test2d: test2d.o $(VIEWOBJ) $(QPObj) $(CMDOBJ) BufMgrObj.o
	$(CC) -o $@ $@.o $(VIEWOBJ) BufMgrObj.o $(QPObj) \
		$(CMDOBJ) ../graphics/allobj.o \
		-lXaw -lXmu -lXt -lXext -lX11 -lm -l44bsd

testAms1: $(VIEWOBJ) $(QPObj) $(CMDOBJ) BufMgrObj.o testAms1.o
	$(CC) -o $@ $@.o $(VIEWOBJ) BufMgrObj.o $(QPObj) \
		$(CMDOBJ) ../graphics/allobj.o -L/usr/unsup/lib \
		-ltcl -ltk -lXaw -lXmu -lXt -lXext -lX11 -lm -l44bsd

testXY: $(VIEWOBJ) $(QPObj) $(CMDOBJ) BufMgrObj.o testXY.o
	$(CC) -o $@ $@.o $(VIEWOBJ) BufMgrObj.o $(QPObj) \
		$(CMDOBJ) ../graphics/allobj.o \
		-lXaw -lXmu -lXt -lXext -lX11 -lm -l44bsd

testBufMgrNull: testBufMgrNull.o BufMgrNull.o TDataRec.o RecFile.o\
		UnixRecFile.o
	$(CC) -o $@ $@.o BufMgrNull.o TDataRec.o RecFile.o \
		UnixRecFile.o ../graphics/ExitClean.o

testTDataRec: testTDataRec.o TDataRec.o RecFile.o UnixRecFile.o
	$(CC) -o $@ $@.o TDataRec.o RecFile.o UnixRecFile.o \
		../graphics/ExitClean.o

testRecFile: testRecFile.o RecFile.o UnixRecFile.o
	$(CC) -o $@ $@.o RecFile.o UnixRecFile.o ../graphics/ExitClean.o

testBufPage: testBufPage.o BufPage.o
	$(CC) -o $@ $@.o BufPage.o ../graphics/ExitClean.o

mapfile.h: map1
	parser < map1

makeGData: makeGData.o BufMgrObj.o
	$(CC) -o $@ $@.o BufMgrObj.o ../graphics/DList.o \
		../graphics/Exit.o -lm

testAms1Sym: testAms1Sym.o  TDataMap.o
	$(CC) -o $@ $@.o TDataMap.o ../graphics/allobj.o -lXaw -lXmu -lXt \
		-lXext -lX11 -lm

testQueryProc: $(LIBOBJ) testQueryProc.o
	$(CC) -o $@ $@.o $(LIBOBJ) ../graphics/Symbol.o \
		../graphics/ShapeRegistrar.o ../graphics/DList.o \
		../graphics/Geom.o -lm

testPageRange: testPageRange.o PageRange.o
	$(CC) -o $@ $@.o PageRange.o ../graphics/ExitClean.o

testPageRangeMap: testPageRangeMap.o PageRangeMap.o
	$(CC) -o $@ $@.o PageRangeMap.o ../graphics/ExitClean.o

testPageRangeFile: testPageRangeFile.o PageRange.o
	$(CC) -o $@ $@.o PageRange.o ../graphics/Exit.o

TESTGDATAVAR_OBJ = TDataAppend.o GDataVar.o testGDataVar.o \
	TDataMap.o UnixDiskFile.o PageRange.o BufMgr.o PageFile.o \
	PageRangeMap.o TData.o BufHash.o BufPageList.o DiskFile.o  Bitmap.o

testGDataVar: $(TESTGDATAVAR_OBJ)
	$(CC) -o $@ $(TESTGDATAVAR_OBJ) ../graphics/ExitClean.o \
		../graphics/DList.o 

TESTGDATA_OBJ = TDataAppend.o GData.o testGData.o  \
	TDataMap.o UnixDiskFile.o \
	PageRange.o BufMgr.o PageFile.o TData.o BufHash.o BufPageList.o \
	DiskFile.o 

testGData: $(TESTGDATA_OBJ)
	$(CC) -o $@ $(TESTGDATA_OBJ) ../graphics/ExitClean.o \
		../graphics/DList.o 

testbit: testbit.o Bitmap.o
	$(CC) -o $@ $@.o Bitmap.o

testTdata: $(BufMgrObj) testTdata.o
	$(CC) -o $@ $@.o $(BufMgrObj)

PFILEOBJ = BufHash.o BufPageList.o BufMgr.o \
	DiskFile.o PageFile.o  UnixDiskFile.o

testpfile: $(PFILEOBJ) testpfile.o
	$(CC) -o $@ $@.o $(PFILEOBJ)

testpfileGap: $(PFILEOBJ) testpfileGap.o
	$(CC) -o $@ $@.o $(PFILEOBJ) PageRange.o ../graphics/Exit.o

BUFOBJ = BufHash.o BufPageList.o BufMgr.o DiskFile.o  UnixDiskFile.o
testbuf: $(BUFOBJ) testbuf.o
	$(CC) -o $@ $@.o $(BUFOBJ) ../graphics/Exit.o

testpage: $(LIBOBJ) testpage.o
	$(CC) -o $@ $@.o $(LIBOBJ)

.PHONY: clean mostlyclean

clean: mostlyclean
	-rm libobj.o genStrData strData monolith.o 

mostlyclean:
	-rm $(LIBOBJ) BufMgrObj.o genStrData.o rstat.o testGDataRange.o \
	testRecFile.o testRecRange.o testViewRanges.o testVoidArray.o\
	ClientAPI.o ServerAPI.o TkControl.o
