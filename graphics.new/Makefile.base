LD = ld
CC = g++

# flags:
#	-DSEVENLAYER: set this flag to use sevenlayer
#	-DRECTX_PIXEL: used when RectXShape plots only rectangles.
#	-DUSE_AMSDISKFILE: set this to use in-memory file for AMS
#	-DUNIX: use this for Unix file
#	-DOLDGRAPHICS: use this to NOT detect overlapping symbol X coords before
#		drawing. file: TDataView.c
#	-DHARDWIRE_SYM: hardwire detecting overlapping symbols in query processor
#		file: QueryProc.c
#	-DSYMBOL_BIN: symbol bin to return symbols
#	-DNO_SYMBOL: returnXYDAta to TDataView: files: SymbolBin.c
#	-DBATCH: true to batch symbols
#		files: TDataView.c, SymbolBin.c
#	-DINSTANTIATE_ALL: instantiate all symbols. Must be set with
#		-DBATCH. File: SymbolBin.c
#	-DRANDOMIZE: randomize existing pages before returning them.
#		file: QueryProc.c
#	-DINTERLEAVE: interleave orders in which the records are returned.
#		-DRANDOMIZE must be set. file: QueryProc.c
#	-DSIMPLE_MAPPING: use this to map just the x,y coords
#		file: testAms1.c
#	-DTRACE_GDATA: trace GDATa query, file: QueryProc.c

CFLAGS = $(ARCH_FLAGS) -O -DUNIX -I../../graphics -I../../graphics.new \
	-fexternal-templates
.c.o: 
	$(CC) -c  $(CFLAGS) $<
.C.o: 
	$(CC) -c  $(CFLAGS) $<

# Buffer manager

BufMgrSrc = BufMgr.c BufMgrNull.c VoidArray.c RangeInfo.c RecRange.c \
		RangeInfoArray.c BufferFifo.c BufferFocal.c BufferLifo.c \
		BufferRnd.c BufMgrFull.c \
		RangeList.c TDataRangeList.c MultiArray.c  RangeCallback.c \
		GDataRangeSource.c TDataRangeSource.c

BufMgrObj = BufMgr.o BufMgrNull.o VoidArray.o  RangeInfo.o RecRange.o \
		RangeInfoArray.o BufferFifo.o BufferFocal.o BufferLifo.o \
		BufferRnd.o BufMgrFull.o \
		RangeList.o  TDataRangeList.o MultiArray.o  RangeCallback.o \
		GDataRangeSource.o TDataRangeSource.o

# query processor

QPSrc= CompositeParser.c MappingInterp.c MapInterpClassInfo.c \
	Bitmap.c ParseCat.c Group.C GroupDir.C ItemList.C\
	DispQueryProc.c QueryProc.c QueryProcSimple.c QueryProcFull.c \
	RecInterp.c TDataAsciiInterp.c TDataMap.c \
	TDataMapDispatch.c GDataBin.c TDataAscii.c \
	TDataRec.c TData2DRec.c PageRange.c  RecFile.c UnixRecFile.c \
	GDataRangeMap.c GData.c Temp.c TData.c TDataViewX.c ViewScatter.c \
	ViewRanges.c ViewGraph.c TkControl.c QPRange.c \
	ViewClassInfo.c

QPObj=  CompositeParser.o MappingInterp.o MapInterpClassInfo.o \
	Bitmap.o DispQueryProc.o ParseCat.o Group.o GroupDir.o ItemList.o\
	QueryProc.o QueryProcSimple.o QueryProcFull.o \
	RecInterp.o TDataAsciiInterp.o TDataMap.o \
	TDataMapDispatch.o GDataBin.o TDataAscii.o \
	TDataRec.o TData2DRec.o PageRange.o  RecFile.o UnixRecFile.o \
	GDataRangeMap.o GData.o Temp.o TData.o TDataViewX.o ViewScatter.o \
	ViewRanges.o ViewGraph.o TkControl.o QPRange.o \
	ViewClassInfo.o

# View

VIEWSRC = ActionDefault.c ConnectorShape.h Snapshot.c
VIEWOBJ = ActionDefault.o ConnectorShape.o Snapshot.o

# Command

CMDSRC =  Command.c
CMDOBJ =  Command.o

LIBSRC= $(BufMgrSrc) $(QPSrc) $(VIEWSRC) $(CMDSRC)

LIBOBJ = $(BufMgrObj) $(QPObj) $(VIEWOBJ) $(CMDOBJ)

TESTSRC = testbuf.c testpage.c testpfile.c testpfileGap.c testQueryProc.c \
	testTdata.c testbit.c testPageRange.c testPageRangeMap.c \
	testPageRangeFile.c testAms1.c rstat.c testAms1Sym.c makeGData.c \
	testGData.c testGDataVar.c testBufPage.c testRecFile.c testTDataRec.c \
	testBufMgrNull.c test2d.c testraw.c testVoidArray.c testRecRange.c \
	testBufMech.c testBufMgrFull.c testRangeList.c genStrData.c testStr.c\
	StringHash.c testViewRanges.c testXY.c

ALLSRC= $(LIBSRC) $(TESTSRC) 

LIBOBJS= $(VIEWOBJ) $(QPObj) $(CMDOBJ) $(BufMgrObj)
libobj.o: $(LIBOBJS) ../graphics/allobj.o
	$(LD) -r -o $@ ../graphics/allobj.o  $(LIBOBJS)

BufMgrObj.o: $(BufMgrObj)
	$(LD) -r -o $@ $(BufMgrObj)

testViewRanges: testViewRanges.o ViewRanges.o RangeCallback.o
	$(CC) -o $@ $@.o ViewRanges.o RangeCallback.o \
		../graphics/allobj.o -lXaw -lXmu -lXt -lXext -lX11 -lm -l44bsd


testStr: $(VIEWOBJ) $(QPObj) $(CMDOBJ) BufMgrObj.o testStr.o StringHash.o
	$(CC) -o $@ $@.o $(VIEWOBJ) BufMgrObj.o $(QPObj) \
	$(CMDOBJ)  StringHash.o ../graphics/allobj.o  \
	-lXaw -lXmu -lXt -lXext -lX11 -lm -l44bsd

genStrData: genStrData.o
	$(CC) -o $@ $@.o

rstat: rstat.o Parse.o
	$(CC) -o $@ $@.o Parse.o ../graphics/Exit.o -lm

TESTBUFMGROBJ =  RangeInfoArray.o MultiArray.o Parse.o \
	RecRange.o RangeInfo.o VoidArray.o BufferFifo.o BufMgrFull.o \
	RangeList.o TDataRangeList.o

testBufMgrFull: testBufMgrFull.o $(TESTBUFMGROBJ)
	$(CC) -o $@ $@.o $(TESTBUFMGROBJ) ../graphics/ExitClean.o

testGDataRange: testGDataRange.o GDataRangeMap.o Parse.o \
	../graphics/ExitClean.o
	$(CC) -o $@ $@.o GDataRangeMap.o Parse.o ../graphics/ExitClean.o
	
testRangeList: testRangeList.o Parse.o RangeList.o RangeInfo.o \
	../graphics/Exit.o
	$(CC) -o $@ $@.o Parse.o RangeList.o RangeInfo.o \
		../graphics/ExitClean.o

testRecRange: testRecRange.o Parse.o RecRange.o ../graphics/Exit.o
	$(CC) -o $@ $@.o Parse.o RecRange.o ../graphics/ExitClean.o

testVoidArray: testVoidArray.o Parse.o VoidArray.o ../graphics/Exit.o
	$(CC) -o $@ $@.o Parse.o VoidArray.o ../graphics/ExitClean.o

testraw: testraw.o $(VIEWOBJ) $(QPObj) $(CMDOBJ) BufMgrObj.o
	$(CC) -o $@ $@.o $(VIEWOBJ) BufMgrObj.o $(QPObj) \
		$(CMDOBJ) ../graphics/allobj.o \
		-lXaw -lXmu -lXt -lXext -lX11 -lm -l44bsd

test2d: test2d.o $(VIEWOBJ) $(QPObj) $(CMDOBJ) BufMgrObj.o
	$(CC) -o $@ $@.o $(VIEWOBJ) BufMgrObj.o $(QPObj) \
		$(CMDOBJ) ../graphics/allobj.o \
		-lXaw -lXmu -lXt -lXext -lX11 -lm -l44bsd

testAms1: $(VIEWOBJ) $(QPObj) $(CMDOBJ) BufMgrObj.o testAms1.o
	$(CC) -o $@ $@.o $(VIEWOBJ) BufMgrObj.o $(QPObj) \
		$(CMDOBJ) ../graphics/allobj.o -L/usr/unsup/lib \
		-ltcl -ltk -lXaw -lXmu -lXt -lXext -lX11 -lm -l44bsd

testXY: $(VIEWOBJ) $(QPObj) $(CMDOBJ) BufMgrObj.o testXY.o
	$(CC) -o $@ $@.o $(VIEWOBJ) BufMgrObj.o $(QPObj) \
		$(CMDOBJ) ../graphics/allobj.o \
		-lXaw -lXmu -lXt -lXext -lX11 -lm -l44bsd

testBufMgrNull: testBufMgrNull.o BufMgrNull.o TDataRec.o RecFile.o\
		UnixRecFile.o
	$(CC) -o $@ $@.o BufMgrNull.o TDataRec.o RecFile.o \
		UnixRecFile.o ../graphics/ExitClean.o

testTDataRec: testTDataRec.o TDataRec.o RecFile.o UnixRecFile.o
	$(CC) -o $@ $@.o TDataRec.o RecFile.o UnixRecFile.o \
		../graphics/ExitClean.o

testRecFile: testRecFile.o RecFile.o UnixRecFile.o
	$(CC) -o $@ $@.o RecFile.o UnixRecFile.o ../graphics/ExitClean.o

testBufPage: testBufPage.o BufPage.o
	$(CC) -o $@ $@.o BufPage.o ../graphics/ExitClean.o

mapfile.h: map1
	parser < map1

makeGData: makeGData.o BufMgrObj.o
	$(CC) -o $@ $@.o BufMgrObj.o ../graphics/DList.o \
		../graphics/Exit.o -lm

testAms1Sym: testAms1Sym.o  TDataMap.o
	$(CC) -o $@ $@.o TDataMap.o ../graphics/allobj.o -lXaw -lXmu -lXt \
		-lXext -lX11 -lm

testQueryProc: $(LIBOBJ) testQueryProc.o
	$(CC) -o $@ $@.o $(LIBOBJ) ../graphics/Symbol.o \
		../graphics/ShapeRegistrar.o ../graphics/DList.o \
		../graphics/Geom.o -lm

testPageRange: testPageRange.o PageRange.o
	$(CC) -o $@ $@.o PageRange.o ../graphics/ExitClean.o

testPageRangeMap: testPageRangeMap.o PageRangeMap.o
	$(CC) -o $@ $@.o PageRangeMap.o ../graphics/ExitClean.o

testPageRangeFile: testPageRangeFile.o PageRange.o
	$(CC) -o $@ $@.o PageRange.o ../graphics/Exit.o

TESTGDATAVAR_OBJ = TDataAppend.o GDataVar.o testGDataVar.o \
	TDataMap.o UnixDiskFile.o PageRange.o BufMgr.o PageFile.o \
	PageRangeMap.o TData.o BufHash.o BufPageList.o DiskFile.o  Bitmap.o

testGDataVar: $(TESTGDATAVAR_OBJ)
	$(CC) -o $@ $(TESTGDATAVAR_OBJ) ../graphics/ExitClean.o \
		../graphics/DList.o 

TESTGDATA_OBJ = TDataAppend.o GData.o testGData.o  \
	TDataMap.o UnixDiskFile.o \
	PageRange.o BufMgr.o PageFile.o TData.o BufHash.o BufPageList.o \
	DiskFile.o 

testGData: $(TESTGDATA_OBJ)
	$(CC) -o $@ $(TESTGDATA_OBJ) ../graphics/ExitClean.o \
		../graphics/DList.o 

testbit: testbit.o Bitmap.o
	$(CC) -o $@ $@.o Bitmap.o

testTdata: $(BufMgrObj) testTdata.o
	$(CC) -o $@ $@.o $(BufMgrObj)

PFILEOBJ = BufHash.o BufPageList.o BufMgr.o \
	DiskFile.o PageFile.o  UnixDiskFile.o

testpfile: $(PFILEOBJ) testpfile.o
	$(CC) -o $@ $@.o $(PFILEOBJ)

testpfileGap: $(PFILEOBJ) testpfileGap.o
	$(CC) -o $@ $@.o $(PFILEOBJ) PageRange.o ../graphics/Exit.o

BUFOBJ = BufHash.o BufPageList.o BufMgr.o DiskFile.o  UnixDiskFile.o
testbuf: $(BUFOBJ) testbuf.o
	$(CC) -o $@ $@.o $(BUFOBJ) ../graphics/Exit.o

testpage: $(LIBOBJ) testpage.o
	$(CC) -o $@ $@.o $(LIBOBJ)
