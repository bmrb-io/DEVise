		Peptide-CGI Configuration Information
		$Id$

TEMPTEMP -- make sure this is up-to-date

* INTRODUCTION

This file explains the various configuration variables that are found
in Peptide-CGI's Makefile.config.

Note that there are a number of configuration variables whose values
must be coordinated, because the point to the same directory or file
via a URL and the file system.  The individual explanations below have
notes about this.


* CONFIGURATION VARIABLES

    Software we need
    ----------------

JAVA_BIN:  the directory containing the java executable you want to use.
The Java version must be at least 1.3.

PERL_BIN:  the directory containing the perl executable you want to use.


    Web URLs
    --------

INPUT_WEB_DOMAIN:  the domain name of the BMRB web site or the mirror
that you want to use.  The Peptide-CGI software will get NMR-STAR files
from this web site.  (When Peptide-CGI is run with a particular BMRB
accession number, it will use the accession number to form the complete
URL of the appropriate NMR-STAR file; see STAR_URL and STAR_NAME_TEMPLATE.)
Note:  if you're setting up a BMRB mirror site, this variable should
probably be the domain name of your web site.

OUTPUT_WEB_DOMAIN:  the domain name of your web site (the web site on
which Peptide-CGI will be used).

STAR_URL:  the URL for the directory containing NMR-STAR files
corresponding to complete BMRB entries.  You should almost certainly
leave this variable set to the default value.  This value should
be defined using INPUT_WEB_DOMAIN.

PDB_FILE_URL:  the URL for the directory containing gzipped mmCIF files
with structure coordinates.  You should almost certainly leave this
variable set to the default value.

3D_EXAMPLE_URL:  this variable is no longer used.

SUMMARY_PAGE_DIR:  the URL of the directory in which the summary html
pages will be generated.  Note that this should be the same directory
as $(PEP_HOME)/html, see PEP_HOME below.  This value should be defined
by using OUTPUT_WEB_DOMAIN.

CGI_URL:  the URL of the CGI script that runs Peptide-CGI.  This URL
should point to the same file as $(CGI_HOME)/make_view, see below.
This value should be defined by using OUTPUT_WEB_DOMAIN.


    Star file name template
    -----------------------

STAR_NAME_TEMPLATE:  a template for forming the NMR-STAR file name,
given a BMRB accession number.  The asterisk (*) in the template will
be replaced by the accession number.  So, for example, if you have
an accession number of 4081, the default value of "bmr*.str" will
produce a file name of bmr4081.str.  You should almost certainly
leave this variable set to the default value.


    Installation directories, etc.
    ------------------------------

DEV_DEMO_HOME:  the directory in which the DEVise demo area is installed.
The value of this variable MUST be the same as the value of the DEVISE_VIS
variable in the JavaScreen Makefile.config.  It must also be the same
as the directory generated by untarring Devise-x.x.x_test-demo.tar.gz
in the first step of the DEVise installation.

WWW_HOME:  the top-level directory (as seen by the file system, not a URL) in
which web content is installed on your server.

PEP_HOME:  the directory where the "front-end" bmrb_select.html file
will be installed.  Note that the directory containing all of the generated
html files will be linked into this directory.  $(PEP_HOME)/html should
point to the same directory as $(SUMMARY_PAGE_DIR), see above.

CGI_HOME:  the directory (as seen by the file system, not a URL) in which
the CGI script will be installed.  $(CGI_HOME)/make_view should point
to the same file as $(CGI_URL), see above.

PEP_SESSION_HOME:  the "real" directory into which Peptide-CGI session
files will be generated.  Note that this directory will be linked into
the demo session directory.  This directory does not have to be within
the web server tree, but it does have to be writable by the user
that runs the CGI script, and readable by the user that runs the
DEVise/JavaScreen server.

PEP_DATA_HOME:  the "real" directory into which Peptide-CGI data files
will be generated.  Note that this directory will be linked into the
demo data directory.  This directory does not have to be within
the web server tree, but it does have to be writable by the user
that runs the CGI script, and readable by the user that runs the
DEVise/JavaScreen server.

PEP_HTML_HOME:  the "real" directory into which Peptide-CGI html files
will be generated.  Note that this directory will be linked into the
PEP_HOME directory, see above.  This directory does not have to be within
the web server tree, but it does have to be readable by the web server
(in terms of file permissions), writable by the user that runs the
CGI script, and readable by the user that runs the DEVise/JavaScreen
server.

INSTALL_MACHINE:  if specified, this variable will cause a warning
to be printed, and confirmation requested, if you try to do an install
on a machine other than the one specified.  This is mainly useful if
you have a shared file system, and want to avoid accidentally doing
an install on the wrong machine.


    Installation parameters for viewing unreleased entries
    ------------------------------------------------------

Note:  the setup for viewing unreleased entries is as complicated as it
is because at BMRB, the Third.Ed directory (which has the files for
entries) is not mounted on the same machine that runs the JavaScreen.
If you're doing an installation, and all of that stuff is on one machine,
you can simplify things somewhat.

Note that 'make vur_install' must be done on the machine that the
JavaScreen is installed on.


VUR_CGI_HOME:  the directory in which the stuff from cgi-bin will
get installed, set up for viewing unreleased entries.  This directory
must be on the JavaScreen machine.

VUR_SESSION_HOME:  the directory in which to store the session files
for viewing unreleased entries (the session files will actually be
stored in a .unreleased directory underneath this, so that they are
confidential).  This directory must be on the JavaScreen machine.

VUR_DATA_HOME:  the directory in which to store the data files for
viewing unreleased entries.  This directory must be on the JavaScreen
machine.

VUR_HTML_HOME:  the directory in which to store the html files for
viewing unreleased entries.  We don't use them at this point, but we
need a place for the Java code to put them, or it will fail.  It
actually can be in /tmp or something like that.
WARNING:  to maintain the confidentiality of the unreleased
data, this directory must NOT be accessible via the web.
This directory must be on the JavaScreen machine.

VUR_FRONTEND_DIR:  the directory in which the view_entry script (the
top-level script for the whole business) will get installed.  This
directory must be on the JavaScreen machine; ideally it is also
mounted on the annotators' machines, and in their paths.  Set to
"null" and copy view_entry and vur_config by hand if no such directory
exists on the JavaScreen machine.

VUR_INSTALL_MACHINE:  the machine on which to do the installation for
viewing unreleased entries.


    Run-time parameters for viewing unreleased entries
    --------------------------------------------------

VUR_JS_DIR:  the directory in which the JavaScreen client is installed.

VUR_INPUT_DIR:  the "base" directory from which to copy the NMR-STAR
file for an entry.  This string is used by scp, so it can be of the
form user@host:file.  Normally this should point to the Third.Ed
directory.

VUR_CSR_LEVEL:  the level of chemical shift reference processing to do
when viewing unreleased entries.  0 means none, 1 means link only, and
2 means full calculation.  At this time, VUR_CSR_LEVEL should never be
set to 1.

VUR_LOGIN:  the user that the front-end script (view_entry) will log
into the JavaScreen machine as.

VUR_SCRIPT:  the "main" script to run.  This should point to
view_unreleased as it is installed on the JavaScreen machine.


    Installation parameters for LACS data
    -------------------------------------

LACS_LEVEL_DEFAULT:  the level of LACS processing to do.  0 means none,
1 means try to get a LACS file but not doing so is only a warning, 2
means try to get a LACS file and not doing so is a fatal error.

LACS_NAME_TEMPLATE:  a template for forming the LACS file name,
given a BMRB accession number.  The asterisk (*) in the template will
be replaced by the accession number.  So, for example, if you have
an accession number of 4081, the default value of "bmr*_LACS.out" will
produce a file name of bmr4081_LACS.out.  You should almost certainly
leave this variable set to the default value.

LACS_URL:  the URL of the directory containing the LACS files.  This
value must end with a trailing slash.


    Email addresses
    ---------------

ERROR_EMAIL:  the user to which to send email when any error occurs
in Peptide-CGI.  Note:  this is not the same email that shows up in
the "Problems with the visualization software" mailto in the html
pages -- that should probably be configurable, too.

COMMENT_EMAIL:  the email that shows up in the "Comments" mailto in
the html pages.


    Miscellaneous
    -------------

MY_UNCOMPRESS:  this variable is no longer used.  (This was used before
gzipped mmCIF coordinate files were available.)

DO_CSR_DEFAULT:  the default level of chemical shift reference calculation
to do.  0 means none, 1 means link only, and 2 means full calculation.
In other words, if you set this to 2, Peptide-CGI will attempt to do
the full chemical shift reference calculation when it does the "main"
visualization generation and generates the summary html page.
Note:  if you do not have the separate ChemShift software installed,
this variable should be set to 0!
