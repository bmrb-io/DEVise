#! /usr/bin/perl

# Dummy ChemShift server to allow better testing.

# This is based on the "real" csr_server script.

use strict;

my $usage = "dummy_csr_server [-exit] [-exit_on_success] [-time_limit <sec>]\n";

my $exit = 0;
my $exitOnSuccess = 0;
my $timeLimit = 0;

my $arg;
while ($arg = shift(@ARGV)) {
  if ($arg eq "-usage") {
    print "$usage";
    exit(0);
  } elsif ($arg eq "-exit") {
    $exit = 1;
  } elsif ($arg eq "-exit_on_success") {
    $exitOnSuccess = 1;
  } elsif ($arg eq "-time_limit") {
    my $waitTime;
    if ($waitTime = shift(@ARGV)) {
      $timeLimit = time() + $waitTime;
    } else {
      print "-time_limit argument requires value\n";
      exit(1);
    }
  } else {
    print "Illegal argument: $arg\n";
    print "$usage";
    exit(1);
  }
}

while (1) {
  if ($timeLimit ne 0 and time() gt $timeLimit) {
    print "dummy_csr_server hit time limit; exiting\n";
    exit(0);
  }

  sleep 1;

  my $runFile = "data_dir/csr.run";
  if (-e $runFile) {
    ProcessRunFile($runFile);
  }

  $runFile = "data_dir/vis_server/csr.run";
  if (-e $runFile) {
    ProcessRunFile($runFile);
  }

  $runFile = "data_dir/uvd/csr.run";
  if (-e $runFile) {
    ProcessRunFile($runFile);
  }
}

#-----------------------------------------------------------
# Do the processing once we've found a run file.
# Arguments: <run file name>
# Returns: none
sub ProcessRunFile() {
  my $thisRunFile = shift(@_);

  my $line = `cat $thisRunFile`;
  chomp $line;
  my @args = split / /, $line;
  if (@args[0] eq "-l") {
    shift @args;
  }
  unlink $thisRunFile;

  print "\nRunning ChemShift simulator with $line\n";
  DoSim(@args);
    
  if ($exit) { exit(0) };
}

#-----------------------------------------------------------
# Actually do the simulation (create the output files).
# Arguments: <BMRB accession #> <PDB ID> <output name>
# Returns: none
sub DoSim() {
  my $bmrbId = shift(@_);
  my $pdbId = shift(@_);
  my $name = shift(@_);

  if ($bmrbId eq "4974" && $pdbId eq "2CI2") {
    # Test 16
    system("cp", "test_data/csr4974.1", $name . "_1.dat");
    system("cp", "test_data/csr4974.2", $name . "_2.dat");
    system("cp", "test_data/csr4974.3", $name . "_3.dat");
    system("cp", "test_data/csr4974.4", $name . "_4.dat");
    system("cp", "test_data/csr4974.5", $name . "_5.dat");
    system("chmod", "644", glob($name . "_?.dat"));
    system("touch", $name . ".done");
    if ($exitOnSuccess) { exit(0) };

  } elsif (($bmrbId eq "4317" || $bmrbId eq "data_dir/bmr4317_3.str") &&
      $pdbId eq "1AIL") {
    # Test 15
    system("cp", "test_data/csr4317.1", $name . "_1.dat");
    system("cp", "test_data/csr4317.2", $name . "_2.dat");
    system("cp", "test_data/csr4317.3", $name . "_3.dat");
    system("cp", "test_data/csr4317.4", $name . "_4.dat");
    system("cp", "test_data/csr4317.5", $name . "_5.dat");
    system("chmod", "644", glob($name . "_?.dat"));
    system("touch", $name . ".done");
    if ($exitOnSuccess) { exit(0) };

  } elsif ($bmrbId eq "data_dir/csr_sample.dat" && $pdbId eq "2CI2" &&
      $name eq "data_dir/test6_outcsr1") {
    # Test 6 -- Note: we check the name here to make sure data_dir and
    # csr_data_dir are correctly differentiated.
    system("cp", "test_data/csr1.1", "data_dir/vis_server/test6_outcsr1_1.dat");
    system("cp", "test_data/csr1.2", "data_dir/vis_server/test6_outcsr1_2.dat");
    system("cp", "test_data/csr1.3", "data_dir/vis_server/test6_outcsr1_3.dat");
    system("cp", "test_data/csr1.4", "data_dir/vis_server/test6_outcsr1_4.dat");
    system("cp", "test_data/csr1.5", "data_dir/vis_server/test6_outcsr1_5.dat");
    system("chmod", "644", glob("data_dir/vis_server/test6_outcsr1_?.dat"));
    system("touch", "data_dir/vis_server/test6_outcsr1.done");
    if ($exitOnSuccess) { exit(0) };

  } elsif ($bmrbId eq "4336" && $pdbId eq "1HTP") {
    # Test 22, test 23
    system("cp", "test_data/csr4336.1", $name . "_1.dat");
    system("cp", "test_data/csr4336.2", $name . "_2.dat");
    system("cp", "test_data/csr4336.3", $name . "_3.dat");
    system("cp", "test_data/csr4336.4", $name . "_4.dat");
    system("cp", "test_data/csr4336.5", $name . "_5.dat");
    system("chmod", "644", glob($name . "_?.dat"));
    system("touch", $name . ".done");
    if ($exitOnSuccess) { exit(0) };

  } elsif ($bmrbId eq "data_dir/uvd/20070228.28103.str" && $pdbId eq "1FSP") {
    system("cp", "test_data/csr4336.1", $name . "_1.dat");
    system("cp", "test_data/csr4336.2", $name . "_2.dat");
    system("cp", "test_data/csr4336.3", $name . "_3.dat");
    system("cp", "test_data/csr4336.4", $name . "_4.dat");
    system("cp", "test_data/csr4336.5", $name . "_5.dat");
    system("chmod", "644", glob($name . "_?.dat"));
    system("touch", $name . ".done");
    if ($exitOnSuccess) { exit(0) };

  } else {
    # We can't handle the request.
    print "dummy_csr_server error ($bmrbId $pdbId)\n";
    system("touch", $name . ".error");
    system("touch", $name . ".done");
  }
}
