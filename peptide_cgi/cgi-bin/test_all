#! /usr/bin/perl -w

# Perform Peptide-CGI automated tests.

# $Id$

############################################################

use strict;

my $do_all = 1;
my $do_sparta = 0;
my $do_tar = 0;
my $do_dist = 0;
my $do_mult = 0;
my $do_s2p = 0;
my $do_peak = 0;

my $usage = "Usage: test_all [-sparta] [-tar] [-dist] [-mult] [-s2p] [-peak]";

my $arg;
while ($arg = shift) {
  if ($arg eq -sparta) {
    $do_all = 0;
    $do_sparta = 1;
  } elsif ($arg eq -tar) {
    $do_all = 0;
    $do_tar = 1;
  } elsif ($arg eq -dist) {
    $do_all = 0;
    $do_dist = 1;
  } elsif ($arg eq -mult) {
    $do_all = 0;
    $do_mult = 1;
  } elsif ($arg eq -s2p) {
    $do_all = 0;
    $do_s2p = 1;
  } elsif ($arg eq -peak) {
    $do_all = 0;
    $do_peak = 1;
  } elsif ($arg eq -usage) {
     print "$usage\n";
     exit 0;
  } else {
    print "Illegal argument: $arg\n";
     print "$usage\n";
     exit 0;
  }
}

my $result = 0;
my $failed_list = "";

open LOGFILE, ">> test_all.log";

my $curtime = localtime();
print LOGFILE "$curtime: ";

my $version = `./get_version`;
chomp $version;
print "\nPeptide-CGI version: $version\n";
print LOGFILE "Peptide-CGI version: $version: ";

if ($do_all != 0) {
  RunTest("test1");
  RunTest("test1_3");
  RunTest("test2");
  RunTest("test2mu");
  RunTest("test3");
  RunTest("test3_3");
  RunTest("test4");
  RunTest("test4_3");
  #RunTest("test6", "-noleech");
  RunTest("test7");
  RunTest("test9");
  RunTest("test10");
  RunTest("test11");
  RunTest("test13");
  RunTest("test13_3");
  RunTest("test14");
  RunTest("test14_3");
  #RunTest("test15", "-noleech");
  #RunTest("test15_3", "-noleech");
  #RunTest("test16", "-noleech");
  RunTest("test17");
  RunTest("test18");
  RunTest("test19");
  #TEMP RunTest("test22", "-noleech");
  #TEMP RunTest("test23", "-noleech");
  RunTest("test24");
  RunTest("test26");
  RunTest("test27");
  RunTest("test27_3");
  RunTest("test28");
  RunTest("test29");
  RunTest("test30");
  RunTest("test32");
  RunTest("test33");
  RunTest("test34");
  RunTest("test37");
  RunTest("test38");
  RunTest("test39");
  RunTest("test40");
  RunTest("test41");
  RunTest("test46");
  #RunTest("test47", "-noleech");
  RunTest("test49");
  RunTest("test50");
  RunTest("test51");
  RunTest("test51_3");
  RunTest("test52");
  RunTest("test52mu");
  RunTest("test53");
  RunTest("test53_21");
  RunTest("test54");
  RunTest("test54_3");
  RunTest("test55");
  RunTest("test56");
  RunTest("test57");
  RunTest("test57_3");
  RunTest("test58");
  RunTest("test58_3");
  RunTest("test59");
  RunTest("test60");
  RunTest("test60_3");
  RunTest("test61");
  RunTest("test61_3");
  RunTest("test62");
  RunTest("test62_3");
  RunTest("test63");
  RunTest("test64");
  RunTest("test65");
  RunTest("test66");
  RunTest("test67");
  RunTest("test67_3");
  RunTest("test68");
  RunTest("test68_3");
  RunTest("test69");
  RunTest("test69_3");
  RunTest("test_no_atom_types");
  RunTest("test_min_2_1");
  RunTest("test_min_3_0");
  RunTest("test_methyl1");
  RunTest("test_methyl1_3");
  RunTest("test_pdb_file1");
  RunTest("test_pdb_file1mu");
  RunTest("test70");
  RunTest("test_sc1");
  #RunTest("test_bug141");
}

if (($do_all != 0) or ($do_sparta != 0)) {
  # No longer relevant because of SPARTA data format changes.
  #RunTest("test_sparta1");
  # No longer relevant because of SPARTA data format changes.
  #RunTest("test_sparta2");
  RunTest("test_sparta3");
  RunTest("test_sparta3_3");
  RunTest("test_sparta3_vs");
  RunTest("test_sparta3_3mu");
  RunTest("test_sparta4");
  # This doesn't work if we're processing 3.1 entries.
  #RunTest("test_sparta5");
  RunTest("test_sparta5_3");
  #TEMP RunTest("test_sparta6");
  RunTest("test_sparta6_3");
  RunTest("test_sparta7");
  RunTest("test_sparta8");
}

if (($do_all != 0) or ($do_tar != 0)) {
  RunTest("test_tar1");
  # RunTest("test_tar1u");
  RunTest("test_tar1i");
  RunTest("test_tar1imv");
  RunTest("test_tar2");
  #RunTest("test_tar2u");
  RunTest("test_tar2i");
  RunTest("test_tar2p");
  RunTest("test_tar2imv");
  RunTest("test_tar2imu");
  RunTest("test_tar3");
  RunTest("test_tar4");
  RunTest("test_tar5");
  RunTest("test_tar6");
  RunTest("test_tar1p");
  # RunTest("test_tar1pu");
  RunTest("test_tar1pi");
  RunTest("test_tar2p");
  #RunTest("test_tar2pu");
  RunTest("test_tar2pi");
  RunTest("test_tar3p");
  RunTest("test_tar4p");
  RunTest("test_tar7");
  RunTest("test_tar7i");
  RunTest("test_tar7pi");
  RunTest("test_tar7imv");
  RunTest("test_tar8");
  # 2010-07-19: 2kid disappeared from remediated restraints
  #TEMP? RunTest("test_tar8i");
  #TEMP? RunTest("test_tar8imv");
  #TEMP? RunTest("test_tar8imu");
  #TEMP RunTest("test_tar9");
  #TEMP RunTest("test_tar9i");
  RunTest("test_tar10");
  RunTest("test_bug090");
}

if (($do_all != 0) or ($do_dist != 0)) {
  # 2010-07-19: 2kid disappeared from remediated restraints
  #TEMP? RunTest("test_dist1");
  #TEMP? RunTest("test_dist1u");
  #TEMP? RunTest("test_dist1i");
  #TEMP? RunTest("test_dist1imu");
  #TEMP RunTest("test_dist2i");
  #TEMP RunTest("test_dist2imu");
  RunTest("test_dist3rgi");
  RunTest("test_dist3rri");
  RunTest("test_dist3rgimv");
  RunTest("test_dist3rrimv");
}

if (($do_all != 0) or ($do_mult != 0)) {
  RunTest("test_mult1");
  RunTest("test_mult1mv");
  RunTest("test_mult2");
  RunTest("test_mult3");
  RunTest("test_mult3mu");
  RunTest("test_mult4");
  RunTest("test_mult5");
  # See bug 154.
  RunTest("test_mult6");
}

if (($do_all != 0) or ($do_s2p != 0)) {
  RunTest("test_s2p1");
  RunTest("test_s2p2");
  RunTest("test_s2p3");
  RunTest("test_s2p4");
  RunTest("test_s2p5");
}

if (($do_all != 0) or ($do_peak != 0)) {
  RunTest("test_peak1");
  #RunTest("test_peak1_21"); Fails because no _Spectral_dim data
  RunTest("test_peak2");
  #TEMP? RunTest("test_peak2_21");
  RunTest("test_peak3");
  RunTest("test_peak4");
  RunTest("test_peak5");
  RunTest("test_peak6");
  RunTest("test_peak7");
  RunTest("test_peak8");
  RunTest("test_peak9");
  RunTest("test_peak10");
  RunTest("test_peak11");
  RunTest("test_peak12");
  RunTest("test_peak13");
  RunTest("test_peak14");
  RunTest("test_peak15");
  RunTest("test_peak16");
  #RunTest("test_peak17"); Fails because no _Spectral_dim data
  RunTest("test_peak18");
  RunTest("test_peak19");
  RunTest("test_peak20");
  RunTest("test_peak21");
  RunTest("test_peak22");
}

#TEMP -- maybe add test of 4547 (has only RNA and DNA)
#TEMP -- 4141 has protein and DNA

print "\nWARNING: test22, test23, test_tar9, test_tar9i, test_dist2i\n";
print "and test_dis2imu are temporarily disabled\n";

print "\nTest_all result: ";
print LOGFILE "Test_all result (";
if ($do_all != 0) {
  print LOGFILE "all";
} else {
  if ($do_sparta) {
    print LOGFILE " sparta";
  }
  if ($do_tar) {
    print LOGFILE " tar";
  }
}
print LOGFILE "): ";
if ($result == 0) {
  print "OK\n";
  print LOGFILE "OK\n";
  exit 0;
} else {
  print "FAILED ($failed_list failed)\n";
  print LOGFILE "FAILED ($failed_list failed)\n";
  exit 1;
}
close LOGFILE;

#-----------------------------------------------------------
sub RunTest {
  my $test = $_[0];
  print "\nRunning $test...\n";
  my @args = @_;
  $args[0] = "tests/" . $args[0];
  if (system(@args) != 0) {
    $result = 1;
    if ($failed_list ne "") { $failed_list = $failed_list . " " };
    $failed_list = $failed_list . $test;
  }
}
