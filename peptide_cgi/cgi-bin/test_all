#! /usr/bin/perl -w

# Perform Peptide-CGI automated tests.

# $Id$

############################################################

use strict;

my $result = 0;
my $failed_list = "";

my $version = `./get_version`;
print "\nPeptide-CGI version: $version\n";

RunTest("test1");
RunTest("test1_3");
RunTest("test2");
RunTest("test3");
RunTest("test3_3");
RunTest("test4");
RunTest("test4_3");
RunTest("test6", "-noleech");
RunTest("test7");
RunTest("test9");
RunTest("test10");
RunTest("test11");
RunTest("test13");
RunTest("test13_3");
RunTest("test14");
RunTest("test14_3");
RunTest("test15", "-noleech");
RunTest("test15_3", "-noleech");
RunTest("test16", "-noleech");
RunTest("test17");
RunTest("test18");
RunTest("test19");
RunTest("test22", "-noleech");
RunTest("test23", "-noleech");
RunTest("test24");
RunTest("test26");
RunTest("test27");
RunTest("test27_3");
RunTest("test28");
RunTest("test29");
RunTest("test30");
RunTest("test32");
RunTest("test33");
RunTest("test34");
RunTest("test37");
RunTest("test38");
RunTest("test39");
RunTest("test40");
RunTest("test41");
RunTest("test46");
RunTest("test47", "-noleech");
RunTest("test49");
RunTest("test50");
RunTest("test51");
RunTest("test51_3");
RunTest("test52");
# Add this test back in when bug 065 is fixed.
#RunTest("test53");
RunTest("test54");
RunTest("test54_3");
RunTest("test55");
RunTest("test56");
RunTest("test57");
RunTest("test57_3");
RunTest("test58");
RunTest("test58_3");
RunTest("test59");
RunTest("test60");
RunTest("test60_3");
RunTest("test61");
RunTest("test61_3");
RunTest("test62");
RunTest("test62_3");
RunTest("test63");
#TEMP -- needs to work for DNA
#TEMP -- add 3.1 version
#RunTest("test64");
#TEMP -- needs to work for DNA
#TEMP -- add 3.1 version
#RunTest("test65");
#TEMP -- put this back in once bug 078 is fixed.
#RunTest("test66");

#TEMP -- maybe add test of 4547 (has only RNA and DNA)
#TEMP -- 4141 has protein and DNA

print "\nTest_all result: ";
if ($result == 0) {
  print "OK\n";
  exit 0;
} else {
  print "FAILED ($failed_list failed)\n";
  exit 1;
}

#-----------------------------------------------------------
sub RunTest {
  my $test = $_[0];
  print "\nRunning $test...\n";
  my @args = @_;
  $args[0] = "tests/" . $args[0];
  if (system(@args) != 0) {
    $result = 1;
    if ($failed_list ne "") { $failed_list = $failed_list . " " };
    $failed_list = $failed_list . $test;
  }
}
