#!/s/perl/bin/perl -w

#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 1999-2000
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

#  This script generates the data, session files, and html files for a
#  given BMRB entry (accession number).

#  Parameters:
#   number - the number of the file, ie 4101

#  can call using
#  http://pumori/cgi-bin/bmrb/make_view?number=4101

############################################################

# $Id$

############################################################

use CGI; # qw/:standard :html3/;
use strict;

my ($acc_no, $number, $summary_page, $query);
$query = new CGI;

$number = $query->param('number') || '4101';
$acc_no = 'bmr' . $number . '.str';
$summary_page = $number . 'y.html';

my ($current_dir, $session_dir, $data_dir);
$current_dir = `pwd`;
chomp $current_dir;
$session_dir = $current_dir . '/session_dir';
$data_dir = $current_dir . '/data_dir';

# Go to the data directory.
chdir ($data_dir)
  or dienice('Could not change to data directory ($data_dir)');

# If the summary page for this accession number already exists, assume
# that we don't have to do anything.
if (! -e $summary_page) {
  if (system ("./summarize $acc_no" ) ) {
    my ($tmpmsg);
    $tmpmsg = "";
    if (open(SUMM_OUT, "summarize.out")) {
      while (<SUMM_OUT>) {
        $tmpmsg .= $_ . '<p>';
      }
      close(SUMM_OUT);
    }
    dienice($tmpmsg);
  }

  # Make sure the summary page is world-readable.
  chmod 0644, "$summary_page";
  
  # Generate html pages...

  # First, chemical shift info.
  if (-e $number.'c.dat') {
    gen_html('csi');
    gen_html('deltashift');
    gen_html('percent');
  }

  # Then, additional stuff like in bmr4096.str.
  if (-e $number.'o.dat') {
    gen_html('coupling');
    gen_html('hxrates');
    gen_html('order');
    gen_html('relax');
  }
} # end if summary page doesn't exist
      
# Generate new sessions
# This needs to be done every time because we don't generate a separate
# set of session files for each accession number (we probably should
# do that).
if (-e $number.'c.dat') {
  chdir ($session_dir) 
    or dienice('Could not change to session_directory ($session_dir)');

  change_file('Csi','csi');
  change_file('DeltaShift','deltashift');
  change_file('Percent','percent');
}
  
if (-e $number.'o.dat') {
  chdir ($session_dir)
    or dienice('Could not change to session_directory ($session_dir)');
  change_not_insert('coupling');
  change_not_insert('hxrates');
  change_not_insert('order');
  change_not_insert('relax');
}

# return summary page
print $query->redirect("http://pumori.cs.wisc.edu/bmrb/html/$summary_page");
exit;

#------------------------------------------------------------------------
# Die in a way that generates output appropriate for a CGI script.

sub dienice {
  my ($errmsg);
  ($errmsg) = @_;
  print $query->header;
  print $query->start_html;
  print "<h2>CGI Error</h2>\n";
  print "$errmsg<p>\n";
  print $query->end_html;
  exit;
}

#------------------------------------------------------------------------
#TEMPTEMP -- better comment here
# also generates a DEVise session file.  But this doesn't add the
# dteInsertCatalogEntry to the front, because these base files are
# better prepared.
# parameters:
# 0 - the original data source in the base file

sub change_not_insert {
  my($mode);

  open(INPUT, "$_[0].base") ||
    dienice "Can't read $_[0].base";
  open(OUTSESSION, ">$_[0].ds") ||
    dienice "Can't output $_[0].ds";
  print OUTSESSION ("# DEVise session file generated by make_view\n\n");

  #TEMPTEMP -- what's 4096 doing in here? -- what's in the base file?
  while (<INPUT>) {
    s/4096/$number/g;
    print OUTSESSION $_;
  }
  
  close(INPUT);
  close(OUTSESSION);
  $mode = 0664; chmod $mode, "$_[0].ds";
}

#------------------------------------------------------------------------
# generates a DEVise session file for a new data file
# parameters:
# 0 - the DEVise schema, typically capitalized
# 1 - the original data source in the base file
sub change_file {
  my($schema_type, $schema_path, $data_name, $data_file, $data_path,
     $full_data_stream, $mode);
  $schema_type = $_[0];
  $schema_path =
    '/p/devise/demo/schema/schema/physical/bmrb:'.$schema_type;

  if ($schema_type eq 'Percent') {
    $schema_type = 'ChemShiftPercentage';
  }

  $data_name = $number . substr($_[1], 0, 1);
  $data_file = $data_name . '.dat';
  $data_path = '/p/devise/demo/dat/bmrb/dynamic_data';
  $full_data_stream = '.' . $data_name;
  
  open(INPUT, "$_[1].base") ||
    dienice "Can't read $_[1].base";
  open(OUTSESSION, ">$_[1].ds") ||
    dienice "Can't output $_[1].ds";
  
  print OUTSESSION ("# DEVise session file generated by make_view\n\n");
  print OUTSESSION ("# Per-session data source definitions\n");
  print OUTSESSION ("DEVise dteInsertCatalogEntry . {\"$data_name\" UNIXFILE $data_file $schema_type $schema_path \"\" 100 50 \"$data_path\" \"\"}\n\n");
  
  while (<INPUT>) {
    s/.$_[1]/$full_data_stream/g;
    print OUTSESSION $_;
  }
  
  close(INPUT);
  close(OUTSESSION);
  $mode = 0664; chmod $mode, "$_[1].ds";
}


#------------------------------------------------------------------------
# This displays the DEVise graphs for a page
# by creating a page for Javascreen graphs on the fly
# It uses the CGI.pm package

# Parameters:
#  0: acc_no - actually a file name, such as bmr4101.str

sub gen_html {
  my($letter, $outfile, $page, $data_name, $help_page, $session_dir);
  $page = $_[0];
  $session_dir = 'bmrb/dynamic_sessions/' . $page . '.ds';

  if ($page eq 'coupling') {
    $letter = 'g';
  } else {
    $letter = substr($_[0], 0, 1);
  }
  
  $data_name = $number . $letter;
  $outfile = $data_name . '.html';
  $help_page = 'help_' . $letter . '.html';

  open(OUTPUT, ">$outfile") ||
    die("can't output $outfile");
  
  print OUTPUT <<EndHeader;
  <HTML><HEAD><TITLE>BMRB Data Viewer for $acc_no</TITLE>
    <script type="text/javascript" language="JavaScript"
      src="helpmaster.js">
    </script>
    <script language="JavaScript">
      <!--
      function openhelp() {
      newwin= window.open("http://pumori.cs.wisc.edu/bmrb/help.html",
      "per",
      "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=300,height=300");
      // -->
      }
    </script>
  </HEAD><BODY BGCOLOR="white">

    <script language="JavaScript">
      popupvar1 = 'Return to summary page';
      popupvar2 = 'Keyboard shortcuts';
      popupvar3 = 'Explanations for plots';
      popupvar4 = 'DEVise home page';
    </script>

    <center>
    <table border=0 width=500>
      <tr align=center>
	  <td><a href="$summary_page" onMouseOut = "popupoff()" 
	      onMouseOver="popupon(popupvar1, document.all 
               || document.layers?event:null)">
	      <img onMouseOver="Return"
		border=0 src="arrow.gif"></a></td>
		  
	  <td><a href="JavaScript:openhelp()"
	      onMouseOut = "popupoff()"
	      onMouseOver="popupon(popupvar2, document.all 
	      || document.layers?event:null)">
	      <img border=0 src="keyboard.gif"></a></td>
	  
	  <td><a href="$help_page" onMouseOut = "popupoff()" 
	      onMouseOver="popupon(popupvar3, document.all 
	      || document.layers?event:null)">
	      <img border=0 src="qmark.gif"></a></td>
		
	  <td><a href="http://www.cs.wisc.edu/~devise"
	      onMouseOut = "popupoff()" 
	      onMouseOver="popupon(popupvar4, document.all 
	      || document.layers?event:null)">
	      <img border=0 src="devise_logo.jpg"></a></td>
	  <div id="popup" style="position:absolute; z-index:1;
	    visibility: hidden"></div>

	</tr>
      </table>
    </center>
    <hr>
EndHeader
;

  if ($page eq 'csi') {
    print OUTPUT $query->h2('Chemical Shift Index');
  } elsif ($page eq 'deltashift') {
    print OUTPUT $query->h2('Chemical Shift Delta');
  } elsif ($page eq 'percent') {
    print OUTPUT $query->h2('Percent Assigned Atoms');

  }  elsif ($page eq 'coupling') {
    print OUTPUT $query->h2('Coupling Constants');
  }  elsif ($page eq 'hxrates') {
    print OUTPUT $query->h2('H-Exchange Rates');
  }  elsif ($page eq 'order') {
    print OUTPUT $query->h2('Order Parameters');
  }  elsif ($page eq 'relax') {
    print OUTPUT $query->h2('Relaxation Parameters');
  }  
  
  # generate graphs here...
  
  print OUTPUT <<EndApp;
  <applet code=jsb.class archive=../../jsb.jar width=800 height=600>
    <param name="debug" value="0">
    <param name="session" value="bmrb/dynamic_sessions/$page.ds">
    <param name="cmdport" value="6666">
    <param name="imgport" value="6644">
    <param name="rubberbandlimit" value="4x4">
    <!-- old bgcolor     <param name="bgcolor" value="64+96+0"> -->
    <param name="bgcolor" value="0+0+0">
    <param name="screensize" value="800x600">
  </applet>
    
  <br><br>
  <center><h6>Comments?  Contact <a
    href="mailto:bmrbhelp\@bmrb.wisc.edu">bmrbhelp\@bmrb.wisc.edu</a>
   </h6></center>
EndApp
;
  print OUTPUT $query->end_html;
  
  close(OUTPUT);
}
