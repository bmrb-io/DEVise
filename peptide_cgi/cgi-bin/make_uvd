#! bin/perl -w

#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 2007
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#TEMPTEMP -- lots of updates for uvd
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

#  This script generates the data, session files, and html files for a
#  given BMRB entry (accession number).

#  Parameters:
#TEMPTEMP -- change number to restart ID
#   number - the accession number of the file, ie 4101
#   pdbid - the PDB ID to process
#   coord_index - the index of this coordinate frame in the parent
#   do_pdb - the level of PDB (structure) processing
#   do_csr - the level of chemical shift reference processing

#  can call using
#  http://bmrb.wisc.edu/cgi-bin/peptide-cgi/make_view?number=4101
#  http://bmrb.wisc.edu/cgi-bin/peptide-cgi/make_view?pdbid=1CEX&number=4101&coord_index=1

############################################################

# $Id$

############################################################

use CGI; # qw/:standard :html3/;
use strict;
#TEMP -- use taint?

my $debug = 0;

print "Content-type: text/plain\n\n" if ($debug);

my ($file, $name, $summary_page, $query);
$query = new CGI;

# BMRB accession number.TEMPTEMP
$file = $query->param('file');
$name = $query->param('name');

my ($pdbid, $coord_index, $do_pdb, $do_csr, $csr_index);
$pdbid = $query->param('pdbid');
$coord_index = $query->param('coord_index');
$do_pdb = $query->param('do_pdb');
$do_csr = $query->param('do_csr');
$csr_index = $query->param('csr_index');
my $size_str = $query->param('size_str') || '';

print "  file = $file\n" if ($debug);
print "  name = $name\n" if ($debug);
print "  pdbid = $pdbid\n" if ($debug);
print "  coord_index = $coord_index\n" if ($debug);

# File name of html summary page to generate.
my $summary_page_dir = getProperty("bmrb_mirror.summary_page_dir");
if ($do_pdb) {
  print "  has PDB\n" if ($debug);
  $summary_page = $summary_page_dir . "/uvd/" . $name . 'ac' . $coord_index .
    $size_str . '.html';
} elsif ($do_csr) {
  print "  has CSR\n" if ($debug);
  $summary_page = $summary_page_dir . "/uvd/" . $name . 'csr' . $csr_index .
    $coord_index . $size_str . '.html';
} else {
  print "  does not have PDB or CSR\n" if ($debug);
  $summary_page = $summary_page_dir . "/uvd/" . $name . 'y' . $size_str .
    '.html';
}

#TEMPTEMP -- should the uploaded data go into its own directory?
#TEMPTEMP -- okay, I think data file and name need to be split up in the args to make_uvd; that could probably take care of the data directory issue, too
my $cmd;
if ($do_pdb) {
  $cmd = "./uvd -pdbid $pdbid -file $file -name $name -do_pdb $do_pdb -coord_index $coord_index";
} elsif ($do_csr) {
  $cmd = "./uvd -pdbid $pdbid -file $file -name $name -do_csr $do_csr -coord_index $coord_index";
} else {
  $cmd = "./uvd -file $file -name $name";
}
my $result = `$cmd`;
chomp $result;
if ($result ne "OK") {
  my ($tmpmsg);
  $tmpmsg = "<p>Unable to process data for " . $name .
    ".</p>\n<pre>\n" . `cat tmp/s2d.out` . "</pre>\n";
  dienice($tmpmsg);
}

# return summary page
print $query->redirect($summary_page);
exit;

#------------------------------------------------------------------------
# Die in a way that generates output appropriate for a CGI script.

sub dienice {
  my ($errmsg);
  ($errmsg) = $_[0];
  print $query->header;
  print $query->start_html;
  print "<h2>CGI Error</h2>\n";
  print "$errmsg\n";
  print $query->end_html;
  exit;
}

#------------------------------------------------------------------------
# Get the value of a given s2d property.

# Parameters:
#   property name

# Returns:
#   property value

sub getProperty {
  my $prop_name = shift(@_);

  my $value = "";

  open(PROP_IN, "s2d.props") or dienice("Couldn't open property file: $!\n");

  my $line;
  while ($line = <PROP_IN>) {
    chomp $line;
    if (substr($line, 0, 1) ne "#") {
      if ($line =~ /^$prop_name=(.*)/) {
	$value = $1;
      }
    }
  }

  close(PROP_IN);

  return $value;
}
