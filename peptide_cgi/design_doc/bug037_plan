		Plan for Fixing Bug 037/038/041/064
			2008-07-30

* Generally index things by _Entity_assembly.ID (for 3.1 files) in
addition to residue number, so it is a unique index across the entire entry.
For 2.1 files, I'll essentially have to create my own entity assembly IDs
-- there will be one for each _Mol_system_component_name in the
molecular_system save frame.

* Write out one big residue list file (used by the 3D visualizations)
that has all of the entity assemblies -- it will have to have entity
assembly ID and residue number.  I think that the method that now writes
things out for a single entity should be expanded to write them out for
any number of entities/assemblies.  I probably have to keep some kind
of name->entity assembly ID mapping internally.

* All of the "regular" data files will also have to have entity assembly ID
in addition to residue number (so the 3D highlights will work correctly).

* For the 3D visualization, there will have to be a translation between
the entity assembly ID in the BMRB file and the entity ID in the mmCIF file,
since they won't necessarily match up -- the entity assembly ID in the 3D
data passed to DEVise must match the BMRB data.

* The 3D visualization will have to have two parallel GAttr links -- one
on entity assembly ID and one on residue number -- to make the highlighting
work correctly.  (This will mean that, for example, when you are looking
at a set of chemical shifts for a given assembly, only the residues
in that assembly will be highlighted by selecting with the cursor in the
data view.)

* The selection tree will also have to have a combination of entity
assmebly ID and residue number (maybe <entity assembly ID>/<residue number>?)
to make things unique.  I think that right now we are goofing up and
only showing one assembly in the selection trees, even if there are two
(or more) in the 3D data.

* We'll probably need JS client changes to put the entity assembly IDs
into the selection tree -- think about how the entity assembly IDs will
get passed in the GData.

* I need to figure out how this will work with the ambiguity code and
Pistachio visualizations.

* I need to think about how this will work for the chemical shift reference
back calculations -- maybe that is phase 2.

* Change "Molecule" to "Assembly" in 3D selection trees?  YES


Notes relating to testing:

* 5246 is a good one to test -- it has two entities that are proteins,
and have a bunch of PDB links.  At least some of the PDB entries have
both entities in them.

* 15016 has two entities, and chemical shifts for both -- right now,
processing totally fails on this.

* 4099 has three entities (two are polypeptides), but chemical shifts
only for one entity.

* 4129 has two entities that are both proteins, with chemical shifts
for both.  Unfortunately, the two entities have the same PDB IDs.  Maybe
I could make a modified version of this for testing that separates out
the PDB IDs.

* 5085 also looks like a good test -- has two proteins, chemical shifts
for both, somewhat different PDB IDs.  (See test42 on multiple_entities_br.)

* 5838 has two entities, each of which has a homodimer.

* I should find an entry with homodimers, that has different chem shifts
for different assemblies of the same entity.

* I need to find a (3.1) entry that has chemical shifts for different
entities and/or entity assemblies mixed together in the same save frame.

* I need to add a bunch of automatic tests for this, that use the
tests/check4line script to make sure that things get the right
entity assembly IDs in the generated data files.
