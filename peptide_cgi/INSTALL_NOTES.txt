		Peptide-CGI Installation Instructions
	$Id$

* NOTES

Be sure to think about possible DEVise/JavaScreen/Peptide-CGI version
incompatibilities when doing installations -- plan things to minimize
downtime.

Before installing the peptide-cgi software, you should install DEVise
and the DEVise JavaScreen.  You must also have web access to the BMRB web
site or a mirror of that site.

Note:  the Peptide-CGI software is designed to be untarred into a
directory that you use for configuration and testing, and then installed
into other directories for the "production" system once the configuration
is correct.  This way, when you need to install a new version, you can
untar the new version in a new directory, copy over the configuration
settings from your previous version, test that everything is okay, and
then install over the top of the existing "production" version.  This
allows upgrades with the minimum change of taking down the "production"
system.


* CONFIGURATION

- Pick the Makefile.config.* file that most closely matches your situation,
and copy it to Makefile.config.  (If you are a BMRB mirror site, you should
most likely pick Makefile.config.bmrb.)

- Edit Makefile.config as necessary, to account for any differences in
your setup, compared to what is specified in the config file.  CONFIG.txt
has detailed explanations of all of the configuration parameters.

- Run the command 'make setup'.


* PRE-INSTALLATION TESTING

You can test the peptide-cgi code before doing an actual installation by
doing the following:

- In the top-level directory, run the command 'make testsetup'.

- Then go into the cgi-bin directory and run the test_all script.
  This runs a number of tests; they should all work.  If all tests pass,
  the last line of out put is "Test_all result: OK".

  If test_all does not pass, you need to debug things before continuing.
  The best way to proceed is to see which specific tests fail, and debug
  them one at a time.  You should look at the s2d.out and vsc.out files
  in tmp, and also all of the *.err and *.warn files.  (Note that some
  warnings are normal.)  If you can't get test_all to pass, email
  devise@cs.wisc.edu or wenger@cs.wisc.edu.


* INSTALLATION

- Once you are ready to go ahead, run the command 'make install'.
  (Note that the $WWW_HOME directory has to exist already for
  the install to work.)

- Go to the appropriate cgi-bin directory (the "real" one, not the
one where the tarball is untarred) and run generate_examples.


* POST-INSTALLATION TESTING

The simplest way to do post-installation testing is to go to the
bmrb_select.html file in your web browser (the full URL obviously
depends exactly on how you set up your installation, but it should
be something like this:

    http://www.bmrb.wisc.edu/devise/peptide-cgi/bmrb_select.html

Enter an accession number (4081, for example), in the form, and click
the "View data" button.  You should eventually get a web page listing
the visualizations available for the given entry number, with links
to all of those visualizations.  When you click on one of the links,
you should go to a page that automatically starts up the DEVise JavaScreen
and loads the given visualization.

You should also be able to access the same visualizations by using the
NMR Data Browser.  Once you've gotten the data for a particular entry,
click the "See interactive data graphs" button to get to the page that
lists the visualizations for the entry.


* DEBUGGING

There are several areas where problems can occur:

1. In the Peptide-CGI code itself.
2. Loading the DEVise JavaScreen applet.
3. Establishing the connection between the applet and the JSPoP.
4. Opening the appropriate session.

In case 1, the best thing to do is to take a look at the s2d.out file,
which is in the cgi-bin/tmp directory.  If there are any errors in the
actual running of the peptide-cgi code, they should be in here, unless
it's a problem with the CGI setup itself, causing the peptide-cgi code
to not be run at all.  Note that s2d.out gets overwritten with each request
for data, so you may want to reproduce the error and then copy s2d.out.

In case 2 or case 3, this isn't really a peptide-cgi problem, so please
refer to the DEVise JavaScreen documentation.

In case 4, the best thing to do is to try opening the session directly in
DEVise, because you will get better error messages that way.  You can
also look in the JavaScreen/DEVise log files, which are in the directory
or directories where the JSPoP, JSS, and DEVise servers are installed.


FILES

The following files are generated by each invocation of the peptide-cgi
code:
- Summary html page (<number>y.html)
- Visualization-specific html page (<number>*.html)
- Visualization-specific session file (<number>*.ds)
- Visualization-specific data file (<number>*.dat)
- s2d.out (log file, empty if no errors)


CACHING

The files generated by an invocation of the peptide-cgi code are cached
and re-used when a previously-processed entry is requested again.  There
are two cases where the cached files are normally deleted and re-generated:
- The NMR-STAR file for the entry has changed more recently than the
summary html file for the entry.
- The version of the peptide-cgi code has been incremented since the summary
html file was generated.

You can force a deletion and re-generation of all files by deleting the
summary html file (<accession number>y.html).


* COMMON PROBLEMS

Probably the most common cause of problems when running Peptide-CGI is
misconfiguration.  Refer to the Peptide-CGI configuration document for
more information, and also look at the "debugging" section above.
You may also want to refer to the "Peptide-CGI directory setup at
computer sciences" and "Peptide-CGI directory setup at BMRB" documents
and make sure that you have all of the directories configured in a
similar manner.
