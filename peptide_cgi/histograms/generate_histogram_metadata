#! /s/std/bin/perl
# Generate the metadata for histograms.
# $Id$

#TEMP -- get rid of hard-coded histogram data directory

use strict;

my $debug = 0;

my $data_dir = "/p/devise/demo/dat/bmrb/bmrb_histogram_data";

# Get a list of files in the histogram data directory.
opendir DATADIR, $data_dir or die "Cannot open data directory $!";
my @files = readdir DATADIR;
closedir DATADIR;
#print "@files\n";

# Pull out the RNA histogram files (this is a way to get a list of all
# of the RNA residue/atom combinations we have to show).
my @rnalist = grep /^\w_.*_hist.txt/, @files;
#print "@rnalist\n";

open (HIST_LIST, ">dat/rna_hist_list.new") or
  die "Can't create file: $!";
open (HIST_LINK_LIST, ">dat/rna_hist_list_link.new") or
  die "Can't create file: $!";
open (HIST_DATASOURCES, ">session/rna_datasources.new") or
  die "Can't create file: $!";

print HIST_LIST "# <residue number> <atom number> <residue> <atom name> " .
  "<data source name>\n";
print HIST_LIST "#   <title>\n";
print HIST_LINK_LIST "# <residue number> <atom number> <residue> <atom name> " .
  "<data source name>\n";
print HIST_LINK_LIST "#   <title>\n";

my $prev_residue = "";
my $res_num = 0;
my $atom_num;

foreach my $rnaitem (@rnalist) {
  write_one("rna", $rnaitem);
}

close (HIST_LIST);
close (HIST_LINK_LIST);
close (HIST_DATASOURCES);



# Pull out the DNA histogram files (this is a way to get a list of all
# of the DNA residue/atom combinations we have to show).
my @dnalist = grep /^D\w_.*_hist.txt/, @files;
#print "@dnalist\n";

# --------------------------------------------------------------------
sub write_one {
  my $type = shift(@_);
  my $datafile = shift(@_);

  print "write_one($type, $datafile)\n" if ($debug);

  if ($datafile =~ m/^(\w{1,2})_(\w*)_.*/) {
    my $residue = $1;
    my $atom = $2;

    # Show only H, C, N, and P (as per email from Eldon 2007-10-31).
    if ($atom =~ m/^[HCNP]/) {
      my ($dev, $ino, $mode, $nlink, $uid, $gid, $rdev, $size, $atime,
        $mtime, $ctime, $blksize, $blocks) =
	stat $data_dir . "/" .  $datafile;
      print "  size: $size\n" if ($debug);

      # Zero-size data files are commented out in the metadata so they don't
      # show up as a possible selection in the session.  We leave them
      # in the data source definitions, though, so we can update by just
      # changing the metadata files.
      if ($size == 0) {
        print HIST_LIST "# ";
        print HIST_LINK_LIST "# ";
      }

      if ($residue ne $prev_residue) {
        $res_num++;
        $atom_num = 1;
        $prev_residue = $residue;
        print HIST_LIST "\n";
        print HIST_LINK_LIST "\n";
      } else {
        $atom_num++;
      }

      my $atomp = $atom;
      $atomp =~ s/p/'/g;
      my $datasourcehist = "bmrbhist_" . $type . "_" . $residue . "_" . $atom;
      my $datasourcelink = "bmrblink_" . $type . "_" . $residue . "_" . $atom;
      my $dataname = $residue . "_" . $atomp;
      my $datafilelink = $datafile;
      $datafilelink =~ s/hist/link/;

      print HIST_LIST "$res_num $atom_num $residue $atomp " .
        "$datasourcehist $dataname\n";
      print HIST_LINK_LIST "$res_num $atom_num $residue $atomp " .
        "$datasourcelink $dataname\n";

      print HIST_DATASOURCES "DEVise dteInsertCatalogEntry . " .
        "{\"$datasourcehist\" UNIXFILE " .
        "$datafile Histogram \$DEVISE_SCHEMA/physical/bmrb-Histogram \"\" " .
        "100 50 \"\$DEVISE_DAT/bmrb/bmrb_histogram_data\" \"\"}\n";

      print HIST_DATASOURCES "DEVise dteInsertCatalogEntry . " .
        "{\"$datasourcelink\" UNIXFILE " .
        "$datafilelink bmrb-Link \$DEVISE_SCHEMA/physical/bmrb-Link \"\" " .
        "100 50 \"\$DEVISE_DAT/bmrb/bmrb_histogram_data\" \"\"}\n";
    }
  }
}
