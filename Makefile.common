#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 1992-1996
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

#  Makefile for things common to all of the lower-level makefiles.

############################################################

#  $Id$

#  $Log$
#  Revision 1.22  1997/12/04 04:04:26  donjerko
#  Changed -gstabs to -g.
#
#  Revision 1.21  1997/11/24 23:12:48  weaver
#  Changes for the new ColorManager.
#
#  Revision 1.20  1997/11/23 22:57:36  donjerko
#  Added .cpp rule.
#
#  Revision 1.19  1997/11/05 00:18:25  donjerko
#  Made compilation to fail if any library fails.
#
#  Revision 1.18  1997/08/21 21:02:41  donjerko
#  Changed SPECIFIC_PATH to FALSE
#
#  Revision 1.17  1997/08/21 17:04:08  wenger
#  Changed back from -g to -gstabs for debug because -g still causes warnings.
#
#  Revision 1.16  1997/08/12 18:45:25  wenger
#  Fixes to get DEVise to compile on Linux; changed -gstabs to -g in
#  makefiles; various other makefile cleanups.
#
#  Revision 1.15  1997/06/16 16:04:18  donjerko
#  New memory management in exec phase. Unidata included.
#
#  Revision 1.14  1997/06/09 13:30:05  wenger
#  Removed path from ar, since /s/binutils/bin seems to have disappeared.
#
#  Revision 1.13  1997/05/28 15:37:14  wenger
#  Merged Shilpa's layout manager code through the layout_mgr_branch_2 tag.
#
#  Revision 1.12.4.2  1997/05/21 15:23:18  wenger
#  Removed setting of DEV_DEBUG, since this should be done as an environment
#  variable.
#
#  Revision 1.12.4.1  1997/05/20 16:10:13  ssl
#  Added layout manager to DEVise
#
#  Revision 1.12  1997/04/21 16:36:46  wenger
#  Removed lex.yy.c from CVS to fix compile problems; fixed some compile
#  warnings in the DTE; default is now to compile with neither -O nor
#  -gstabs -- set DEV_DEBUG env. var. to -1 for -O, anything else for
#  -gstabs; bumped version number up to 1.4.3.
#
#  Revision 1.11  1997/04/09 18:24:07  wenger
#  Fixed various makefiles (removed extra -gstabs flags, etc.);
#  setup script now links client.tcl into all cslib directories;
#  added 24 point font to available sizes in font selection GUI.
#
#  Revision 1.10  1997/04/08 01:45:55  donjerko
#  Defined DEV_DEBUG
#
#  Revision 1.9  1997/04/04 15:43:50  wenger
#  Set up makefiles to allow making a 'profile' version of Devise.
#
#  Revision 1.8  1996/11/05 18:22:57  wenger
#  Minor mods to get things to compile on SGI systems.
#
#  Revision 1.7  1996/10/15 17:48:28  wenger
#  Changed '-g' to '-gstabs' to debugging works on Pentiums.
#
#  Revision 1.6  1996/09/25 18:35:57  wenger
#  Updated again for Linux compile (Linux 2.0.6, Tcl 7.4, Tk 4.0).
#
#  Revision 1.5  1996/08/15 19:54:21  wenger
#  Added 'pure' targets for attrproj and devread; fixed some dynamic
#  memory problems.  Found some bugs while demo'ing for soils science
#  people.
#
#  Revision 1.4  1996/08/13 17:45:16  flisakow
#      Make consistently uses C and CC for gcc and g++, respectively.
#
#  Revision 1.3  1996/08/12 18:42:21  flisakow
#    Makefiles changed to use AR and RANLIB vars from Makefile.common.
#
#  Revision 1.2  1996/08/09 15:39:46  wenger
#  Modified makefiles to allow making static and Purify'd executables.
#
#  Revision 1.1  1996/08/06 20:10:45  wenger
#  Set up makefiles to easily compile with -g flag; other cleanup of
#  makefiles.
#

############################################################

# Define our linker and compiler.
SPECIFIC_PATH = FALSE

ifneq (, $(findstring LINUX, $(ARCH_FLAGS)))
  SPECIFIC_PATH = FALSE
endif

ifneq (, $(findstring SGI, $(ARCH_FLAGS)))
  SPECIFIC_PATH = FALSE
endif

ifeq ($(SPECIFIC_PATH),TRUE)
  LD = ld
  CC = /s/gcc-2.7.2/bin/g++
  C  = /s/gcc-2.7.2/bin/gcc
  AR = ar
else
  LD = ld
  CC = g++
  C  = gcc
  AR = ar
endif
RANLIB = ranlib

# Set up for optimize or debug compiling.
ifeq ($(DEV_DEBUG),)
	OPTFLAG =
else
    ifeq ($(DEV_DEBUG),-1)
	OPTFLAG = -O
    else
#	OPTFLAG = -gstabs
 	OPTFLAG = -g
    endif
endif

#TEMPLATE_FLAGS = -fexternal-templates
TEMPLATE_FLAGS = -fno-implicit-templates
#TEMPLATE_FLAGS = -fno-implicit-templates -fhuge-objects

# Set up for profiling.
ifneq ($(DEV_PROFILE),)
	CC += -pg
	C += -pg
endif

# Compile rules.
.c.o:
	$(CC) -c $(CFLAGS) $< 
.C.o:
	$(CC) -c $(CFLAGS) $<
.cc.o:
	$(CC) -c $(CFLAGS) $<
%.o : %.cpp
	$(CC) -c $(CFLAGS) $<

(%.o): %.c
	$(CC) -c $(CFLAGS) $< 
	$(AR) r $@ $%
	$(RM) $%
(%.o): %.C
	$(CC) -c $(CFLAGS) $< 
	$(AR) r $@ $%
	$(RM) $%
(%.o): %.cc
	$(CC) -c $(CFLAGS) $< 
	$(AR) r $@ $%
	$(RM) $%

# Purify
PURIFY = purify
PURE_OPT = -g++=yes -collector=$(ARCH_COLLECTOR) -cache-dir=/p/devise/cache \
	-always-use-cache-dir=yes
