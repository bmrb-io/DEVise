#! /bin/csh -f

#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 2001
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

#  Release DEVise.

############################################################

#  $Id$

#  $Log$
#  Revision 1.8  2001/12/17 23:18:35  wenger
#  Added Solaris 2.8 link.
#
#  Revision 1.7  2001/12/17 16:50:43  wenger
#  Added check to release script to warn if we're not doing the release on
#  trigger (needed because of the dynamic libraries).
#
#  Revision 1.6  2001/09/19 17:28:44  wenger
#  Added dynamic libraries to releases to /p/devise; made some improvements
#  to run scripts.
#
#  Revision 1.5  2001/08/30 17:12:08  wenger
#  Minor improvements to make errors more visible.
#
#  Revision 1.4  2001/08/30 16:47:06  wenger
#  Various improvements to release and install scripts.
#
#  Revision 1.3  2001/08/29 17:39:43  wenger
#  Major changes to DEVise and JavaScreen release scripts.
#

############################################################

#-----------------------------------------------------------
# Get and check command-line arguments.

if ($#argv < 2) then
  echo "Usage: release <destination> <arch1> [arch2] ..."
  echo "  Available architectures:"
  echo "    solaris (Solaris/Intel),"
  echo "    solsparc (Solaris/SPARC),"
  echo "    linux (Linux/Intel)"
  exit 1
endif

set dest = $1/release
set arches = ($argv[2-$#argv])

#-----------------------------------------------------------
# Check that we're doing this on trigger.

if (`hostname` != trigger) then
  echo "Release should be done on trigger (or another Intel/Solaris machine)"
  echo -n "Are you SURE you want to continue? [N] "
  set answer = $<
  if ($answer != y && $answer != Y) then
    echo Aborted.
    exit 1
  endif
endif

#-----------------------------------------------------------
# Make sure we have the files we need to do the release.

set files = (lib/control.tk doc/userman.ps doc/sysman.ps \
    doc/Agreement doc/Copyright doc/Disclaimer)
foreach file ($files)
  if (! -f $file) then
    echo "File $file missing."
    echo "Cannot proceed with release procedure."
    exit 1
  endif
end

set archfiles = (generic/generic generic/devise generic/deviseb \
    generic/devised)

foreach arch ($arches)
  foreach file ($archfiles)
    if (! -f $arch/$file) then
      echo "File $arch/$file missing."
      echo "Cannot proceed with release procedure."
      exit 1
    endif
  end
end

#-----------------------------------------------------------
# Confirm that we want to go ahead.

echo ""
echo "You are about to release YOUR copy of DEVise to the"
echo "general public. The destination directory is:"
echo "  $dest"
echo ""
echo "The release includes $arches executables,"
echo "Tcl/Tk code, and user and other documentation."
echo ""
echo -n "Are you absolutely sure you want to do this? [N] "

set answer = $<
if ($answer != y && $answer != Y) then
  echo Aborted.
  exit 1
endif

echo ""

#-----------------------------------------------------------
# Create top-level destination directory.

echo ""
echo "Creating top-level destination directory"

if (! -d $dest) then
  mkdir $dest
endif


#-----------------------------------------------------------
# Create bin and dyn_lib directories.

echo ""
echo "Creating bin and dyn_lib directories"

if (! -e $dest/bin) then
  ln -s bin_arch/@sys $dest/bin
endif

if (! -d $dest/bin_arch) then
  mkdir $dest/bin_arch
endif

if (! -e $dest/dyn_lib) then
  ln -s dyn_lib_arch/@sys $dest/dyn_lib
endif

if (! -d $dest/dyn_lib_arch) then
  mkdir $dest/dyn_lib_arch
endif

foreach arch ($arches)
  if ($arch == linux) then
    set mainarch = i386_linux
    set otherarches = (i386_linux22 i386_rh61 i386_rh62)
  else if ($arch == solaris) then
    set mainarch = sunx86_54
    set otherarches = (sunx86_55 sunx86_56 sunx86_57 sunx86_58)
  else if ($arch == solsparc) then
    set mainarch = sun4m_54
    set otherarches = (sun4m_55 sun4x_55 sun4x_56 sun4x_57 sun4x_58)
  endif

  foreach archdir (bin_arch dyn_lib_arch)
    pushd $dest/$archdir > /dev/null

    if (! -d $mainarch) then
      mkdir $mainarch
    endif

    foreach dir ($otherarches)
      if (! -e $dir) then
        ln -s $mainarch $dir
      endif
    end

    popd > /dev/null
  end
end

#-----------------------------------------------------------
# Copy libraries to dyn_lib directories.
cd scripts/release_scripts

foreach arch ($arches)
  echo "Releasing $arch dynamic libraries"

  ./dyn_lib_$arch'1' $dest/dyn_lib
end

cd ../..

#-----------------------------------------------------------
# Copy executables to bin directories.

foreach arch ($arches)
  echo "Releasing DEVise $arch executables"

  if ($arch == linux) then
    set mainarch = i386_linux
  else if ($arch == solaris) then
    set mainarch = sunx86_54
  else if ($arch == solsparc) then
    set mainarch = sun4m_54
  endif

  cp -p $arch/generic/generic $dest/bin_arch/$mainarch/devise
  cp -p $arch/generic/devise $dest/bin_arch/$mainarch/devisec
  cp -p $arch/generic/deviseb $dest/bin_arch/$mainarch
  cp -p $arch/generic/devised $dest/bin_arch/$mainarch
  chmod a+rx $dest/bin_arch/$mainarch/*
end

#-----------------------------------------------------------
# Release the Tcl/Tk (GUI) code.

echo ""
echo "Releasing Tcl/Tk code"
if (! -d $dest/lib) then
  mkdir $dest/lib
endif
cp -p lib/[a-z]* $dest/lib
cp -p lib/[A-Z]*.* $dest/lib
chmod a+r $dest/lib/*


#-----------------------------------------------------------
# Release run files.

echo ""
echo "Releasing run files"
if (! -d $dest/run) then
  mkdir $dest/run
endif
cp -p run.new/[a-z]* $dest/run

#-----------------------------------------------------------
# Release documentation.

echo ""
echo "Releasing documentation"
if (! -d $dest/doc) then
  mkdir $dest/doc
  endif
cp -p doc/*.ps doc/*.txt $dest/doc
cp -p doc/Agreement $dest/doc
cp -p doc/Copyright $dest/doc
cp -p doc/Disclaimer $dest/doc

#-----------------------------------------------------------
# Set up public directory.

tar c --exclude=CVS public | tar x --directory=$dest
