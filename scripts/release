#! /bin/csh -f

#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 2001-2009
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

#  Release DEVise.

############################################################

#  $Id$

#  $Log$
#  Revision 1.14  2006/07/14 19:45:43  wenger
#  More fixes to release scripts.
#
#  Revision 1.13  2005/12/06 20:08:44  wenger
#  Merged V1_7b0_br_4 thru V1_7b0_br_5 to trunk.  (This should
#  be the end of the V1_7b0_br branch.)
#
#  Revision 1.12  2002/07/19 17:07:54  wenger
#  Merged V1_7b0_br_2 thru V1_7b0_br_3 to trunk.
#
#  Revision 1.11  2002/06/17 19:41:46  wenger
#  Merged V1_7b0_br_1 thru V1_7b0_br_2 to trunk.
#
#  Revision 1.10.2.9  2005/12/05 21:47:09  wenger
#  Added CentOS support to the release script.
#
#  Revision 1.10.2.8  2005/10/22 18:53:28  wenger
#  Oops -- a typo in the release script -- installed dynamic libraries
#  in the wrong place.
#
#  Revision 1.10.2.7  2005/10/20 22:36:05  wenger
#  Mods for new dynamic library scheme.
#
#  Revision 1.10.2.6  2005/06/09 15:03:38  wenger
#  i386_rh9 now has i386_tao10 for 'otherarches'.
#
#  Revision 1.10.2.5  2004/08/26 21:28:15  wenger
#  Updated setup and release scripts for current Linux versions,
#  removed unneeded run stuff from setup script.
#
#  Revision 1.10.2.4  2004/05/24 18:11:02  wenger
#  Set things up to compile and release separately for RH 7.2 and RH 9.
#
#  Revision 1.10.2.3  2003/12/19 18:10:11  wenger
#  Merged redhat9_br_0 thru redhat9_br_1 to V1_7b0_br.
#
#  Revision 1.10.2.2.6.1  2003/12/18 19:25:30  wenger
#  Major cleanup of makefiles (got rid of all Makefile.linux
#  Makefile.solaris dependency files); executables compiled on RH 7.2
#  now have dynamic library dependencies that work on RH 9; updated
#  release scripts for new dynamic library dependencies; startup scripts
#  now work on RH 9.
#
#  Revision 1.10.2.2  2002/06/27 18:29:51  wenger
#  Fixed this so it doesn't clobber stuff already in the bin directory
#  (e.g., Tasvir and EmbeddedTk).
#
#  Revision 1.10.2.1  2002/06/05 14:14:14  wenger
#  Changed DEVise release scripts to fix RedHat 7.1/7.2 compatibility
#  problem.
#
#  Revision 1.10  2002/02/21 21:06:25  wenger
#  Fixed up release scripts to release for "linux" (RedHat 7.2) and
#  "linux_rh62" (RedHat 6.2).
#
#  Revision 1.9  2001/12/19 18:26:01  wenger
#  Added sunx86_58 architecture.
#
#  Revision 1.8  2001/12/17 23:18:35  wenger
#  Added Solaris 2.8 link.
#
#  Revision 1.7  2001/12/17 16:50:43  wenger
#  Added check to release script to warn if we're not doing the release on
#  trigger (needed because of the dynamic libraries).
#
#  Revision 1.6  2001/09/19 17:28:44  wenger
#  Added dynamic libraries to releases to /p/devise; made some improvements
#  to run scripts.
#
#  Revision 1.5  2001/08/30 17:12:08  wenger
#  Minor improvements to make errors more visible.
#
#  Revision 1.4  2001/08/30 16:47:06  wenger
#  Various improvements to release and install scripts.
#
#  Revision 1.3  2001/08/29 17:39:43  wenger
#  Major changes to DEVise and JavaScreen release scripts.
#

############################################################

#-----------------------------------------------------------
# Get and check command-line arguments.

if ($#argv < 2) then
  echo "Usage: release <destination> <arch1> [arch2] ..."
  echo "  Available architectures:"
  echo "    solaris (Solaris/Intel),"
  echo "    solsparc (Solaris/SPARC),"
  echo "    linux_rh72 (Linux (RedHat 7.2)/Intel)"
  echo "    linux_rh9 (Linux (RedHat 9)/Intel)"
  echo "    linux_tao10 (Linux (Tao 1.0)/Intel)"
  echo "    linux_centos (Linux (CentOS)/Intel)"
  echo "    linux_rhel5 (Linux (RHEL 5)/Intel)"
  exit 1
endif

set dest = $1/release
set arches = ($argv[2-$#argv])

#-----------------------------------------------------------
# Make sure we have the files we need to do the release.

set files = (lib/control.tk doc/userman.ps doc/sysman.ps \
    doc/Agreement doc/Copyright doc/Disclaimer)
foreach file ($files)
  if (! -f $file) then
    echo "File $file missing."
    echo "Cannot proceed with release procedure."
    exit 1
  endif
end

set archfiles = (release_dir dyn_lib)

foreach arch ($arches)
  foreach file ($archfiles)
    if (! -e $arch/$file) then
      echo "File $arch/$file missing."
      echo "Cannot proceed with release procedure."
      exit 1
    endif
  end
end

#-----------------------------------------------------------
# Confirm that we want to go ahead.

echo ""
echo "You are about to release YOUR copy of DEVise to the"
echo "general public. The destination directory is:"
echo "  $dest"
echo ""
echo "The release includes $arches executables,"
echo "Tcl/Tk code, and user and other documentation."
echo ""
echo -n "Are you absolutely sure you want to do this? [N] "

set answer = $<
if ($answer != y && $answer != Y) then
  echo Aborted.
  exit 1
endif

echo ""

#-----------------------------------------------------------
# Create top-level destination directory.

echo ""
echo "Creating top-level destination directory"

if (! -d $dest) then
  mkdir $dest
endif


#-----------------------------------------------------------
# Create bin and dyn_lib directories.

echo ""
echo "Creating bin and dyn_lib directories"

if (! -e $dest/bin) then
  ln -s bin_arch/@sys $dest/bin
endif

if (! -d $dest/bin_arch) then
  mkdir $dest/bin_arch
endif

if (! -e $dest/dyn_lib) then
  ln -s dyn_lib_arch/@sys $dest/dyn_lib
endif

if (! -d $dest/dyn_lib_arch) then
  mkdir $dest/dyn_lib_arch
endif

foreach arch ($arches)
  if ($arch == linux_rh62) then
    set mainarch = i386_linux
    set otherarches = (i386_linux22 i386_rh61 i386_rh62)
  else if ($arch == linux_rh72) then
    set mainarch = i386_rh72
    set otherarches = (i386_rh71)
  else if ($arch == linux_rh9) then
    set mainarch = i386_rh9
    set otherarches = i386_tao10
  else if ($arch == linux_tao10) then
    set mainarch = i386_tao10
    set otherarches = 
  else if ($arch == linux_centos) then
    set mainarch = i386_cent40
    set otherarches = 
  else if ($arch == linux_rhel5) then
    set mainarch = i386_rhel5
    set otherarches = 
  else if ($arch == solaris) then
    set mainarch = sunx86_54
    set otherarches = (sunx86_55 sunx86_56 sunx86_57 sunx86_58)
  else if ($arch == solsparc) then
    set mainarch = sun4m_54
    set otherarches = (sun4m_55 sun4x_55 sun4x_56 sun4x_57 sun4x_58)
  endif

  foreach archdir (bin_arch dyn_lib_arch)
    pushd $dest/$archdir > /dev/null

    if (! -d $mainarch) then
      mkdir $mainarch
    else
      if ($archdir == dyn_lib_arch) then
        \rm $mainarch/*
      endif
    endif

    foreach dir ($otherarches)
      if (! -e $dir) then
        ln -s $mainarch $dir
      endif
    end

    popd > /dev/null
  end
end

#-----------------------------------------------------------
# Copy executables to bin directories and libraries to
# dyn_lib directories.

foreach arch ($arches)
  echo "Releasing DEVise $arch executables"

  if ($arch == linux_rh62) then
    set mainarch = i386_linux
  else if ($arch == linux_rh72) then
    set mainarch = i386_rh72
  else if ($arch == linux_rh9) then
    set mainarch = i386_rh9
  else if ($arch == linux_tao10) then
    set mainarch = i386_tao10
  else if ($arch == linux_centos) then
    set mainarch = i386_cent40
  else if ($arch == linux_rhel5) then
    set mainarch = i386_rhel5
  else if ($arch == solaris) then
    set mainarch = sunx86_54
  else if ($arch == solsparc) then
    set mainarch = sun4m_54
  endif

  cp -p $arch/release_dir/* $dest/bin_arch/$mainarch
  chmod a+rx $dest/bin_arch/$mainarch/*

  cp -p $arch/dyn_lib/* $dest/dyn_lib_arch/$mainarch
  chmod a+rx $dest/dyn_lib_arch/$mainarch/*
end

#-----------------------------------------------------------
# Release the Tcl/Tk (GUI) code.

echo ""
echo "Releasing Tcl/Tk code"
if (! -d $dest/lib) then
  mkdir $dest/lib
endif
cp -p lib/[a-z]* $dest/lib
cp -p lib/[A-Z]*.* $dest/lib
chmod a+r $dest/lib/*


#-----------------------------------------------------------
# Release run files.

echo ""
echo "Releasing run files"
if (! -d $dest/run) then
  mkdir $dest/run
endif
cp -p run.new/[a-z]* $dest/run

#-----------------------------------------------------------
# Release documentation.

echo ""
echo "Releasing documentation"
if (! -d $dest/doc) then
  mkdir $dest/doc
  endif
cp -p doc/*.ps doc/*.txt $dest/doc
cp -p doc/Agreement $dest/doc
cp -p doc/Copyright $dest/doc
cp -p doc/Disclaimer $dest/doc

#-----------------------------------------------------------
# Set up public directory.

tar c --exclude=CVS public | tar x --directory=$dest
