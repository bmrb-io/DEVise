		How to Create a DEVise Distribution
		$Id$

* OVERVIEW

This is a quick-and-dirty documentation of what needs to be done for
a DEVise/JavaScreen distribution (by a distribution, I mean
making tar files that can be downloaded and installed by users who have
no access to the CS AFS tree).

This document should probably be improved eventually -- right now it's
mainly just a reminder to myself so I don't miss any steps.  RKW, 2002-09-30.

IMPORTANT NOTE:  the DEVise and JavaScreen files that are put into the
distribution come from /p/devise/release, not the area in which you're
running the distribution scripts.


* PROCEDURE

- If necessary, make a new stable series branch, and do a local release
  from that branch (see release_how_to).

- If necessary, compile DEVise on additional platforms.

- Generate DEVise/JavaScreen distribution:
    - Go to the dist directory.

    - Run "make setup".

    - Run "make dist".

    - Do a test installation from each tar file to make sure it works.

- BMRB mirror site instructions:
    - Copy bmrb_mirror_instructions into the appropriate subdirectory
      in /p/devise/ftp.

- Tag/archive sources:
    - The source tree should already have been tagged when the "internal"
      release was done.

    - There should already be a DEVise/JavaScreen source archive (see
      the release document).


* COMMON PROBLEMS

One thing that's a pain is that the DEVise tarballs can only be generated
from what's in /p/devise/release.  This means that you can't generate
new tarballs without doing a "local" release first -- which is really
backwards.  We should generate tarballs from the source tree we're in,
and install them instead of the other way around.

Another thing is that you can only generate the tarballs into a
subdirectory of /p/devise/ftp.  If you want to generate "unofficial"
tarballs you need to give some kind of bogus version name when prompted
by the distribution script.


* NOTES

"External" releases may skip versions, especially if they are released
in the development series (since I now want to give each "internal"
release a new revision number).
