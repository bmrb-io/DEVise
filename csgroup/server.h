/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _SERVER_H_RPCGEN
#define	_SERVER_H_RPCGEN

#include <rpc/rpc.h>

#ifdef __cplusplus
extern "C" {
#endif

#include "dbase.h"
typedef struct Msg {
	char *msg;
	int size;
} Msg;
extern bool_t xdr_ConnectInfo(XDR *, ConnectInfo *);
extern bool_t xdr_ServerList(XDR *, ServerList *);
extern bool_t xdr_Msg(XDR *, Msg *);

struct register_1_argument {
	char *arg1;
	ConnectInfo arg2;
	int arg3;
};
typedef struct register_1_argument register_1_argument;

struct deregister_1_argument {
	char *arg1;
	ConnectInfo arg2;
	int arg3;
};
typedef struct deregister_1_argument deregister_1_argument;

struct groupsend_1_argument {
	char *arg1;
	Msg arg2;
};
typedef struct groupsend_1_argument groupsend_1_argument;

#define	SERVER_PROG ((unsigned long)(0x3ffffff0))
#define	SERVER_VERS ((unsigned long)(1))

#if defined(__STDC__) || defined(__cplusplus)
#define	REGISTER ((unsigned long)(1))
extern  int * register_1(char *, ConnectInfo , int , CLIENT *);
extern  int * register_1_svc(char *, ConnectInfo , int , struct svc_req *);
#define	DEREGISTER ((unsigned long)(2))
extern  int * deregister_1(char *, ConnectInfo , int , CLIENT *);
extern  int * deregister_1_svc(char *, ConnectInfo , int , struct svc_req *);
#define	GROUPSEND ((unsigned long)(3))
extern  int * groupsend_1(char *, Msg , CLIENT *);
extern  int * groupsend_1_svc(char *, Msg , struct svc_req *);
extern int server_prog_1_freeresult(SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define	REGISTER ((unsigned long)(1))
extern  int * register_1();
extern  int * register_1_svc();
#define	DEREGISTER ((unsigned long)(2))
extern  int * deregister_1();
extern  int * deregister_1_svc();
#define	GROUPSEND ((unsigned long)(3))
extern  int * groupsend_1();
extern  int * groupsend_1_svc();
extern int server_prog_1_freeresult();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_register_1_argument(XDR *, register_1_argument*);
extern  bool_t xdr_deregister_1_argument(XDR *, deregister_1_argument*);
extern  bool_t xdr_groupsend_1_argument(XDR *, groupsend_1_argument*);

#else /* K&R C */
extern bool_t xdr_register_1_argument();
extern bool_t xdr_deregister_1_argument();
extern bool_t xdr_groupsend_1_argument();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_SERVER_H_RPCGEN */
