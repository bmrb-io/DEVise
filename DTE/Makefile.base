#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 1992-1996
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

############################################################

#  $Id$

############################################################

include ../../Makefile.common

// CC = /s/gcc-2.8.0/bin/g++

DTE_DIR = ../../DTE

#NO_RTREE = 1
#NO_UNIDATA = 1

PERL_INCL = -I$(PERL_CORE)

DTE_INCLUDES = \
	-I$(DTE_DIR)/Core \
	-I$(DTE_DIR)/DeviseSpecific \
	-I$(DTE_DIR)/StandAlone \
	-I$(DTE_DIR)/Script \
	-I$(DTE_DIR)/GUI \
     -I../../RTree/ \
     -I../../RTree/src \
     -I../../RTree/src/DBJussi \
     -I../../RTree/src/PageClasses \
     -I../../RTree/src/TypeSupport \
     -I../../RTree/src/Common \
     -I../../RTree/src/RTree \
	-I../../tape \
	-I../../src/color/export \
	-I../../graphics \
	-I../../graphics.new \
	-I../../unidata \
	-I../../DataReader \
	-I../DataReader \
	$(PERL_INCL)

#no-comment is for the perl files

CFLAGS_WO_TEMPLATES = $(ARCH_ENDIAN) $(DTE_INCLUDES) $(ARCH_FLAGS) \
	$(OPTFLAG) -DUNIX -DLIBCS -DHAVE_CONFIG_H
#	-fhandle-exceptions
#	-pedantic
#	-Wall -Wno-unused -Wno-comment \

CFLAGS = $(CFLAGS_WO_TEMPLATES) $(TEMPLATE_FLAGS)

ifdef DTE_DEBUG
	CFLAGS += -g
endif

#temporary flag for testing the optimizer

ifdef USE_OPTIMIZER
	CFLAGS += -DUSE_OPTIMIZER
endif

CORE_SRC = resolve.c lex.yy.c my.yacc.tab.c site.c types.c \
	listop.c catalog.c SockStream.c url.c StandardRead.c \
	Engine.c Aggregates.c QueryTree.c Util.c \
	InsertParse.c DeleteParse.c SchemaParse.c DropIndexParse.c \
	PQueue.c Sort.c UnionParse.c MinMax.c \
	ExecOp.c Inserter.c TypeCheck.c \
	Interface.c MaterializeParse.c MemoryMgr.c SeqSimVecAggregate.c\
	ODBCInterface.dummy.c Optimizer.c TableUtils.c \
	CreateTableParse.c RelationManager.c GlobalConstructors.c \
	RelationId.c DataRead.c ExecExpr.c

ifneq ($(IMPLICIT_TEMPLATES),1)
    CORE_SRC += Templates.c
endif

CORE_SRC_CPP =

STAND_ALONE_LIBS =

ifdef NO_UNIDATA
	CORE_SRC += DevRead.dummy.c
else
	CORE_SRC += DevRead.c
	STAND_ALONE_LIBS += -L../unidata -lunidata -L../DataReader -ldatareader -L$(PERL_CORE) -lperl
endif

# Set up for profiling.
ifneq ($(DEV_PROFILE),)
	ARCH_LDPOST  += -ldl
endif

DEVISE_SPECIFIC_SRC = \
	TDataDQL.c TDataDQLInterp.c CatalogComm.c CatalogComm2.c \
	ParseAPIDTE.c 
	
GUI_SRC = CatalogComm.c DTEControl.c 

STAND_ALONE_SRC = Common.cpp

ifdef NO_RTREE
	CORE_SRC += RTreeRead.dummy.c IndexParse.dummy.c SBMInit.dummy.c
else
	CORE_SRC += RTreeRead.c IndexParse.c SBMInit.c
	STAND_ALONE_LIBS += -L../RTree -lrtree -lsbm
endif

SCRIPT_SRC = post-query.c util.c

CORE_OBJ = $(CORE_SRC:.c=.o) $(CORE_SRC_CPP:.cpp=.o)

GUI_OBJ = $(CORE_OBJ) $(GUI_SRC:.c=.o) \
	ParseAPIDTE_SA.o

SCRIPT_OBJ = $(CORE_OBJ) $(SCRIPT_SRC:.c=.o) \
	scriptServer.o

SCRIPTSERVER_OBJ = $(CORE_OBJ) $(SCRIPT_SRC:.c=.o) \
	scriptServer_CS.o

SCRIPTCLIENT_SRC = scriptClient.c

SCRIPTCLIENT_OBJ = $(SCRIPTCLIENT_SRC:.c=.o)

LIBOBJ = $(CORE_OBJ) $(DEVISE_SPECIFIC_SRC:.c=.o)

STAND_ALONE_OBJ = $(STAND_ALONE_SRC:.cpp=.o)

LIBNAME = libdte.a

all: $(LIBNAME) unidata dte server datareader
lib: $(LIBNAME)

.PHONY: unidata 

unidata:
	cd ../unidata/ && make libunidata.a && cd ../DTE

datareader:
	cd ../DataReader/ && make libdatareader.a && cd ../DTE
	
rtree:
	cd ../RTree/ && make lib && make librarysbm && cd ../DTE

CorePartOfLib: $(LIBNAME)($(CORE_OBJ))

TableCreate: TableCreate.o $(STAND_ALONE_OBJ) $(CORE_OBJ)  unidata rtree
	$(CC) -o $@ $< $(STAND_ALONE_OBJ) $(CORE_OBJ) $(STAND_ALONE_LIBS) \
	$(ARCH_LDFLAGS) $(ARCH_SYSLIBS) $(ARCH_LDPOST)

TableCreate.pure: TableCreate.o $(STAND_ALONE_OBJ) $(CORE_OBJ)  unidata rtree
	purify $(CC) -o $@ $< $(STAND_ALONE_OBJ) $(CORE_OBJ) $(STAND_ALONE_LIBS) \
	$(ARCH_LDFLAGS) $(ARCH_SYSLIBS) $(ARCH_LDPOST)

dte: main.o $(STAND_ALONE_OBJ) $(CORE_OBJ) unidata rtree datareader
	$(CC) -o dte $< $(STAND_ALONE_OBJ) $(CORE_OBJ) $(STAND_ALONE_LIBS) \
	$(ARCH_LDFLAGS) $(ARCH_SYSLIBS) $(ARCH_LDPOST)

server: Server.o $(STAND_ALONE_OBJ) $(CORE_OBJ) unidata rtree datareader
	$(CC) -o $@ $< $(STAND_ALONE_OBJ) $(CORE_OBJ) $(STAND_ALONE_LIBS) \
	$(ARCH_LDFLAGS) $(ARCH_SYSLIBS) $(ARCH_LDPOST)

pure: main.o $(STAND_ALONE_OBJ) $(CORE_OBJ) unidata rtree datareader
	purify $(CC) -o dte.pure $< $(STAND_ALONE_OBJ) \
	$(CORE_OBJ) $(STAND_ALONE_LIBS) $(ARCH_LDFLAGS) \
	$(ARCH_SYSLIBS) $(ARCH_LDPOST)

dte.quant: main.o $(STAND_ALONE_OBJ) $(CORE_OBJ) unidata rtree datareader
	quantify $(CC) -o $@ $< $(STAND_ALONE_OBJ) $(CORE_OBJ) \
	$(STAND_ALONE_LIBS) \
	$(ARCH_LDFLAGS) $(ARCH_SYSLIBS) $(ARCH_LDPOST)

script: $(SCRIPT_OBJ) unidata
	$(CC) -o script $(SCRIPT_OBJ) $(ARCH_LDFLAGS) \
	$(RTREE_FLAGS) $(UNIDATA_FLAGS) $(ARCH_SYSLIBS) $(ARCH_LDPOST)

scriptServer:	$(SCRIPTSERVER_OBJ) unidata
	$(CC) -o scriptServer $(SCRIPTSERVER_OBJ) $(ARCH_LDFLAGS) \
	$(RTREE_FLAGS) $(UNIDATA_FLAGS) $(ARCH_SYSLIBS) $(ARCH_LDPOST) 

scriptClient:	$(SCRIPTCLIENT_OBJ)
	$(CC) -o scriptClient $(SCRIPTCLIENT_OBJ) $(ARCH_LDFLAGS) \
	$(ARCH_SYSLIBS) $(ARCH_LDPOST)

gui: $(GUI_OBJ)
	$(CC) -o gui $(GUI_OBJ) $(ARCH_GUILDFLAGS) \
	$(RTREE_FLAGS) $(UNIDATA_FLAGS) $(ARCH_GUISYSLIBS) $(ARCH_LDPOST)

# $(LIBNAME): $(LIBNAME)($(LIBOBJ))

$(LIBNAME): $(LIBOBJ)
	$(AR) cr $(LIBNAME) $(LIBOBJ)

YACC_SRC = $(DTE_DIR)/Core/my.yacc.tab.c\
			$(DTE_DIR)/Core/my.yacc.tab.h\
			$(DTE_DIR)/Core/my.yacc.output

$(DTE_DIR)/Core/my.yacc.tab.c: $(DTE_DIR)/Core/my.yacc $(DTE_DIR)/Core/my.yacc.tab.h 
	bison -d -v -o $@ $(DTE_DIR)/Core/my.yacc

$(DTE_DIR)/Core/my.yacc.tab.h: $(DTE_DIR)/Core/my.yacc
	bison -d -v -o $(DTE_DIR)/Core/my.yacc.tab.c $(DTE_DIR)/Core/my.yacc

$(DTE_DIR)/Core/lex.yy.c: $(DTE_DIR)/Core/my.lex $(DTE_DIR)/Core/my.yacc.tab.h
	flex -o$@ $(DTE_DIR)/Core/my.lex

ParseAPIDTE_SA.o: ParseAPIDTE.c ParseAPIDTE.o
	$(CC) -c $(CFLAGS) -DDTE_STANDALONE -o $@ $<

scriptServer_CS.o: scriptServer.c scriptServer.o common.h
	$(CC) -c $(CFLAGS) -DDTE_AS_SERVER -o $@ $<

$(LIBNAME)(Templates.o): Templates.c
	$(CC) -c  $(CFLAGS_WO_TEMPLATES) $<
	$(AR) r $@ $%
	$(RM) $%

Templates.o: Templates.c
	$(CC) -c  $(CFLAGS_WO_TEMPLATES) $<

.PHONY: clean mostlyclean

clean: mostlyclean
	-rm $(LIBNAME) dte gui core script server $(YACC_SRC)

mostlyclean:
	-rm $(LIBOBJ) $(STAND_ALONE_OBJ) $(GUI_OBJ) main.o
