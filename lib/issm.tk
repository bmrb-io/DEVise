#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 1992-1995
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

############################################################

#	$Id$

#	$Log$
#	Revision 1.5  1995/09/22 22:36:54  jussi
#	Added tape block size parameter.
#
#	Revision 1.4  1995/09/22 17:33:46  jussi
#	Added copyright message.
#
#	Revision 1.3  1995/09/21 15:36:00  jussi
#	Minor changes.
#
#	Revision 1.2  1995/09/12 22:41:47  jussi
#	Minor updates. ISSM dialog no longer grabs the focus and prevents
#	DEVise from proceeding.
#
#	Revision 1.1  1995/09/06 15:35:33  jussi
#	Initial revision of archive.

############################################################

set issm_firmlst ""
set issm_numfirms 0
set issm_selection ""

############################################################

proc issm_unique_name {symbol} {
    return [string trim $symbol]
}

############################################################

proc issm_extract_data {tapedrive filenum blocksize key file} {
    global sourceTypes issm_status

    set indexFile [lindex $sourceTypes(ISSM) 2]
    set err [catch { set firms [open $indexFile] }]
    if {$err > 0} {
	dialog .noFile "No Index File" \
		"Cannot find index file $indexFile." \
		"" 0 OK
	return -1
    }

    set offset -1

    while {[gets $firms line] >= 0} {
	set line [split $line ,]
	set symbol [lindex $line 0]
	if {$symbol == $key} {
	    set offset [lindex $line 1]
	    break
	}
    }

    close $firms

    if {$offset >= 0} {
	set issm_status "Extracting ISSM data..."
	issm_setupStatus .issmstatus
	issm_extractStocks $tapedrive $filenum $blocksize $key $offset $file
	catch {destroy .issmstatus}
    } else {
	dialog .notFound "Symbol Not Found" \
		"Cound not find ISSM symbol $key." \
		"" 0 OK
    }
}

############################################################

proc issm_setupButtons {buttons} {
    global issm_selection

    frame $buttons
    frame $buttons.row1
    pack $buttons.row1 -side top -pady 3m

    button $buttons.row1.select -text Select -width 10 -command {
	set issm_selection [get_issm_selection]
    }
    button $buttons.row1.cancel -text Cancel -width 10 -command {
	set issm_selection ""
    }
    pack $buttons.row1.select $buttons.row1.cancel -side left -padx 3m
}

############################################################

proc get_issm_selection {} {
    set err [catch { set owner [selection own] }]
    if {$err > 0} { return "" }
    if {$owner != ".issm.firmlst.list"} { return "" }
    set err [catch { set select [selection get] }]
    if {$err > 0} { return "" }
    set sel [list [string trim [string range $select 0 12]] \
	          [string trim [string range $select 13 42]]]
    return $sel
}

############################################################

proc issm_setupFirmList {flist} {
    global issm_selection

    frame $flist -relief groove -borderwidth 2
    listbox $flist.list -relief raised -borderwidth 2 \
	    -yscrollcommand "$flist.scroll set" -font 9x15 \
	    -selectmode single
    scrollbar $flist.scroll -command "$flist.list yview"
    label $flist.msg -text "Database has 0 stocks."
    pack $flist.msg -side top -pady 3m
    pack $flist.list -expand 1 -side left -fill both
    pack $flist.scroll -side right -fill y
    
    bind $flist.list <Double-Button-1> {
	set issm_selection [get_issm_selection]
    }
}

############################################################

proc issm_scanFirmList {listb msg} {
    global sourceTypes
    global issm_firmlst issm_numfirms issm_status

    $listb delete 0 end
    set issm_firmlst ""
    set issm_numfirms 0
    set indexFile [lindex $sourceTypes(ISSM) 2]
    set err [catch { set firms [open $indexFile] }]
    if {$err > 0} {
	dialog .noFile "No Index File" \
		"Cannot find index file $indexFile." \
		"" 0 OK
	return -1
    }

    set issm_status "Reading tape index..."
    issm_setupStatus .issmstatus

    while {[gets $firms line] >= 0} {
	lappend issm_firmlst [split $line ,]
	incr issm_numfirms
	if {$issm_numfirms % 500 == 0} {
	    $msg configure -text "Database has $issm_numfirms stocks."
	    update
	}
    }
    close $firms

    $msg configure -text "Database has $issm_numfirms stocks."
    update
    issm_updateFirmListBox $listb

    return 1
}

############################################################

proc issm_updateFirmListBox {listb} {
    global issm_firmlst issm_status

    set issm_status "Building stock list..."
    update

    $listb delete 0 end
    set n 0
    foreach sel $issm_firmlst {
	set symbol [lindex $sel 0]
	set numrecs [lindex $sel 2]
	set name [string trim [lindex $sel 5] "\""]
	set listitem [format "%-12.12s %-30.30s  %6d" $symbol $name $numrecs]
	$listb insert end $listitem
	if {$n % 500 == 0} { update }
	incr n
    }
    catch {destroy .issmstatus}
}

############################################################

proc issm_setupStatus {stat} {
    global issm_status
    toplevel $stat
    wm title $stat "Status"
    wm geometry $stat +150+400
    label $stat.msg -textvariable issm_status
    pack $stat.msg -side top -padx 8m -pady 4m
    grab set $stat
    update
    # for some reason raising the window takes a long time,
    # on the order of one half or even one second
    # raise $stat
}

############################################################

proc issmMain {} {
    global issm_firmlst issm_numfirms issm_selection

    # see if .issm window already exists; if so, just return
    set err [catch {set exists [wm state .issm]}]
    if {!$err} { wm deiconify .issm; return }

    set issm_selection ""

    toplevel .issm
    wm minsize .issm 505 400
    wm maxsize .issm 505 1000
    wm title .issm "Select Stock Symbol from ISSM Database"
    wm geometry .issm =505x650+50+50
    selection clear .issm

    frame .issm.firms -relief groove -borderwidth 2
    issm_setupFirmList .issm.firmlst
    pack .issm.firmlst -in .issm.firms -side left -expand 1 -fill both
    pack .issm.firms -side top -expand 1 -fill both -pady 1m

    issm_setupButtons .issm.buttons
    pack .issm.buttons -side top -pady 3m
    update

    # scan firm index only if the firm list doesn't exist yet
    if {!$issm_numfirms} {
	if {[issm_scanFirmList .issm.firmlst.list .issm.firmlst.msg] < 0} {
	    return "Error"
	}
    } else {
	.issm.firmlst.msg configure -text "Database has $issm_numfirms stocks."
	update
	issm_updateFirmListBox .issm.firmlst.list
    }

    tkwait variable issm_selection
    catch {destroy .issm}

    return $issm_selection
}
