
#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 1992-1995
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

############################################################

#  $Id$

############################################################

############################################################
# DEVise Commands Generated
# 1. DEVise GroupCmd CreateGroup <groupname> <passwd>
# 2. DEVise GroupCmd JoinGroup <groupname> <passwd>
# 3. DEVise GroupCmd LeadGroup
# 4. DEVise GroupCmd ListenGroup
# 5. DEVise GroupCmd LeaveGroup
# 6. DEVise GroupCmd ExitGroupMode
# Display Services offered
# 1. GroupPanelAction StatusLine <message>
# 2. GroupPanelAction ExitGroupPanel
############################################################

############################################################
## Methods (Initialization)
############################################################

set CurrentMsg " "
set CurrentRequest "-"
set CurrentGroup "No Group"
set CurrentStatus "Off"
set GroupWinTitle "DEVise Collaboration Control"
set ThisWinName "Null"
set	GroupName ""
set PassWd ""
set CheckRetVal ""
set Commands ""
set GroupSet ""

proc blink {value1 value2 interval } {
	global CurrentRequest colors
	if {$CurrentRequest == "R"} {
		.statusbar.message1 config -bg $value1 -fg $value2
		after $interval [list blink $value2 $value1 $interval]
	} else {
		.statusbar.message1 config -fg $colors(groupFrameAlertForeground) 
		.statusbar.message1 config -bg $colors(groupFrameBackground) 
	}
}
proc StatusLine { stat msg groupname status request} {
	global CurrentMsg CurrentGroup CurrentStatus CurrentRequest colors
#	if {$stat == "normal"} {
#		outputNormal $msg
#		outputNormal "\n"
#	}
#	if {$stat == "hilight"} {
#		outputHilight $msg
#		outputHilight "\n"
#	}
	set CurrentGroup $groupname

	if {$status =="1"} {
		set CurrentStatus "On"
	} else {
		set CurrentStatus "Off"
	}

	set CurrentMsg $msg
	if {$request =="1"} {
		set CurrentRequest "R"
		blink $colors(groupFrameAlertForeground)\
			$colors(groupFrameBackground) 500
	} else {
		set CurrentRequest "-"
		.statusbar.message1 config -fg $colors(groupFrameAlertForeground) 
		.statusbar.message1 config -bg $colors(groupFrameBackground) 
	}
}
proc ExitGroupPanel {} {
	destroy .groupwin
}
proc outputNormal { buf } {
	.groupwin.textframe.console insert insert "$buf" gdg
	.groupwin.textframe.console yview -pickplace insert
}

proc outputHilight { buf } {
	.groupwin.textframe.console insert insert "$buf" rdg
	.groupwin.textframe.console yview -pickplace insert
}

# to get the group list from the collaborator
proc SetGroupList { list } {
	global GroupSet 
	set GroupSet $list
	set retval [ DoJoinGroup ]
	if {$retval != ""} {
		DoCheckPasswd $retval
	}
}

proc DoJoinGroup {} {
    global dialogListVar GroupName PassWd CheckRetVal GroupSet

	if {[WindowVisible .checkwin]} {
		return ""
	}
	set GroupName ""
	set PassWd ""
    while { 1 } {
		set answer [ dialogList .getGroup "Select A Group" \
	        "Select A Group" "" 0 \
	        {OK New Cancel } $GroupSet]

	    if { $answer == 0 } {
	        if {$dialogListVar(selected) == ""} {
	        	set but [ dialog .destroyGroup "No Groups" \
	            "There are no groups right now" "" 0 OK ]
	        } else {
	            set GroupName $dialogListVar(selected)
				return "join"
			}
		}
		if { $answer == 1 } {
			set GroupName ""
			return "create"
	    }
		if { $answer == 2 } {
	        return ""
		}
	}
}

proc DoCheckPasswd { subcmd } {
	global GroupName PassWd Commands

	set Commands $subcmd
	toplevel .checkwin

	wm title .checkwin "Check Passwd"
	wm geometry .checkwin +200+200

	frame .checkwin.top
	frame .checkwin.bot
	frame .checkwin.top.l1
	frame .checkwin.top.l2
	pack  .checkwin.top -side top -pady 3m -fill both -expand 1
	pack  .checkwin.top.l1 -side top -pady 5m -fill x
	pack  .checkwin.top.l2 -side top -pady 5m -fill x
	pack  .checkwin.bot -side top -pady 5m -fill x


	label .checkwin.top.l1.t1 -text "Group Name:"
	label .checkwin.top.l2.t2 -text "Passwd    :"
	entry .checkwin.top.l1.e1 -relief sunken -width 30 -textvariable GroupName
	entry .checkwin.top.l2.e2 -relief sunken -width 30 -textvariable PassWd
	pack .checkwin.top.l1.t1 .checkwin.top.l1.e1 \
		-side left -padx 3m -fill x -expand 1
	pack .checkwin.top.l2.t2 .checkwin.top.l2.e2 \
		-side left -padx 3m -fill x -expand 1
	button .checkwin.bot.ok -text OK -width 10 -command {
		if {$GroupName ==""} {
		} else {
			if {$PassWd == ""} {
			} else {
				destroy .checkwin
				if { $Commands == "create"} {
					DEVise GroupCmd CreateGroup $GroupName $PassWd
				} else {
					DEVise GroupCmd JoinGroup $GroupName $PassWd
				}
			}
		}
	}		
	button .checkwin.bot.cancel -text CANCEL -width 10 -command {
		destroy .checkwin
	}		
	pack .checkwin.bot.ok .checkwin.bot.cancel -side left -padx 3m

	focus 	.checkwin
	grab	set .checkwin	
}


