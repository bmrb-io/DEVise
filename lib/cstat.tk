#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 1992-1995
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

############################################################

#	$Id$

#	$Log$
#	Revision 1.5  1995/11/10 21:45:08  jussi
#	Changed interface to be through sources.tcl.
#
#	Revision 1.4  1995/09/22 22:37:07  jussi
#	Added tape block size parameter.
#
#	Revision 1.3  1995/09/22 17:33:37  jussi
#	Added copyright message.
#
#	Revision 1.2  1995/09/19 15:57:45  jussi
#	Minor changes in appearance of listbox contents.
#
#	Revision 1.1  1995/09/19 15:42:04  jussi
#	Initial revision of archive.
#

############################################################

set cstat_firmlst ""
set cstat_numfirms 0
set cstat_selection ""

############################################################

proc cstat_unique_name {symbol} {
    return [string trim $symbol]
}

############################################################

proc cstat_extract_data {tapedrive filenum blocksize key file} {
    global sourceTypes cstat_status

    set indexFile [lindex $sourceTypes(COMPUSTAT) 2]
    set cstat_status "Extracting COMPUSTAT data..."
    cstat_setupStatus .cstatstatus
    cstat_extract $tapedrive $filenum $blocksize $indexFile $key $file
    catch {destroy .cstatstatus}
}

############################################################

proc cstat_setupButtons {buttons} {
    global cstat_selection

    frame $buttons
    frame $buttons.row1
    pack $buttons.row1 -side top -pady 3m

    button $buttons.row1.select -text Select -width 10 -command {
	set cstat_selection [get_cstat_selection]
    }
    button $buttons.row1.cancel -text Cancel -width 10 -command {
	set cstat_selection ""
    }
    pack $buttons.row1.select $buttons.row1.cancel -side left -padx 3m
}

############################################################

proc get_cstat_selection {} {
    set err [catch { set owner [selection own] }]
    if {$err > 0} { return "" }
    if {$owner != ".cstat.firmlst.list"} { return "" }
    set err [catch { set select [selection get] }]
    if {$err > 0} { return "" }
    set sel [list [string trim [string range $select 0 6]] \
	          [string trim [string range $select 8 37]]]
    return $sel
}

############################################################

proc cstat_setupFirmList {flist} {
    global cstat_selection

    frame $flist -relief groove -borderwidth 2
    listbox $flist.list -relief raised -borderwidth 2 \
	    -yscrollcommand "$flist.scroll set" -font 9x15 \
	    -selectmode extended
    scrollbar $flist.scroll -command "$flist.list yview"
    label $flist.msg -text "Database has 0 companies."
    pack $flist.msg -side top -pady 3m
    pack $flist.list -expand 1 -side left -fill both
    pack $flist.scroll -side right -fill y
    
    bind $flist.list <Double-Button-1> {
	set cstat_selection [get_cstat_selection]
    }
}

############################################################

proc cstat_scanFirmList {listb msg} {
    global sourceTypes
    global cstat_firmlst cstat_numfirms cstat_status

    $listb delete 0 end
    set cstat_firmlst ""
    set cstat_numfirms 0
    set indexFile [lindex $sourceTypes(COMPUSTAT) 2]
    set err [catch { set firms [open $indexFile] }]
    if {$err > 0} {
	dialog .noFile "No Index File" \
		"Cannot find index file $indexFile." \
		"" 0 OK
	return -1
    }

    set cstat_status "Reading tape index..."
    cstat_setupStatus .cstatstatus

    while {[gets $firms line] >= 0} {
	set name [lindex $line 4]
	set symbol  [lindex $line 5]
	set industry [lindex $line 1]
	set year [lindex $line 6]
	set line [format "%-6.6s  %-30.30s  %4d  19%2d" $symbol $name \
		$industry $year]
	lappend cstat_firmlst $line
	incr cstat_numfirms
	if {$cstat_numfirms % 500 == 0} {
	    $msg configure -text "Database has $cstat_numfirms companies."
	    update
	}
    }
    close $firms

    $msg configure -text "Database has $cstat_numfirms companies."
    update
    cstat_updateFirmListBox $listb

    return 1
}

############################################################

proc cstat_updateFirmListBox {listb} {
    global cstat_firmlst cstat_status

    set cstat_status "Building company list..."
    update

    $listb delete 0 end
    set n 0
    foreach sel $cstat_firmlst {
	$listb insert end $sel
	if {$n % 500 == 0} { update }
	incr n
    }
    catch {destroy .cstatstatus}
}

############################################################

proc cstat_setupStatus {stat} {
    global cstat_status
    toplevel $stat
    wm title $stat "Status"
    wm geometry $stat +150+400
    label $stat.msg -textvariable cstat_status
    pack $stat.msg -side top -padx 8m -pady 4m
    grab set $stat
    update
    # for some reason raising the window takes a long time,
    # on the order of one half or even one second
    # raise $stat
}

############################################################

proc cstatMain {} {
    global cstat_firmlst cstat_numfirms cstat_selection

    # see if .cstat window already exists; if so, just return
    set err [catch {set exists [wm state .cstat]}]
    if {!$err} { wm deiconify .cstat; return }

    set cstat_selection ""

    toplevel .cstat
    wm minsize .cstat 495 400
    wm maxsize .cstat 495 1000
    wm title .cstat "Select Name from Compustat Database"
    wm geometry .cstat =495x650+50+50
    selection clear .cstat

    frame .cstat.firms -relief groove -borderwidth 2
    cstat_setupFirmList .cstat.firmlst
    pack .cstat.firmlst -in .cstat.firms -side left -expand 1 -fill both
    pack .cstat.firms -side top -expand 1 -fill both -pady 1m

    cstat_setupButtons .cstat.buttons
    pack .cstat.buttons -side top -pady 3m
    update

    # scan firm index only if the firm list doesn't exist yet
    if {!$cstat_numfirms} {
	if {[cstat_scanFirmList .cstat.firmlst.list .cstat.firmlst.msg] < 0} {
	    return
	}
    } else {
	.cstat.firmlst.msg configure -text \
		"Database has $cstat_numfirms companies."
	update
	cstat_updateFirmListBox .cstat.firmlst.list
    }

    tkwait variable cstat_selection
    catch {destroy .cstat}

    return $cstat_selection
}
