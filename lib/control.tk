#========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 1992-2000
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

############################################################

#	$Id$	

#	$Log$
#	Revision 1.214  2000/06/20 16:57:50  wenger
#	Added commands and GUI to enable/disable the display of mouse location
#	in various views, and globally.
#	
#	Revision 1.213  2000/03/20 21:08:12  wenger
#	Added mouse/key help.
#	
#	Revision 1.212  2000/02/23 21:31:18  wenger
#	Re-implemented session description capability.
#	
#	Revision 1.211  2000/02/08 22:31:32  wenger
#	Oops!  Committed with Test menu selection enabled.
#	
#	Revision 1.210  2000/02/08 22:12:12  wenger
#	Added JAVAC_GetViewHelp and JAVAC_ShowViewHelp commands, added color
#	edge grid, and type to JAVAC_DrawCursor command, JavaScreen protocol
#	version now 4.0; added GUI to edit view help, and commands to save it
#	to session files.
#	
#	Revision 1.209  2000/01/14 18:23:23  wenger
#	Added resetAllFilters and JAVAC_ResetFilters commands to reset all visual
#	filters back to the values defined in the session file, without actually
#	re-opening the session.
#	
#	Revision 1.208  1999/12/06 18:41:13  wenger
#	Simplified and improved command logging (includes fixing bug 537, command
#	logs are now human-readable); added standard header to debug logs.
#	
#	Revision 1.207  1999/12/03 22:16:24  wenger
#	Reduced the number of commands required to update the mapping dialog.
#	
#	Revision 1.206  1999/12/02 16:26:52  wenger
#	Fixed bug 518 (confirm before saving a session the first time); got rid
#	of error message during normal Tasvir launch.
#	
#	Revision 1.205  1999/12/01 00:08:08  wenger
#	Added (commented out) test code to duplicate Omer's view insertion/
#	set view geometry problem.
#	
#	Revision 1.204  1999/11/24 15:44:32  wenger
#	Removed (unnecessary) CommandObj class; commands are now logged for the
#	monolithic form, not just the client/server form; other command-related
#	cleanups; added GUI for playing back command logs.
#	
#	Revision 1.203  1999/11/16 17:02:16  wenger
#	Removed all DTE-related conditional compiles; changed version number to
#	1.7.0 because of removing DTE; removed DTE-related schema editing and
#	data source creation GUI.
#	
#	Revision 1.202  1999/10/08 19:58:06  wenger
#	Fixed bugs 470 and 513 (crashes when closing a session while a query
#	is running), 510 (disabling actions in piles), and 511 (problem in
#	saving sessions); also fixed various problems related to cursors on
#	piled views.
#	
#	Revision 1.201  1999/10/04 19:37:17  wenger
#	Mouse location is displayed in "regular" DEVise.
#	
#	Revision 1.200  1999/09/29 17:22:29  wenger
#	"Regular" DEVise GUI displays session file name; some provision for
#	displaying mouse position like the JavaScreen does.
#	
#	Revision 1.199  1999/07/21 18:51:25  wenger
#	Moved alignment and data font information from view into mapping.
#	
#	Revision 1.198  1999/07/14 18:43:02  wenger
#	Added the capability to have axes without ticks and tick labels.
#	
#	Revision 1.197  1999/06/16 17:09:02  wenger
#	Added raiseAllWindows command and corresponding GUI.
#	
#	Revision 1.196  1999/06/11 17:50:19  wenger
#	Oops!  Wasn't supposed to commit with 'Test' enabled.
#	
#	Revision 1.195  1999/06/11 14:47:14  wenger
#	Added the capability (mostly for the JavaScreen) to disable rubberband
#	lines, cursor movement, drill down, and key actions in views (the code
#	to send this info to the JS is still conditionaled out until the JS is
#	ready for it).
#	
#	Revision 1.194  1999/06/10 21:17:35  wenger
#	Added '...' to appropriate menu items; added confirmation before doing
#	automated data source checking.
#	
#	Revision 1.193  1999/05/17 18:38:07  wenger
#	Views now have GData sending configuration that is only employed when
#	connecting to the JavaScreen (eliminates the need for the current kludgey
#	setup to send GData to the JS).
#	
#	Revision 1.192  1999/05/14 21:00:01  wenger
#	DEVise GUI now "remembers" the most recent session directory.
#	
#	Revision 1.191  1999/05/14 17:42:53  wenger
#	Minor menu improvements, including making data font accessible from window
#	menu.
#	
#	Revision 1.190  1999/05/14 16:46:58  wenger
#	View vertical scroll can now be configured by the user.
#	
#	Revision 1.189  1999/05/14 14:00:55  wenger
#	User can now control data font family, weight, and slant, on a per-view
#	basis.
#	
#	Revision 1.188  1999/05/07 14:14:01  wenger
#	Piled view symbols now working: pile name is specified in parent view's
#	mapping, views are piled by Z specified in parent's mapping; changes
#	include improvements to the Dispatcher because of problems exposed by
#	piled viewsyms; for now, view symbol piles are always linked (no GUI or
#	API to change this).
#	
#	Revision 1.187  1999/05/04 17:17:19  wenger
#	Merged js_viewsyms_br thru js_viewsyms_br_1 (code for new JavaScreen
#	protocol that deals better with view symbols).
#	
#	Revision 1.186  1999/04/29 17:36:47  wenger
#	Implemented 'fixed cursor size' option (for the sake of the JavaScreen).
#	
#	Revision 1.185  1999/04/21 20:35:48  wenger
#	Improved interface for changing fonts, titles, etc.:
#	* Fonts can now be set on a window-wide basis.
#	* Setting fonts, title, or axis date format in a piled view automatically
#	changes all views in the pile accordingly.
#	
#	Revision 1.184  1999/04/20 14:13:11  wenger
#	Added Refresh command (closes and re-opens current session).
#	
#	Revision 1.183  1999/04/14 15:30:27  wenger
#	Improved 'switch TData': moved the code from Tcl to C++, functionality
#	is more flexible -- schemas don't have to match exactly as long as the
#	appropriate TData attributes are present; TData can now be specified for
#	view symbols in parent view mapping; updated shape help.
#	
#	Revision 1.182  1999/03/24 17:26:20  wenger
#	Non-DTE data source code prevents adding duplicate data source names;
#	added "nice axis" feature (sets axis limits to multiples of powers of
#	10 if enabled); improved the propagation of DEVise errors back to the
#	GUI; fixed bug 474 (problem with view home).
#	
#	Revision 1.181  1999/03/12 18:46:13  wenger
#	Implemented duplicate symbol elimination.
#	
#	Revision 1.180  1999/03/10 19:11:14  wenger
#	Implemented DataReader schema GUI; made other improvements to schema
#	editing GUI, such as sorting the schema lists.
#	
#	Revision 1.179  1999/03/04 15:11:18  wenger
#	Implemented 'automatic filter update' features: views can be designated
#	to have their visual filters automatically updated with the 'Update
#	Filters' menu selection; alternatively, a session can be opened with
#	the 'Open, Update, and Save' selection, which updates the designated
#	filters and saves the updated session.
#	
#	Revision 1.178  1999/03/01 17:47:23  wenger
#	Implemented grouping/ungrouping of views to allow custom view geometries.
#	
#	Revision 1.177.2.5  1999/05/03 13:53:32  wenger
#	Commented out "Test" menu selection.
#	
#	Revision 1.177.2.4  1999/03/15 22:13:38  wenger
#	Fixed problems with view origin and data area origin for JavaScreen
#	sessions.
#	
#	Revision 1.177.2.3  1999/02/24 21:12:07  wenger
#	Set things up again for normal JavaScreen support as opposed to monolithic
#	JavaScreen testing.
#	
#	Revision 1.177.2.2  1999/02/24 21:03:05  wenger
#	Cursor drawing for JavaScreen is now working again (testing without the
#	JavaScreen).
#	
#	Revision 1.177.2.1  1999/02/24 17:48:46  wenger
#	Changes for view symbols in the JavaScreen are largely working (running
#	without the JavaScreen), except for cursor drawing (code is currently
#	configured to test JavaScreen support commands with monolithic executable).
#	
#	Revision 1.177  1999/01/04 15:33:53  wenger
#	Improved View symbol code; removed NEW_LAYOUT and VIEW_SHAPE conditional
#	compiles; added code (GUI is currently disabled) to manually set view
#	geometry (not yet saved to sessions).
#
#	Revision 1.176  1998/12/22 19:39:41  wenger
#	User can now change date format for axis labels; fixed bug 041 (axis
#	type not being changed between float and date when attribute is changed);
#	got dates to work semi-decently as Y axis labels; view highlight is now
#	always drawn by outlining the view; fixed some bugs in drawing the highight.
#
#	Revision 1.175  1998/11/23 19:19:56  donjerko
#	*** empty log message ***
#
#	Revision 1.174  1998/11/20 21:39:23  wenger
#	Removed 'Move' from Table menu (not implemented); cleaned up some debug
#	output.
#
#	Revision 1.173  1998/11/17 14:48:07  wenger
#	Changed master/slave to leader/follower and fixed a few problems in GUI,
#	session description, etc.
#
#	Revision 1.172  1998/11/11 14:31:12  wenger
#	Implemented "highlight views" for record links and set links; improved
#	ClassDir::DestroyAllInstances() by having it destroy all links before
#	it destroys anything else -- this cuts down on propagation problems as
#	views are destroyed; added test code for timing a view's query and draw.
#
#	Revision 1.171  1998/11/06 18:00:27  wenger
#	Multiple string tables fully working -- allows separate tables for the
#	axes in a given view.
#
#	Revision 1.170  1998/11/02 19:22:51  wenger
#	Added "range/MQL" session description capability.
#
#	Revision 1.169  1998/10/28 19:22:37  wenger
#	Added code to check all data sources (runs through the catalog and tries
#	to open all of them); this includes better error handling in a number of
#	data source-related areas of the code; also fixed errors in the propagation
#	of command results.
#
#	Revision 1.168  1998/10/20 19:46:28  wenger
#	Mapping dialog now displays the view's TData name; "Next in Pile" button
#	in mapping dialog allows user to edit the mappings of all views in a pile
#	without actually flipping them; user has the option to show all view names;
#	new GUI to display info about all links and cursors; added API and GUI for
#	count mappings.
#
#	Revision 1.167  1998/07/17 15:33:47  wenger
#	Improved link creation GUI as per request from Raghu; started on
#	DataReader schema GUI; changed version to 1.5.4.
#
#	Revision 1.166  1998/06/12 19:55:39  wenger
#	Attribute of TAttr/set links can now be changed; GUI has menu of available
#	attributes; attribute is set when master view is set instead of at link
#	creation; misc. debug code added.
#
#	Revision 1.165  1998/05/21 18:18:56  wenger
#	Most code for keeping track of 'dirty' GIFs in place; added 'test'
#	command to be used for generic test code that needs to be controlled
#	by GUI; added debug code in NetworkSend().
#
#	Revision 1.164  1998/04/16 21:51:53  wenger
#	Committed Sanjay's text code.
#
#	Revision 1.163  1998/03/27 15:09:15  wenger
#	Added dumping of logical session description, added GUI for dumping
#	logical or physical description; cleaned up some of the command code
#	a little.
#
#	Revision 1.162  1998/03/13 04:02:47  donjerko
#	*** empty log message ***
#
#	Revision 1.161  1998/03/12 22:57:51  wenger
#	Minor user interface improvements.
#
#	Revision 1.160  1998/03/12 18:25:50  donjerko
#	*** empty log message ***
#
#	Revision 1.159  1998/03/08 00:01:30  wenger
#	Fixed bugs 115 (I think -- can't test), 128, and 311 (multiple-link
#	update problems) -- major changes to visual links.
#
#	Revision 1.158  1998/02/26 20:50:33  taodb
#	Removed redundancy between groupcontrol.tk and control.tk
#
#	Revision 1.157  1998/02/20 08:46:23  beyer
#	resurected histograms
#
#	Revision 1.156  1998/02/20 06:17:17  beyer
#	resurected histograms
#
#	Revision 1.155  1998/02/12 17:17:28  wenger
#	Merged through collab_br_2; updated version number to 1.5.1.
#
#	Revision 1.154  1998/02/05 23:46:15  wenger
#	Added view-level specification of symbol alignment, API commands, simple
#	GUI for Sanjay.
#
#	Revision 1.153  1998/02/02 18:26:32  wenger
#	Strings file can now be loaded manually; name of strings file is now
#	stored in session file; added 'serverExit' command and kill_devised
#	script to cleanly kill devised; fixed bug 249; more info is now
#	printed for unrecognized commands.
#
#	Revision 1.152  1998/01/14 22:24:45  wenger
#	Changed 'Bring View Back' to 'Restore View'.
#	Revision 1.151.2.2  1998/02/12 05:10:13  taodb
#	Seperated GUI interface for group and normal version of DEVise
#
#	Revision 1.153  1998/02/02 18:26:32  wenger
#	Strings file can now be loaded manually; name of strings file is now
#	stored in session file; added 'serverExit' command and kill_devised
#	script to cleanly kill devised; fixed bug 249; more info is now
#	printed for unrecognized commands.
#
#	Revision 1.152  1998/01/14 22:24:45  wenger
#	Changed 'Bring View Back' to 'Restore View'.
#
#	Revision 1.151.2.1  1998/01/28 22:44:14  taodb
#	Added support for group communicatoin
#
#	Revision 1.151  1998/01/09 20:46:06  wenger
#	Merged cleanup_1_4_7_br_5 thru cleanup_1_4_7_br_6; fixed error in
#	previous merge.
#
#	Revision 1.150  1998/01/07 19:30:38  wenger
#	Merged cleanup_1_4_7_br_4 thru cleanup_1_4_7_br_5 (integration of client/
#	server library into Devise); updated solaris, sun, linux, and hp
#	dependencies.
#
#	Revision 1.149  1997/12/19 00:06:11  donjerko
#	*** empty log message ***
#
#	Revision 1.148  1997/12/05 16:51:46  wenger
#	Removed some unused Tcl code; removed 'Remove' selection from window
#	menu (duplicated 'Destroy'); removed Layout Manager menu selection.
#
#	Revision 1.147  1997/12/04 04:06:46  donjerko
#	New View interface.
#
#	Revision 1.146  1997/11/24 23:15:39  weaver
#	Changes for the new ColorManager.
#
#	Revision 1.145  1997/11/24 16:22:39  wenger
#	Added GUI for saving GData; turning on GData to socket now forces
#	redraw of view; GData to socket params now saved in session files;
#	improvement to waitForQueries command.
#
#	Revision 1.144  1997/11/05 00:23:56  donjerko
#	Added some error checking for DTE calls.
#
#	Revision 1.143.2.2  1998/01/07 16:00:49  wenger
#	Removed replica cababilities (since this will be replaced by collaboration
#	library); integrated cslib into DEVise server; commented out references to
#	Layout Manager in Tcl/Tk code; changed Dispatcher to allow the same object
#	to be registered and unregistered for different file descriptors (needed
#	for multiple clients); added command line argument to specify port that
#	server listens on.
#
#	Revision 1.143.2.1  1997/12/23 21:43:21  wenger
#	Disabled layout manager GUI and removed (old) layout manager code
#	from DEVise link.
#
#	Revision 1.143  1997/10/03 16:01:45  wenger
#	Enabled session opening and saving from back end; incremented version; a
#	few more minor fixes to session-related code.
#
#	Revision 1.142  1997/09/09 23:25:18  donjerko
#	*** empty log message ***
#
#	Revision 1.141  1997/08/21 21:06:36  donjerko
#	Added Materialize button, added isDTEType to some code in views.tcl
#
#	Revision 1.140  1997/07/22 15:36:47  wenger
#	Added capability to dump human-readable information about all links
#	and cursors.
#
#	Revision 1.139  1997/07/17 18:44:16  wenger
#	Added menu selections to report number of strings and save string space.
#
#	Revision 1.138  1997/07/15 19:15:34  wenger
#	All session files now saved as batch scripts instead of Tcl scripts.
#
#	Revision 1.137  1997/06/25 21:25:11  wenger
#	Added writeDesc (write session description) command needed by Hongyu's
#	Java client.
#
#	Revision 1.136  1997/06/10 19:31:59  wenger
#	Restored revisions 1.131 through 1.134 which were destroyed by the
#	last commit of this file.
#
#	Revision 1.135  1997/06/10 02:29:04  guangshu
#	Added Unidata Physical schema menu button.
#
#	Revision 1.134  1997/06/09 14:47:08  wenger
#	Added cursor grid; fixed bug 187; a few minor cleanups.
#
#	Revision 1.133  1997/06/05 21:08:54  wenger
#	User-configurability of '4', '5', and '6' keys is now completed.
#
#	Revision 1.132  1997/05/30 20:46:16  wenger
#	Added GUI to allow user to specify windows to exclude from display
#	print and/or print from pixmaps (for EmbeddedTk).  Exclusion is
#	implemented but pixmap printing is not.
#
#	Revision 1.131  1997/05/28 15:39:50  wenger
#	Merged Shilpa's layout manager code through the layout_mgr_branch_2 tag.
#
#	Revision 1.130  1997/05/08 00:14:36  wenger
#	Removed layout manager GUI.
#
#	Revision 1.129.4.3  1997/05/27 18:03:04  wenger
#	Minor bug fixes and cleanup to Shilpa's layout manager code and associated
#	code.
#
#	Revision 1.129.4.2  1997/05/20 19:49:55  ssl
#	Minor changes to compile LM code.
#
#	Revision 1.129.4.1  1997/05/20 16:11:24  ssl
#	Added layout manager to DEVise
#
#	Revision 1.129  1997/04/30 18:27:21  wenger
#	Added session text description capability.
#
#	Revision 1.128  1997/04/29 17:35:27  wenger
#	Minor fixes to new text labels; added fixed text label shape;
#	CheckDirSpace() no longer prints an error message if it can't get disk
#	status.
#
#	Revision 1.127  1997/04/29 14:34:46  wenger
#	User interface improvments: Quit and Close don't ask for confirmation
#	if there is no session open; the file selection box gives better info
#	as to what you are doing; Save and Save as aren't allowed if there is
#	no session open; changed default print filename from
#	/u/g/u/guangshu/public/html/pictures/map/ back to /tmp/devise again.
#
#	Revision 1.126  1997/03/21 20:21:15  donjerko
#	Fixed the problem with visualizing UNIXFILE
#
#	Revision 1.125  1997/03/20 22:29:50  guangshu
#	Changed statistics user interface.
#
#	Revision 1.124  1997/03/20 01:32:17  wenger
#	Fixed a bug in color allocation; color chooser for data shows old colors
#	(temporarily); background conversion of GData defaults to off.
#
#	Revision 1.123  1997/03/18 16:50:32  weaver
#	Modified DEViseColors for aesthetics and balance.
#
#	Revision 1.122  1997/03/12 16:55:36  wenger
#	Removed redundant mapping procedures (caused show of mapping dialog to fail).
#
#	Revision 1.121  1997/03/06 23:52:52  ssl
#	Added function and option to GraphData menu to flush tdata
#
#	Revision 1.120  1997/03/02 00:47:25  donjerko
#	Tdata used to be created before "Define Visualisation" window.
#	For DTE types, it is now being created after this window because the
#	user options can make query more restrictive and therefore cheaper to execute.
#	This screws up the Mapping dialog because only the restricted set of
#	attributes is passed as tdata.
#	This needs to be fixed once we aggree how to go about it.
#
#	Revision 1.119  1997/02/26 16:32:01  wenger
#	Merged rel_1_3_1 through rel_1_3_3c changes; compiled on Intel/Solaris.
#
#	Revision 1.118  1997/02/18 18:07:49  donjerko
#	Added index deletions.
#
#	Revision 1.117  1997/02/14 16:48:01  wenger
#	Merged 1.3 branch thru rel_1_3_1 tag back into the main CVS trunk.
#
#	Revision 1.116  1997/02/03 19:49:52  ssl
#	Added UI for Layout Manager and negative record links
#
#	Revision 1.115  1997/02/03 04:12:37  donjerko
#	Catalog management moved to DTE
#
#	Revision 1.114.4.9  1997/02/21 23:23:24  ssl
#	Made various updates to the UI for links :
#	1) Added info button in various places and in the main menu
#	2) Added loops around various operations to make them more intuitive
#	3) New button in Setlink master now creates a rec link by default
#	4) Info is displayed even if a link is empty
#	5  Removed the double OK buttons from the ResetLinkMaster window
#
#	Revision 1.114.4.8  1997/02/19 23:01:24  wenger
#	A few minor changes in the shape menu stuff to make the GUI more consistent
#	with the rest of Devise; added some more info to the shape help;
#	shape menu doesn't disable shape attributes (extra ones sometimes needed
#	for 3D, etc.); fixed a bug in how Cancel works in the Color Chooser;
#	various bug fixes in shape attribute menus.
#
#	Revision 1.114.4.7  1997/02/11 22:50:08  wenger
#	Removed 'All Views' option from axis toggling menu selections.
#
#	Revision 1.114.4.6  1997/02/11 20:46:40  wenger
#	Added GUI to delete session files; minor fix to release.bash.
#
#	Revision 1.114.4.5  1997/02/11 01:17:38  ssl
#	Cleaned up the UI for piled views
#	1) Made pile links invisible to user
#	2) Added create/destroy link options to the link menu
#	3) Enhanced the link info window to show all info about a link (type, views,
#	   master, link params )
#	4) Pile links get removed when the pile is unpiled
#	5) Set/Reset Master now only shows list of record links
#
#	Revision 1.114.4.4  1997/02/10 23:54:23  wenger
#	Moved view and window Destroy selections to the bottoms of the menus;
#	added a direct means to create a new window; minor improvements to
#	mapping dialog.
#
#	Revision 1.114.4.3  1997/02/09 16:14:20  wenger
#	Cleaned up the data source GUI a little more (as per suggestions from
#	Miron).
#
#	Revision 1.114.4.2  1997/02/08 02:08:41  ssl
#	1)Fixed mapping dialog to update when selected view changes
#	2)Removed  OK buttons and renamed Cancel to Close
#	3)Added a Flip button which allows user to flip views whenever the view
#	  is a pile. NOT ENABLED FOR STACKs or other views.
#
#	Revision 1.114.4.1  1997/02/07 15:21:43  wenger
#	Updated Devise version to 1.3.1; fixed bug 148 (GUI now forces unique
#	window names); added axis toggling and color selections to Window menu;
#	other minor fixes to GUI; show command to Tasvir now requests image to
#	be shown all at once.
#
#	Revision 1.114  1997/01/29 17:03:01  wenger
#	Removed main help (but not help demo or history) from user interface.
#
#	Revision 1.113  1997/01/27 20:15:23  wenger
#	Workaround to bug 137: disables Stack Control dialog buttons while drawing.
#
#	Revision 1.112  1997/01/24 16:38:34  wenger
#	Fixed bugs 078, 103, 125; also improved X font handling (does a better
#	job of finding fonts).
#
#	Revision 1.111  1997/01/22 23:47:27  jussi
#	Removed references to queryWinOpened, query3dWinOpened,
#	historyWinOpened, stackWinOpened, and helpWinOpened.
#	This information is now available by calling WindowExists
#	or WindowVisible.
#
#	Revision 1.110  1997/01/22 20:13:57  wenger
#	Removed other non-functional user interface components (includes workaround
#	for bug 127); fixed a number of OK/Cancel button positions.
#
#	Revision 1.109  1997/01/09 18:37:30  wenger
#	Removed some leftover debug code.
#
#	Revision 1.108  1997/01/08 18:56:50  wenger
#	Added 'View List' selection to window menu (gives a list of the views
#	in the window containing the selected view, especially useful for
#	piled views); fixed OK/Cancel in Remove Window dialog.
#
#	Revision 1.107  1996/12/30 23:57:50  andyt
#	First version with support for Embedded Tcl/Tk windows.
#
#	Revision 1.106  1996/12/27 17:00:38  wenger
#	Got latest code to compile for sun, solsparc, and hp; updated dependencies;
#	changed 'Import' to 'New Table' in main window GUI to reflect change of
#	function.
#
#	Revision 1.105  1996/12/27 14:59:44  donjerko
#	Import button is used only for importing new streams.
#	Added a button "Display" in the import window that immediately goes to
#	visualization.
#
#	Revision 1.104  1996/12/26 17:32:49  wenger
#	Fixed a mistake in Donko and Shaun's GUI changes.
#
#	Revision 1.103  1996/12/23 22:20:38  donjerko
#	  Commented out a bunch of non-working Tk/Tcl code.  Changed OK/Cancel
#	  pairs to have OK always on the left, Cancel on the right.  Renamed
#	  and moved around various menu items; to avoid confusion.
#
#	  More changes will follow later, after you're had time to adjust.
#
#	  Shaun/Donko
#
#	Revision 1.102  1996/12/20 16:50:35  wenger
#	Fonts for view label, x axis, and y axis can now be changed.
#
#	Revision 1.101  1996/12/15 20:23:52  wenger
#	Added view name to mapping editor window; added first version of font
#	selection GUI (currently disabled).
#
#	Revision 1.100  1996/11/28 19:03:10  ssl
#	Added an apply button to Mapping so that mappings can be changed without
#	closing the mapping window.
#
#	Revision 1.99  1996/11/26 17:25:21  ssl
#	added support for stacked views
#
#	Revision 1.98  1996/11/26 09:36:37  beyer
#	control-c and q now quit devise when typed on the control panel.
#
#	Revision 1.97  1996/11/25 22:31:31  beyer
#	1. extended .devise.rc search
#	2. added DestroyView command
#	3. query window updated properly, history window update changed
#	4. filter properly set to (0,100) instead of (100,0) when high,low values
#	   are not known.
#
#	Revision 1.96  1996/11/20 20:35:35  wenger
#	Fixed bugs 062, 073, 074, and 075; added workaround for bug 063; make
#	some Makefile improvements so compile works first time; fixed up files
#	to correspond to new query catalog name.
#
#	Revision 1.95  1996/11/20 16:49:16  jussi
#	Changed display/layout mode control to be a button. Changed 'Working...'
#	message to be a Stop button which aborts all queries.
#
#	Revision 1.94  1996/11/03 02:41:50  kmurli
#	Modified to include the query schema level. Also modified to include DQL
#	processing
#
#	Revision 1.93  1996/09/27 15:51:36  wenger
#	Added "Memory leaks" and "Memory in use" menu selections and associated
#	Tcl "DEVise" commands (conditionaled out for commit).
#
#	Revision 1.92  1996/09/13 23:08:00  guangshu
#	Changed print menu to "print with map" and "print without map".
#
#	Revision 1.91  1996/08/29 22:27:35  guangshu
#	Changed puts to proc Puts in case the client wants to be quiet.
#
#	Revision 1.90  1996/08/28 00:20:01  wenger
#	Improved use of Dali to correctly free images (use of Dali is now fully
#	functional with filenames in data).
#
#	Revision 1.89  1996/08/07 15:34:44  guangshu
#	Add an menu item in SourceData to view the statistics in text form.
#
#	Revision 1.88  1996/07/23 20:13:34  wenger
#	Preliminary version of code to save TData (schema(s) and data) to a file.
#
#	Revision 1.87  1996/07/19 03:34:01  jussi
#	Added Line and LineShape shapes.
#
#	Revision 1.86  1996/07/16 23:48:07  jussi
#	Added Session/Save as Batch Script command.
#
#	Revision 1.85  1996/07/15 21:13:32  jussi
#	Fixed the ordering of size, pattern, and orientation in EditMapping.
#
#	Revision 1.84  1996/07/15 14:25:13  jussi
#	Added statement that sets the window title of the main
#	control panel.
#
#	Revision 1.83  1996/07/13 00:21:47  jussi
#	Added View/Color Statistics menu option.
#
#	Revision 1.82  1996/07/09 16:00:43  wenger
#	Added master version number and compile date to C++ code (also
#	displayed in the user interface); added -usage and -version
#	command line arguments; updated usage message.
#
#	Revision 1.81  1996/07/09 14:27:21  jussi
#	Added missing parameter to OpenNewDataSource call.
#
#	Revision 1.80  1996/07/02 22:37:53  jussi
#	Added missing global variable declaration.
#
#	Revision 1.79  1996/07/01 21:39:11  jussi
#	Fixed small bug when restoring a template.
#
#	Revision 1.78  1996/07/01 19:35:39  jussi
#	Added View/Cursor/Set Record Cursor menu option. Updated code
#	to reflect the new tdata constructor interface.
#
#	Revision 1.77  1996/06/27 22:53:48  jussi
#	Added XOR color support. Reduced number of shape attributes
#	in EditMapping from 10 to 4. The additional attributes should
#	be made editable via a pop-up menu at some later point.
#
#	Revision 1.76  1996/06/27 19:11:44  jussi
#	Removed Block and 3DVector shapes from DEViseShapes list.
#
#	Revision 1.75  1996/06/20 17:12:30  guangshu
#	Statistics is now a separate window instead of a cascaded menu.
#
#	Revision 1.74  1996/06/20 16:48:20  jussi
#	Replaced green1 with DarkSeaGreen.
#
#	Revision 1.73  1996/06/16 01:54:43  jussi
#	Added PolylineShape, PolylineFileShape, and TextLabelShape.
#
#	Revision 1.72  1996/06/15 14:26:01  jussi
#	Added View/Foreground and View/Background menu commands.
#
#	Revision 1.71  1996/06/15 07:15:33  yuc
#	Add 3D query to the system.
#
#	Revision 1.70  1996/06/12 14:57:56  wenger
#	Added GUI and some code for saving data to templates; added preliminary
#	graphical display of TDatas; you now have the option of closing a
#	session	in template mode without merging the template into the main
#	data catalog; removed some unnecessary interdependencies among include
#	files; updated the dependencies for Sun, Solaris, and HP; removed
#	never-accessed code in ParseAPI.C.
#
#	Revision 1.69  1996/05/31 15:49:03  jussi
#	Added menu options for SetLinkMaster and ResetLinkMaster.
#
#	Revision 1.68  1996/05/22 21:05:43  jussi
#	Added HighLow shape.
#
#	Revision 1.67  1996/05/16 21:39:05  wenger
#	implemented saving schemas ans session file for importing tdata
#
#	Revision 1.66  1996/05/11 19:08:37  jussi
#	Added replica management.
#
#	Revision 1.65  1996/05/11 03:03:49  jussi
#	Added restoring, template, and sessionName as global variables.
#	These used to be in TkControl.c. Changed DoClose and made it
#	use the new DEVise clearAll command. Changed DoOpen and made
#	it work without DEVise openSession and openTemplate commands.
#
#	Revision 1.64  1996/04/23 20:39:24  jussi
#	Added HorLine and Segment shapes.
#
#	Revision 1.63  1996/04/14 00:25:41  jussi
#	Removed call to clearInterp.
#
#	Revision 1.62  1996/04/11 18:22:58  jussi
#	Major changes in the organization of the user interface.
#
#	Revision 1.61  1996/03/07 16:58:49  jussi
#	Disabled Visualize/Obsolete and View/Background for the moment.
#	Added View/Dimensions.
#
#	Revision 1.60  1996/02/28 18:20:33  yuc
#	Added 2 new shapes: Block and 3DVector.
#
#	Revision 1.59  1996/02/25 23:03:45  jussi
#	Default tmpdir is "tmp", not ".". See Init.c.
#
#	Revision 1.58  1996/02/02 21:27:35  jussi
#	Interface to DoSetBgColor changed.
#
#	Revision 1.57  1996/02/02 17:53:07  jussi
#	Added block shape to DEViseShapes.
#
#	Revision 1.56  1996/01/30 21:07:46  jussi
#	Added a few colors and added menu option to change background
#	color of a view. Moved some procedures to views.tcl.
#
#	Revision 1.55  1996/01/25 20:27:59  jussi
#	Improved logic in selecting which .rc file to load.
#
#	Revision 1.54  1996/01/24 21:52:27  jussi
#	Layout of window preserved when window is duplicated.
#
#	Revision 1.53  1996/01/23 20:49:59  jussi
#	Added Visualize/Import. Split view-related procedures into
#	separate file views.tcl. Split general utilities into
#	file util.tcl. Split history-related procedures into file
#	history.tcl.
#
#	Revision 1.52  1996/01/19 18:58:51  jussi
#	Added ClearTopGroups.
#
#	Revision 1.51  1996/01/19 18:32:36  jussi
#	GetTDataTemplate now uses stream catalog and not files
#	directly. Fixed minor bug in session files and pixel
#	maps.
#
#	Revision 1.50  1996/01/18 18:02:05  jussi
#	Added View/Destroy but made it not accessible to the user
#	because of pending questions whether all necessary data
#	structures are deleted in response to such a command.
#
#	Revision 1.49  1996/01/17 18:05:14  jussi
#	Default UserMode value now set in control.tk.
#
#	Revision 1.48  1996/01/16 16:49:21  jussi
#	Added Cursor Delete. Made Switch TData work with data stream
#	definition catalog. Made Window Duplicate be more complete
#	(it now duplicates all view settings, including statistics,
#	labels, and axis settings).
#
#	Revision 1.47  1996/01/15 23:07:26  jussi
#	Hid obsolete visualization commands from the casual user.
#
#	Revision 1.46  1996/01/13 23:09:13  jussi
#	Added support for Z attribute and shape attribute 2.
#
#	Revision 1.45  1996/01/13 21:03:50  jussi
#	Default .rc file is now devise.rc. Session files are now smarter
#	about the TDatas they try to open; the absolute pathnames are no
#	longer stored in a session file, rather the display name is used.
#
#	Revision 1.44  1996/01/13 17:59:07  jussi
#	Initialization is read from devise.rc if no other .rc file
#	is found.
#
#	Revision 1.43  1996/01/09 16:39:51  jussi
#	Added support for Tcl expressions as mappings.
#
#	Revision 1.42  1995/12/29 17:30:53  jussi
#	Minor fixes. Changed format of computed names in UniqueName.
#
#	Revision 1.41  1995/12/22 18:08:51  jussi
#	Added Vector Shape. Fixed session file code; cursor names may
#	have spaces which used to break the session file.
#
#	Revision 1.40  1995/12/20 02:26:26  ravim
#	Variable to store temp. directory location added.
#
#	Revision 1.39  1995/12/18 03:12:46  ravim
#	Confidence intervals displayed.
#
#	Revision 1.38  1995/12/15 03:39:37  ravim
#	KGraph can display count. Schema browsing capabilities determined
#	by the user mode.
#
#	Revision 1.37  1995/12/14 15:46:35  jussi
#	Added support for TileLayout view layout with automatic or manual
#	layout control.
#
#	Revision 1.36  1995/12/12 01:47:18  ravim
#	Physical/logical schema support.
#
#	Revision 1.35  1995/12/08 23:47:46  ravim
#	Window name is passed as parameter in creating KGraph.
#
#	Revision 1.34  1995/12/07 02:17:07  ravim
#	User can choose the stats to be displayed.
#
#	Revision 1.33  1995/12/06 05:42:03  ravim
#	Added function to display a KGraph.
#
#	Revision 1.32  1995/12/04 18:04:45  jussi
#	User can now specify a view title which appears at the top of the view.
#	Changed statistics toggling to use getViewStatistics and
#	setViewStatistics so that a single view or all views can be toggled,
#	based on the status of the currently selected view.
#
#	Revision 1.31  1995/12/02 21:45:17  jussi
#	Added support for TK_WINDOW i.e. Tcl/Tk controls surrounding each
#	view and window.
#
#	Revision 1.30  1995/11/29 17:58:39  jussi
#	Slightly better interface to removing a window.
#
#	Revision 1.29  1995/11/29 17:49:48  jussi
#	Added RemoveWindow command.
#
#	Revision 1.28  1995/11/28 05:34:48  ravim
#	Support for statistics.
#
#	Revision 1.27  1995/11/28 00:03:41  jussi
#	Added printing of views to menu.
#
#	Revision 1.26  1995/11/27 15:21:12  jussi
#	Instead of reading a single, host-dependent config file, control.tk now
#	reads a common, host-independent config file, followed by a smaller
#	host-dependent config file *if one exists*.
#
#	Revision 1.25  1995/11/24  07:47:27  ravim
#	Mapping between different types of data sources can be defined.
#	Anything that cannot be resolved automatically can be handled manually.
#
#	Revision 1.24  1995/11/22 00:33:13  jussi
#	Fixed bug in function that saves session files; spaces embedded
#	in TData names needed to be protected by braces.
#
#	Revision 1.23  1995/11/21 23:36:19  jussi
#	Made complex mappings editable. Edit Mapping function now allows the
#	user to edit all parameters of an interpreted mapping. E.g. color can
#	be made to depend on an attribute in user data or constant. Made pixel
#	width and height information visible to the user.
#
#	Revision 1.22  1995/11/20 22:21:33  jussi
#	Added schemadir, cachedir, and sessiondir.
#
#	Revision 1.21  1995/11/19 06:03:59  ravim
#	New schema options - user/superuser
#
#	Revision 1.20  1995/11/14 22:53:17  jussi
#	Moved stream selection dialog to be part of macro definition
#	utility (DefSource in macrodef.tk). Elimininated 'Source'
#	menu bar and moved remaining menu option (Define Source)
#	to the Visualize menu (Sources... option).
#
#	Revision 1.19  1995/11/10 21:56:54  jussi
#	Minor fix.
#
#	Revision 1.18  1995/11/10 21:45:05  jussi
#	Changed interface to ISSM and Compustat to be through
#	sources.tcl.
#
#	Revision 1.17  1995/11/02 16:45:59  jussi
#	Removed confirmation message when removing a view from a window.
#	When moving a view from one window to another, current selection
#	determines the view to be moved; the user is not asked to select
#	a view from a list. Reorganized some View menu items.
#
#	Revision 1.16  1995/10/11 17:03:27  ravim
#	Schema browser invoked from the main menu bar.
#
#	Revision 1.15  1995/09/28 17:45:16  jussi
#	Added 'Save as Template' command. Minor other improvements.
#
#	Revision 1.14  1995/09/22 17:33:35  jussi
#	Added copyright message.
#
#	Revision 1.13  1995/09/21 15:36:16  jussi
#	Added import data types.
#
#	Revision 1.12  1995/09/19 16:56:18  jussi
#	Added interfacing to Compustat. Fixed bug in GetClass.
#
#	Revision 1.11  1995/09/13 14:24:56  jussi
#	Extracted macro definition code and moved it to macrodef.tk.
#	Added interfacing to SEQ and SQL queries.
#
#	Revision 1.10  1995/09/12 22:05:45  jussi
#	Fixed some problems in interfacing new user interface to
#	DEVise. New user interface was creating too many mapping
#	classes and instances of mappings.
#
#	Revision 1.9  1995/09/11 22:27:07  jussi
#	Further integration of the new user interface and DEVise.
#	User can now select 1 to n attributes in the automatic
#	map generator.
#
#	Revision 1.8  1995/09/08 22:17:57  jussi
#	Integrated creation of TData source, windows, and links in DEVise.
#
#	Revision 1.7  1995/09/08 20:35:25  jussi
#	Added definition of data source and size of new windows.
#
#	Revision 1.6  1995/09/07 22:59:41  jussi
#	Implemented saving and loading sessions (new type) and automatic
#	view creation.
#
#	Revision 1.5  1995/09/07 20:34:21  jussi
#	Finished an intermediate stage in designing an integrated
#	tdata/window/map/view/link definition.
#
#	Revision 1.4  1995/09/05 22:47:55  jussi
#	Added/updated CVS header.
#
#	Revision 1.3  1995/09/05 22:45:33  jussi
#	Updated CVS header.

############################################################
set libdir $env(DEVISE_LIB)
source $libdir/tool.tcl

# Note: this shape-value mapping must correspond to that of the _shapes[] array
# in graphics.new/MappingInterp.c.  RKW 4/29/97.
set DEViseShapes \
	{{0 Rect} {1 RectX} {2 Bar} {13 Line} {14 {Line Shade}} \
        {3 {Regular Polygon}} {4 Oval} {5 Vector} {6 HorLine} \
        {7 Segment} {8 HighLow} {9 Polyline} {10 {Image}} \
	{11 {Polyline File}} {12 {Text Label}} {16 {Fixed Text Label}} \
	{15 {Tcl/Tk Window}} {17 {View}} {18 {Text Data Label}} }

# global variables:
# restoring: true if restoring session or template
# template: true if restoring template
# sessionName: name of current session
# curView: current view selected
# lastView: last view selected
# UserMode: 1 for end-user mode (logical schemas), 0 for
#           administrator mode (physical schemas)

set exitmode ""
set restoring 0
set template 0
set sessionName ""
set sessionHasBeenSaved 0
set curView ""
set lastView ""
set UserMode 1
set templateMode 0
# set statistics defaults
set statmean 0 
set statmax 1
set statmin 0
set statcurr 1
set statcilevel "000"

# set Kiviat graph defaults
set kval 0
set kcurr 1
set knew 0

set libdir "."
if { [info exists env(DEVISE_LIB)] } {
    set libdir $env(DEVISE_LIB)
}
set datadir "."
if { [info exists env(DEVISE_DAT)] } {
    set datadir $env(DEVISE_DAT)
}
set cachedir "."
if { [info exists env(DEVISE_CACHE)] } {
    set cachedir $env(DEVISE_CACHE)
}
set schemadir "."
if { [info exists env(DEVISE_SCHEMA)] } {
    set schemadir $env(DEVISE_SCHEMA)
}
set sessiondir "."
if { [info exists env(DEVISE_SESSION)] } {
    set sessiondir $env(DEVISE_SESSION)
}
set tmpdir "tmp"
if { [info exists env(DEVISE_TMP)] } {
    set tmpdir $env(DEVISE_TMP)
}

#####ENV variables for LM
#set libdirLM "."
#if { [info exists env(LM_LIB)] } {
#    set libdirLM $env(LM_LIB)
#}
#set datdirLM "."
#if { [info exists env(LM_DAT)] } {
#    set datdirLM $env(LM_DAT)
#}
#set tmpdirLM "."
#if { [info exist env(LM_TMP)] } {
#    set tmpdirLM $env(LM_TMP) 
#}

set filterdir $schemadir/query

set hostCfg $libdir/config.tcl
if {![file exists $hostCfg]} {
    puts "Cannot read configuration file $hostCfg"
} else {
    Puts "Reading configuration file $hostCfg"
    source $hostCfg
}

if {![catch {set hostCfg $libdir/config.$env(HOSTNAME)}]} {
    if {[file exists $hostCfg]} {
	Puts "Reading configuration file $hostCfg"
	source $hostCfg
    }
}

source $libdir/color.tk
source $libdir/dialog.tk
source $libdir/FSBox.tk
source $libdir/description.tcl
source $libdir/dialogList.tk
source $libdir/dialogInfo.tk
source $libdir/dialogParam.tk
source $libdir/dialogCkBut.tk
source $libdir/dialogMapping.tk
source $libdir/fonts.tcl
source $libdir/help.tk
source $libdir/macrodef.tk
source $libdir/sources.tcl
source $libdir/schema.tk
source $libdir/mapping.tk
source $libdir/util.tcl
source $libdir/views.tcl
source $libdir/save.tcl
source $libdir/history.tcl
source $libdir/query.tcl
source $libdir/about.tk
source $libdir/window.tcl
source $libdir/tdata.tk
source $libdir/layout.tk
source $libdir/lens.tcl
source $libdir/lensgui.tk
source $libdir/win_print_config.tcl
#source $libdirLM/DEViseLMComm.tk
#source $libdirLM/DEViseIfc.tk
source $libdir/view_config.tcl
source $libdir/cursor_grid.tcl
source $libdir/GDataSock.tcl
source $libdir/group.tk
source $libdir/dr_schema.tcl
source $libdir/link.tcl
source $libdir/count_mapping.tcl
source $libdir/string_table.tcl
source $libdir/dateformat.tcl
source $libdir/floatformat.tcl
source $libdir/viewgeom.tcl
source $libdir/auto_filter.tcl
source $libdir/dup_elim.tcl
source $libdir/nice_axes.tcl
source $libdir/fixed_cursor.tcl
source $libdir/action_disable.tcl
source $libdir/view_help.tcl
source $libdir/show_mouse.tcl

set mode 0
DEVise changeMode $mode

# read the .rc file
# we check the following in sequence:
# 1) if environment variable touuper($argv0)_RC exists, use it.
#	example: if progran name == afsio, check if environment variable
#       AFSIO_RC contains a valid filename
# 2) else, check .$argv0_rc
#	example: .afsio_rc
# 3) else, check $argv0_rc
#       example: afsio.rc
# 4) else, check devise.rc

set progName [ file tail $argv0 ]
set envName [ format "%s_RC" [string toupper $progName] ]
set rcFile1 [ format ".%s_rc" $progName ]
set rcFile2 [ format "%s.rc" $progName ]
set rcFile3 "devise.rc"
set rcFile4 "$env(HOME)/.$rcFile2"
set rcFile5 "$env(HOME)/.devise.rc"

if { [ info exists env($envName)] && [file exists $env($envName) ] } {
    set rcFile $env($envName)
} elseif { [ file exists $rcFile1 ] } {
    set rcFile $rcFile1
} elseif { [ file exists $rcFile2 ] } {
    set rcFile $rcFile2
} elseif { [ file exists $rcFile3 ] } {
    set rcFile $rcFile3
} elseif { [ file exists $rcFile4 ] } {
    set rcFile $rcFile4
} elseif { [ file exists $rcFile5 ] } {
    set rcFile $rcFile5
} else {
    set rcFile ""
}

if {$rcFile != ""} {
    Puts "Reading initialization file $rcFile"
    source $rcFile
}

# position main window and set up colors used by user interface

wm geometry . +0+0
tk_focusFollowsMouse

InitColor

wm title . "DEVise"
global DEViseApp 
set DEViseApp [winfo name .]
#puts "DEVise = $DEViseApp"

bind . q DoExit
bind . <Control-c> DoExit
bind . <Control-C> DoExit

frame .mbar  -relief raised -bd 4
frame .panel

pack .panel -side top -expand 0 -fill both
pack .mbar  -side top -expand 0 -fill x

menubutton .mbar.session -text Session -underline 0 \
	-menu .mbar.session.menu
menubutton .mbar.tdata -text Tables -underline 0 \
	-menu .mbar.tdata.menu
menubutton .mbar.gdata -text GraphData -underline 0 \
	-menu .mbar.gdata.menu -state disabled
menubutton .mbar.view -text View -underline 0 \
	-menu .mbar.view.menu -state disabled
menubutton .mbar.window -text Window -underline 0 \
	-menu .mbar.window.menu
menubutton .mbar.help -text Help -underline 0 \
	-menu .mbar.help.menu

# COLOR MENU.
InitColorMenu .mbar

pack .mbar.session .mbar.tdata .mbar.gdata .mbar.view \
	.mbar.window .mbar.color .mbar.help -expand 1 -side left -fill x

# SESSION MENU.
menu .mbar.session.menu -tearoff 0
.mbar.session.menu add command -label "Open..." -command {DoOpen 0}
.mbar.session.menu add command -label "Save" -command DoSave
.mbar.session.menu add command -label "Save as..." -command {DoSaveAs 0 0 0 0}
.mbar.session.menu add command -label "Close" -command DoClose
.mbar.session.menu add command -label "Refresh" -command DoRefresh
.mbar.session.menu add command -label "Update Filters" -command {DEVise updateFilters}
.mbar.session.menu add command -label "Open, Update, and Save..." -command {DoUpdate}
.mbar.session.menu add command -label "Reset Filters" -command {DEVise resetAllFilters}
# <<< Changes for saving sessions as batch scripts only...
#TEMP.mbar.session.menu add separator
#TEMP.mbar.session.menu add command -label "Open as Template..." -command {DoOpen 1}
#TEMP.mbar.session.menu add command -label "Save as Template..." \
#TEMP	-command {DoSaveAs 1 0 0 0}
#TEMP.mbar.session.menu add separator

#TEMP.mbar.session.menu add cascade -label "Export Template" \
#TEMP	-menu .mbar.session.menu.exportMenu
#TEMPmenu .mbar.session.menu.exportMenu -tearoff 0
#TEMP.mbar.session.menu.exportMenu add command -label "Without Data..." \
#TEMP	-command {DoSaveAs 0 1 0 0}
#TEMP.mbar.session.menu.exportMenu add command -label "With Data..." \
#TEMP	-command {DoSaveAs 0 1 1 0}
#TEMP.mbar.session.menu add command -label "Merge Template" \
#TEMP	-command {DoTemplateMerge}

.mbar.session.menu add separator
.mbar.session.menu add command -label "Delete Session..." \
	-command {DoDelete}

#TEMP -- session descriptions don't work with batch scripts
.mbar.session.menu add separator
.mbar.session.menu add command -label "Session Description..." \
	-command {EditDescription}
# ... >>>

# For testing only...
#.mbar.session.menu add command -label "DEViseGetImage" \
#	-command {DEViseGetImage gif /tmp/devise.gif}

.mbar.session.menu add separator

.mbar.session.menu add cascade -label "Print" \
	-menu .mbar.session.menu.printMenu
menu .mbar.session.menu.printMenu -tearoff 0
.mbar.session.menu.printMenu add command -label "Without Map..." \
	-command PrintView
.mbar.session.menu.printMenu add command -label "With Map..." \
	-command PrintWithMap

.mbar.session.menu add separator
.mbar.session.menu add command -label "Load String Space..." \
	-command { LoadStringSpace }
.mbar.session.menu add command -label "Get String Count..." \
	-command { GetStringCount }
.mbar.session.menu add command -label "Save String Space..." \
	-command { SaveStringSpace }
.mbar.session.menu add separator
.mbar.session.menu add command -label "Show Link/Cursor Info..." \
	-command { ShowLinkCursorInfo }
.mbar.session.menu add command -label "Dump Link/Cursor Info..." \
	-command { DumpLinksCursors }
.mbar.session.menu add cascade -label "Save Session Description" \
	-menu .mbar.session.menu.descMenu
.mbar.session.menu add command -label "Play Back Command Log..." \
	-command { PlayBackLog }
menu .mbar.session.menu.descMenu -tearoff 0
.mbar.session.menu.descMenu add command -label "Logical..." \
	-command { SaveSessionDesc 0 }
.mbar.session.menu.descMenu add command -label "Physical..." \
	-command { SaveSessionDesc 1 }
.mbar.session.menu.descMenu add command -label "Range/MQL..." \
	-command { SaveRangeDesc }

.mbar.session.menu add separator
.mbar.session.menu add command -label "Quit" -command {DoExit $exitmode}

#.mbar.session.menu add separator
#.mbar.session.menu add command -label "Test" -command { source test }
#.mbar.session.menu add command -label "Memory leaks" -command { DEVise new_leaks }
#.mbar.session.menu add command -label "Memory in use" -command { DEVise new_inuse }

# TDATA MENU.
menu .mbar.tdata.menu -tearoff 0

proc displayTable {table} {
     if {[llength $table] == 0} {
		return
	}
     if {[llength $table] != 1} {
         dialog .note "Note" "Please select only one table." "" 0 OK
         return
     }
#      set tdata_schema_pair [OpenAndDefineDataSources 0 $table]
#      if {$tdata_schema_pair == ""} {
#           puts "tdata = NULL"
#           return
#      }
#      set tdata [lindex $tdata_schema_pair 0]
#      set schemaname [lindex $tdata_schema_pair 1]
#      set is_dte_type [lindex $tdata_schema_pair 2]
#      MacroDefAuto $tdata $schemaname $is_dte_type 

    OpenDataSource $table
    MacroDefAuto $table [GetSchema $table]
}

.mbar.tdata.menu add command -label "Display..." -command {
	set table [selectStream]
	displayTable $table
}

.mbar.tdata.menu add command -label "Display Active..." -command { MacroImport 1 0 }


.mbar.tdata.menu add separator

.mbar.tdata.menu add cascade -label "New" \
	-menu .mbar.tdata.menu.import 

.mbar.tdata.menu add command -label "Edit..." -command {
	
	# boolean var
	global displayImmediately

	set table [selectStream]
	set currentDir [CWD]
     if {[llength $table] == 0} {
		return
	}
     if {[llength $table] > 1} {
         dialog .note "Note" "Please select only one table." "" 0 OK
         return
     }

#	set fulltn [fullPathName $table]
	set fulltn $table

	set errCode [catch {DEVise dteShowCatalogEntry $fulltn} entry]
	if {$errCode != 0} {
		dialog .noName "DTE Error" $entry "" 0 OK
		return
	}

#	puts "returning:::::::::::: $entry"
	set oldTableName [lindex $entry 0]
	set type [lindex $entry 1]
	set retVal [define$type $entry]
#DEBUG	puts "retVal = $retVal"
	set newTableName [lindex $retVal 0]
#DEBUG	puts "newTableName = $newTableName"
	if {$retVal != ""} {
		if {$newTableName == $oldTableName} {

			# this was an update

			DEVise dteDeleteCatalogEntry \
				[fullPathName $oldTableName $currentDir]
		}
		DEVise dteInsertCatalogEntry $currentDir $retVal
		if {$displayImmediately} {
			displayTable [fullPathName $newTableName]
		}
	}
}

# Move is not implemented.  RKW 1998-11-19.
if {0} {
.mbar.tdata.menu add command -label "Move" -command {
	set table [selectStream "Select tables to move"]
	set destDir [selectStream "CD to destination directory"]
	if {$destDir == ""} {
		return
	}
	set destDir [CWD]

     foreach d $table {
         set but [dialog .confirm {Confirmation} \
              "Move table \"$d\" to directory \"$destDir\"?" \
		    {} 1 Yes No Cancel]
         if {$but == 2} {
          return
         }
         if {$but == 1} {
          continue
         }
	    puts "move not implemented"
		updateSources
     }
}
}

.mbar.tdata.menu add command -label "Delete..." -command {
	set table [selectStream "Select table(s) to delete"]
     foreach d $table {
         set but [dialog .confirm "Confirm Stream Deletion" \
              "Delete stream \"$d\"?" "" 1 Yes No Cancel]
         if {$but == 2} {
          return
         }
         if {$but == 1} {
          continue
         }
          DEVise dteDeleteCatalogEntry $d
          updateSources
     }
}

.mbar.tdata.menu add separator

.mbar.tdata.menu add command -label "Materialize..." -command {
	set table [selectStream]
     foreach d $table {
		statusWindow .info "Status" \
		"Materializing table \"$d\"\n Please wait."

		set errCode [catch {DEVise dteMaterializeCatalogEntry $d} errStr]
		catch {destroy .info}
		if {$errCode != 0} {
			dialog .noName "DTE Error" $errStr "" 0 OK
			return
		}

		updateSources
     }
}

.mbar.tdata.menu add separator

.mbar.tdata.menu add cascade -label "Index" \
	-menu .mbar.tdata.menu.indexMenu 

menu .mbar.tdata.menu.indexMenu -tearoff 0
.mbar.tdata.menu.indexMenu add command -label "New..." -command {

     global indexName
     global keyAttrs
     global dataAttrs
     global standAlone

	set table [selectStream]
	while {[llength $table] > 1} {
		dialog .note "Note" "Please select only one table." "" 0 OK
		set table [selectStream]
	}
	if {$table == ""} {
		return
	}
	set attrs [DEVise dteListAttributes $table]
	set indexName ""
	set keyAttrs ""
	set dataAttrs ""
	set standAlone No
	indexUpdate $attrs
	if {$indexName != ""} {
		set errCode [catch {DEVise dteCreateIndex \
			$table $indexName $keyAttrs $dataAttrs $standAlone} errStr]

		if {$errCode != 0} {
			dialog .noName "DTE Error" $errStr "" 0 OK
			return
		}

	}
}

proc getSelectedIndex {} {
	global dialogListVar
	set tablename [selectStream]
	set indexes [DEVise dteListAllIndexes $tablename]
	set formated ""
	foreach pair [lsort $indexes] {
		set indexname [lindex $pair 0]
		lappend formated $indexname
	}
#	puts "formated = $formated"
	set answer [dialogList .selectIndex "Select Index"  \
			    "Select Index" \
			   "" 0 { OK Cancel } \
			   $formated ]
	if {$answer == 0} {
		set table_index_pair [list $tablename $dialogListVar(selected)]
	} else {
		set table_index_pair ""
	}
#	puts "returning ------------------ $table_index_pair"
	return $table_index_pair
}

.mbar.tdata.menu.indexMenu add command -label "Browse..." -command {
	set table_index_pair [getSelectedIndex]
	if {$table_index_pair == ""} {
		return
	}

     global indexName
     global keyAttrs
     global dataAttrs
     global standAlone

	set tableName [lindex $table_index_pair 0]
	set indexName [lindex $table_index_pair 1]

	set indexDesc [DEVise dteShowIndexDesc $tableName $indexName]

	set keyAttrs [lindex $indexDesc 0]
	set dataAttrs [lindex $indexDesc 1]
	set standAlone [lindex $indexDesc 2]

	set attrs ""
	indexUpdate $attrs
}

.mbar.tdata.menu.indexMenu add command -label "Delete..." -command {
	set table_index_pair [getSelectedIndex]
	if {$table_index_pair == ""} {
		return
	}
	set tableName [lindex $table_index_pair 0]
	set indexName [lindex $table_index_pair 1]
	DEVise dteDeleteIndex $tableName $indexName
}

.mbar.tdata.menu add separator

.mbar.tdata.menu add cascade -label "SQLFilter" \
	-menu .mbar.tdata.menu.filterMenu 

menu .mbar.tdata.menu.filterMenu -tearoff 0
.mbar.tdata.menu.filterMenu add command -label "New..." -command {
	newViewFile
	return
}

.mbar.tdata.menu.filterMenu add command -label "Edit..." -command {
	global filterdir fsBox
	global viewName select as where
	set fsBox(path) $filterdir
	set fsBox(pattern) *
	set file [FSBox "Select SQLFilter file"]
	if {$file != ""} {
		set result [DEVise dteReadSQLFilter $file]
		set select [lindex $result 0]
		set as [lindex $result 1]
		set where [lindex $result 2]
		set viewName [file tail $file]
#DEBUG		puts "calling qbrowse 1 $viewName $select $as $where"
		qbrowse 1 $viewName "" $select $as $where
#DEBUG		puts "returns qbrowse 1 $viewName $select $as $where"
		set fileName "$filterdir/$viewName"
		saveViewFile $fileName $select $as $where
	}
}

.mbar.tdata.menu.filterMenu add command -label "Delete..." -command {
	global filterdir fsBox
	set fsBox(path) $filterdir
	set fsBox(pattern) *
	set file [FSBox "Select SQLFilter file"]
	if {$file != ""} {
         set but [dialog .confirm "Confirm Stream Deletion" \
              "Delete SQLFilter \"$file\"?" "" 1 Yes No]
         if {$but == 1} {
          return
         }
		exec rm $file
	}
}

.mbar.tdata.menu add separator

.mbar.tdata.menu add cascade -label "Schema" \
	-menu .mbar.tdata.menu.schemaMenu 

.mbar.tdata.menu add separator

.mbar.tdata.menu add command -label "Check Data Sources..." \
	-command { CheckDataSources }

menu .mbar.tdata.menu.import -tearoff 0
foreach sourcetype [lsort [array names sourceTypes]] {
	.mbar.tdata.menu.import add command -label "$sourcetype..." \
		-command 	[list defineANY $sourcetype]
}
		
menu .mbar.tdata.menu.schemaMenu -tearoff 0

.mbar.tdata.menu.schemaMenu add command -label "Browse..." \
	-command SchemaBrowse
.mbar.tdata.menu.schemaMenu add separator
.mbar.tdata.menu.schemaMenu add command -label "Physical UNIXFILE..." \
	-command {SchemaEdit 0}
#.mbar.tdata.menu.schemaMenu add command -label "Physical DataReader..." \
#	-command {SchemaEdit 3}
.mbar.tdata.menu.schemaMenu add command -label "Logical..." \
	-command {SchemaEdit 1}
#.mbar.tdata.menu.schemaMenu add command -label "Query..." \
#	-command {SchemaEdit 2}

# Donko's and Shaun's MAD SLASHING spree
#.mbar.tdata.menu add cascade -label "Mapping" \
#   -menu .mbar.tdata.menu.mappingMenu

#.mbar.tdata.menu add command -label "Save Data Stream" -command { SaveTData }
#.mbar.tdata.menu add separator
#.mbar.tdata.menu add command -label "Derived Data Text" -command { MacroImport 1 1 } 
#.mbar.tdata.menu add command -label "Derived Data View" -command { MacroImport 0 1 }

menu .mbar.tdata.menu.mappingMenu -tearoff 0

.mbar.tdata.menu.mappingMenu add command -label "Define" \
	-command DefineMapping
.mbar.tdata.menu.mappingMenu add command -label "Resolve" \
	-command ResolveMapping

# GDATA MENU.
menu .mbar.gdata.menu -tearoff 0

.mbar.gdata.menu add command -label "Edit Mapping..." -command DoEditMapping
.mbar.gdata.menu add command -label "Count Mapping..." -command EditCountMapping
.mbar.gdata.menu add command -label "Duplicate Elimination..." \
        -command EditDupElim
.mbar.gdata.menu add command -label "Copy/Edit..." -command DoViewCopy
.mbar.gdata.menu add command -label "Switch TData..." -command DoSwitchTData
.mbar.gdata.menu add command -label "Flush TData..." -command DoFlushTData

# VIEW MENU.
menu .mbar.view.menu -tearoff 0

.mbar.view.menu add command -label "Toggle X Axis" \
	-command { DoToggleAxis X }
.mbar.view.menu add command -label "Toggle Y Axis" \
	-command { DoToggleAxis Y }
.mbar.view.menu add command -label "Toggle X Axis Ticks" \
	-command { DoToggleAxisTicks X }
.mbar.view.menu add command -label "Toggle Y Axis Ticks" \
	-command { DoToggleAxisTicks Y }
.mbar.view.menu add cascade -label "Nice Axes" \
    -menu .mbar.view.menu.niceaxismenu

.mbar.view.menu add separator
.mbar.view.menu add command -label "Title..." -command DoSetTitle
.mbar.view.menu add command -label "Edit View Help..." -command EditViewHelp
.mbar.view.menu add command -label "Toggle View Names" -command ToggleViewNames
.mbar.view.menu add cascade -label "Fonts" -menu .mbar.view.menu.fontsmenu
.mbar.view.menu add cascade -label "Date Formats" \
    -menu .mbar.view.menu.dateformatmenu
.mbar.view.menu add cascade -label "Float Formats" \
    -menu .mbar.view.menu.floatformatmenu

.mbar.view.menu add separator
.mbar.view.menu add cascade -label "Links" \
	-menu .mbar.view.menu.linkMenu 

menu .mbar.view.menu.linkMenu -tearoff 0
.mbar.view.menu.linkMenu add command -label "Create Link..." \
	-command { CreateAndLinkLink }
.mbar.view.menu.linkMenu add separator
.mbar.view.menu.linkMenu add command -label "Link..." -command DoViewLink
.mbar.view.menu.linkMenu add command -label "Unlink..." -command DoViewUnlink
.mbar.view.menu.linkMenu add separator
.mbar.view.menu.linkMenu add command -label "Set Leader..." \
	-command { DoSetLinkMaster }
.mbar.view.menu.linkMenu add command -label "Reset Leader..." \
	-command { DoResetLinkMaster}
.mbar.view.menu.linkMenu add command -label "Set Record Link Type..." \
	-command { DoSetLinkType }
.mbar.view.menu.linkMenu add command -label "Set TData Attr Link Attribute..." \
	-command { DoSetLinkAttr }
# this line is probably a mistake??? DD
#	-command { DoResetLinkMaster }
.mbar.view.menu.linkMenu add separator
.mbar.view.menu.linkMenu add command -label "Link Info..." \
	-command { DoDisplayLinkInfo }
.mbar.view.menu.linkMenu add separator
.mbar.view.menu.linkMenu add command -label "Destroy Link..." \
	-command { DoLinkDestroy }

#.mbar.view.menu add separator
.mbar.view.menu add cascade -label "Cursors" \
	-menu .mbar.view.menu.cursorMenu 
.mbar.view.menu add command -label "Toggle View Highlight" \
	-command { ToggleViewHighlight }


menu .mbar.view.menu.cursorMenu -tearoff 0
.mbar.view.menu.cursorMenu add command -label "Create..." -command DoCursorCreate
.mbar.view.menu.cursorMenu add command -label "Delete..." -command DoCursorDelete
.mbar.view.menu.cursorMenu add separator
.mbar.view.menu.cursorMenu add command -label "Set Source..." \
	-command DoSetCursorSrc
.mbar.view.menu.cursorMenu add command -label "Set Destination..." \
	-command DoSetCursorDst
.mbar.view.menu.cursorMenu add separator
.mbar.view.menu.cursorMenu add command -label "Set Grid..." \
	-command DoSetCursorGrid
.mbar.view.menu.cursorMenu add command -label "Set Fixed Size..." \
        -command EditFixedCursor
#.mbar.view.menu.cursorMenu add separator
#.mbar.view.menu.cursorMenu add command -label "Set Record Cursor..." \
#	-command DoSetRecordCursor

.mbar.view.menu add separator
#.mbar.view.menu add command -label "Statistics" -command { DoStat }
.mbar.view.menu add cascade -label "Statistics" -menu .mbar.view.menu.statMenu
#.mbar.view.menu add command -label "Color Statistics" -command { DoColorStat }
.mbar.view.menu add cascade -label "Kiviat Graph" -menu .mbar.view.menu.kmenu
.mbar.view.menu add separator
#.mbar.view.menu add command -label "Geometry" -command { EditViewGeom }
.mbar.view.menu add cascade -label "Dimensions" -menu .mbar.view.menu.dimmenu
.mbar.view.menu add cascade -label "Keypad Config"  \
    -menu .mbar.view.menu.configmenu
.mbar.view.menu add command -label "3D Query..." -command Do3DQuery
.mbar.view.menu add command -label "Save GData..." -command SaveGData
.mbar.view.menu add command -label "JavaScreen GData..." -command EditJSGData

menu .mbar.view.menu.statMenu -tearoff 0

.mbar.view.menu.statMenu add command -label "Basic Stat..." \
	-command { DoBasicStat
		   Update2DBasicStatWindow }
# .mbar.view.menu.statMenu add command -label "Group By..." -command DoGroupByStat
.mbar.view.menu.statMenu add command -label "Histogram..." -command DoHistStat
.mbar.view.menu add separator
.mbar.view.menu add command -label "Assign String Tables..." -command EditStringTables 
.mbar.view.menu add command -label "Auto Filter Update..." -command EditAutoFilter
.mbar.view.menu add command -label "Disable Actions..." \
  -command EditActionDisable
.mbar.view.menu add command -label "Show Mouse Location..." \
  -command EditShowMouse
.mbar.view.menu add separator
.mbar.view.menu add command -label "Destroy" -command {
    global curView
    DestroyView $curView
}

#.mbar.view.menu add command -label "Action" -command DoViewAction
#.mbar.view.menu add command -label "Save Pixmap" -command DoSavePixmap
#.mbar.view.menu add command -label "Load Pixmap" -command DoLoadPixmap

#menu .mbar.view.menu.xaxismenu -tearoff 0 
#.mbar.view.menu.xaxismenu add command -label "Current View"  \
#	-command { DoToggleAxis X }
#.mbar.view.menu.xaxismenu add command -label "All Views" \
#	-command { DoToggleAxisAllViews X }

#menu .mbar.view.menu.yaxismenu -tearoff 0 
#.mbar.view.menu.yaxismenu add command -label "Current View" \
#	-command { DoToggleAxis Y }
#.mbar.view.menu.yaxismenu add command -label "All Views" \
#	-command { DoToggleAxisAllViews Y }

menu .mbar.view.menu.kmenu -tearoff 1
.mbar.view.menu.kmenu add radiobutton -label Mean -variable kval -value 0
.mbar.view.menu.kmenu add radiobutton -label Max -variable kval -value 1
.mbar.view.menu.kmenu add radiobutton -label Min -variable kval -value 2
.mbar.view.menu.kmenu add radiobutton -label Count -variable kval -value 3
.mbar.view.menu.kmenu add separator
.mbar.view.menu.kmenu add radiobutton -label "Use Current" \
	-variable kcurr -value 1
.mbar.view.menu.kmenu add radiobutton -label "Specify Views" \
	-variable kcurr -value 0
.mbar.view.menu.kmenu add separator
.mbar.view.menu.kmenu add radiobutton -label "New Graph" \
	-variable knew -value 1
.mbar.view.menu.kmenu add radiobutton -label "Reuse Graph" \
	-variable knew -value 0
.mbar.view.menu.kmenu add separator
.mbar.view.menu.kmenu add command -label "Apply..." \
	-command {ShowKGraph}

menu .mbar.view.menu.fontsmenu -tearoff false
.mbar.view.menu.fontsmenu add command -label "Title..." \
    -command { GetFont "title" }
.mbar.view.menu.fontsmenu add command -label "X Axis..." \
    -command { GetFont "x axis" }
.mbar.view.menu.fontsmenu add  command -label "Y Axis..."\
    -command { GetFont "y axis" }

menu .mbar.view.menu.niceaxismenu -tearoff false
.mbar.view.menu.niceaxismenu add command -label "X Axis" \
    -command { DEVise niceifyAxes $curView 1 0 }
.mbar.view.menu.niceaxismenu add command -label "Y Axis" \
    -command { DEVise niceifyAxes $curView 0 1 }
.mbar.view.menu.niceaxismenu add command -label "X and Y Axes" \
    -command { DEVise niceifyAxes $curView 1 1 }
.mbar.view.menu.niceaxismenu add command -label "Automatic..." \
    -command EditNiceAxes

menu .mbar.view.menu.dateformatmenu -tearoff false
.mbar.view.menu.dateformatmenu add command -label "X Axis..." \
    -command { EditDateFormat X }
.mbar.view.menu.dateformatmenu add command -label "Y Axis..." \
    -command { EditDateFormat Y }

menu .mbar.view.menu.floatformatmenu -tearoff false
.mbar.view.menu.floatformatmenu add command -label "X Axis..." \
    -command { EditFloatFormat X }
.mbar.view.menu.floatformatmenu add command -label "Y Axis..." \
    -command { EditFloatFormat Y }

menu .mbar.view.menu.dimmenu -tearoff 0
.mbar.view.menu.dimmenu add command -label "Two Dimensions" \
	-command { DoSetViewDimensions 2 }
.mbar.view.menu.dimmenu add command -label "Three Dimensions" \
	-command { DoSetViewDimensions 3 }

menu .mbar.view.menu.configmenu -tearoff false
.mbar.view.menu.configmenu add command -label "Home..." \
    -command { GetViewHome }
.mbar.view.menu.configmenu add command -label "Horiz. Scroll..." \
    -command { GetViewHorPan }
.mbar.view.menu.configmenu add command -label "Vert. Scroll..." \
    -command { GetViewVerPan }

# WINDOW MENU.
menu .mbar.window.menu -tearoff 0
.mbar.window.menu add command -label "Toggle X Axis" \
    -command { DoToggleAxisWindow X }
.mbar.window.menu add command -label "Toggle Y Axis" \
    -command { DoToggleAxisWindow Y }
.mbar.window.menu add command -label "Toggle X Axis Ticks" \
    -command { DoToggleAxisTicksWindow X }
.mbar.window.menu add command -label "Toggle Y Axis Ticks" \
    -command { DoToggleAxisTicksWindow Y }

# We probably should add these functions to the window menu eventually,
# but I don't want to deal with them right now.  RKW 2/7/97.
#.mbar.window.menu add separator
#.mbar.window.menu add command -label "Title..."

.mbar.window.menu add separator
.mbar.window.menu add cascade -label "Fonts" -menu .mbar.window.menu.fontsmenu

.mbar.window.menu add separator
.mbar.window.menu add command -label "New..." \
    -command { set tmp [DoCreateWindow "Select window type"]; unset tmp }
.mbar.window.menu add command -label "Layout..." -command { SetWindowLayout "" }
#.mbar.window.menu add command -label "Layout-Manager" -command { RootLayout }
#.mbar.window.menu add command -label "LM Cmd test " -command \
#	{ SendCommandToLM "LM printWindow Display" }
#.mbar.window.menu add command -label "Layout Manager" -command \
#	{ LayoutManager } 
.mbar.window.menu add command -label "Duplicate" -command DupWindow
.mbar.window.menu add separator

.mbar.window.menu add command -label "Stack Control..." \
	-command { DoWindowStackControl }
.mbar.window.menu add command -label "Raise All" \
        -command { DEVise raiseAllWindows }
######################MODIFIED SSL 2/6########################################
# Disabled this because it doesn't work -- RKW Mar. 12, 1998
#.mbar.window.menu add command -label "Lens Control" \
#	-command { DoLensControl }
######################MODIFIED SSL 2/6########################################
.mbar.window.menu add separator
.mbar.window.menu add command -label "Swap Views" -command DoSwapView
.mbar.window.menu add command -label "Move View..." -command DoViewMove
.mbar.window.menu add command -label "Remove View" -command DoViewRemove
.mbar.window.menu add command -label "Restore View..." -command DoBringView
.mbar.window.menu add command -label "Group/Ungroup Views" -command { DEVise groupUngroupViews }
.mbar.window.menu add separator
.mbar.window.menu add command -label "View List..." -command WinViewList
.mbar.window.menu add command -label "Print Config..." -command GetWinPrintConfig

.mbar.window.menu add separator
.mbar.window.menu add command -label "Destroy..." -command { RemoveWindow "" }

menu .mbar.window.menu.fontsmenu -tearoff false
.mbar.window.menu.fontsmenu add command -label "Title..." \
    -command { GetFont "title" 1 }
.mbar.window.menu.fontsmenu add command -label "X Axis..." \
    -command { GetFont "x axis" 1 }
.mbar.window.menu.fontsmenu add  command -label "Y Axis..."\
    -command { GetFont "y axis" 1 }

# HELP MENU.
menu .mbar.help.menu -tearoff 0
.mbar.help.menu add command -label "About..." -command { AboutDevise }
.mbar.help.menu add command -label "Key/Mouse Actions..." \
    -command { ShowKeyMouseHelp }
.mbar.help.menu add separator
#.mbar.help.menu add command -label "Demo" -command DoDemo
#.mbar.help.menu add command -label "Help" -command DoHelp
.mbar.help.menu add command -label "History..." -command OpenHistory

tk_menuBar .mbar .mbar.session .mbar.tdata .mbar.view \
	.mbar.link .mbar.window .mbar.color .mbar.help
focus .mbar

# build control panel

frame .panel.query    -relief sunken
frame .panel.center   -relief sunken
frame .panel.messages -relief sunken

pack .panel.query    -side left -expand 0 -fill y
pack .panel.center   -side left -expand 1 -fill both
pack .panel.messages -side left -expand 0 -fill y

button .panel.query.button -text "Query" -width 7 -relief raised \
	-font -*-times-medium-r-normal--*-200-*-*-*-*-*-* \
	-highlightthickness 0 -bd 3 -command { SetQuery }

button .panel.query.button2 -text "Mapping" -width 7 -relief raised \
	-font -*-times-medium-r-normal--*-200-*-*-*-*-*-* \
	-highlightthickness 0 -bd 3 -command { DoEditMapping } \
	-state disabled


pack .panel.query.button .panel.query.button2 -side top -padx 2m -pady 1m

button .panel.center.label -text DEVise \
        -font -*-times-medium-i-normal--*-240-*-*-*-*-*-* \
		-bd 0 -highlightthickness 2  -cursor hand2 \
		-foreground $colors(aboutFrameForeground) \
		-background $colors(aboutFrameBackground) \
		-activeforeground $colors(aboutFrameForeground) \
		-activebackground $colors(aboutFrameBackground) \
		-command { AboutDevise } -width 8

set version [DEVise version]
set compDate [DEVise compDate]
label .panel.center.version -text "Version $version: $compDate" \
        -font -*-times-medium-r-normal--*-120-*-*-*-*-*-*

set copyright [DEVise copyright]
label .panel.center.copyright \
		-text "$copyright DEVise Development Group" -font 5x7

frame .panel.center.status -background $colors(controlPanelStatus)

label .panel.center.status.session1 -text "Session:" \
	-font -*-times-medium-r-normal--*-120-*-*-*-*-*-* \
	-background $colors(controlPanelStatus)
set currSessFile ""
label .panel.center.status.session2 -textvariable currSessFile \
	-font -*-times-medium-r-normal--*-120-*-*-*-*-*-* \
	-background $colors(controlPanelStatus) -width 10

label .panel.center.status.mouseX1 -text " X:" \
	-font -*-times-medium-r-normal--*-120-*-*-*-*-*-* \
	-background $colors(controlPanelStatus)
set mouseX ""
label .panel.center.status.mouseX2 -textvariable mouseX \
	-font -*-courier-medium-r-normal--*-120-*-*-*-*-*-* \
	-background $colors(controlPanelStatus) -width 20

label .panel.center.status.mouseY1 -text " Y:" \
	-font -*-times-medium-r-normal--*-120-*-*-*-*-*-* \
	-background $colors(controlPanelStatus)
set mouseY ""
label .panel.center.status.mouseY2 -textvariable mouseY \
	-font -*-courier-medium-r-normal--*-120-*-*-*-*-*-* \
	-background $colors(controlPanelStatus) -width 10

pack  .panel.center.label -side top -expand 1 -fill both -ipadx 100 -padx 0 \
		-pady 0
pack  .panel.center.version -side top -expand 0 -fill x
pack  .panel.center.copyright -side top -expand 0 -fill x
pack  .panel.center.status -side top -expand 1 -fill x
pack  .panel.center.status.session1 -side left -expand 0
pack  .panel.center.status.session2 -side left -expand 0
pack  .panel.center.status.mouseY2 -side right -expand 0
pack  .panel.center.status.mouseY1 -side right -expand 0
pack  .panel.center.status.mouseX2 -side right -expand 0
pack  .panel.center.status.mouseX1 -side right -expand 0

button .panel.messages.mode -text Display -width 7 -relief raised \
        -font -*-times-medium-r-normal--*-200-*-*-*-*-*-* \
		-highlightthickness 0 -bd 3 -command { ChangeMode }
button .panel.messages.status -text "" -width 7 -relief flat -bd 3 \
        -font -*-times-medium-r-normal--*-200-*-*-*-*-*-* \
        -state disabled -highlightthickness 0 -command { AbortAllQueries }

pack .panel.messages.mode .panel.messages.status -side top -padx 2m -pady 1m

proc ChangeMode {} {
    global mode colors

    if { $mode == 0 } {
		set mode 1
        .panel.messages.mode configure -text Layout \
				-fg $colors(layoutModeText) \
                -activeforeground $colors(layoutModeText)
    } else {
		set mode 0
        .panel.messages.mode configure -text Display \
				-fg $colors(displayModeText) \
                -activeforeground $colors(displayModeText)
		RefreshAllViews
    }

    DEVise changeMode $mode
}

proc ChangeStatus { status } {
	global colors

    if { $status == 0 } {
		.panel.messages.status configure -text "" \
				-fg $colors(runningModeText) \
                -activeforeground $colors(runningModeText) \
				-relief flat -state disabled
        Update3DLocation
        Update2DQueryWindow
		Update2DBasicStatWindow
        UpdateHistoryWindow
		EnableStackControl
    } else {
		.panel.messages.status configure -text "Stop" \
				-fg $colors(stopModeText) \
                -activeforeground $colors(stopModeText) \
				-relief raised -state normal
		DisableStackControl
    }
}

proc AbortAllQueries {} {
    set views [ViewSet]
    foreach view [ViewSet] {
        DEVise abortQuery $view
    }
}

# Return name of file type, or ""
proc ImportFileType {} {
    global fsBox schemadir
    set fsBox(path) $schemadir/logical
    set fsBox(pattern) *
    set ftypeFile [FSBox "Select schema file"]
    if {$ftypeFile == ""} {
	return
    }
    
    set result [DEVise importFileType $ftypeFile]
    if {$result == ""} {
	dialog .fileTypeError "Schema Error" \
		"Error reading schema file $ftypeFile" \
		"" 0 OK
	return
    }
    return $result
}

# Check to see if file already exists 
proc FileExist { file } {
    foreach tdata [TdataSet] {
	if {$file == [DEVise tdataFileName $tdata]} {
	    return 1
	}
    }
    return 0
}

# Find default X attribute name.
# The default is the sorted X attribute other than recId, if one exists.
# Otherwise, it's the recId.
# otherwise, it's the 0th attribute.

proc FindDefaultXAttr { attrs } {
    set numAttrs 0
    foreach attr $attrs {
	if { [lindex $attr 2] > 0 } {
	    set temp($numAttrs) [lindex $attr 0]
	    incr numAttrs
	    if {$numAttrs >= 2 } {
		break
	    }
	}
    }
    if { $numAttrs == 0 } {
	# puts "numAttrs == 0"
	return [lindex [lindex $attrs 0] 0]
    } elseif { $numAttrs == 1 } {
	# puts "numAttrs == 1"
	return $temp(0)
    } else {
	# puts "numAttrs >= 2"
	if { $temp(0) == "recId"} {
	    return $temp(1)
	} else {
	    return $temp(0)
	}
    }
}

# Close current session
proc DoClose {{askUser 1}} {
    global sessionName templateMode datadir sourceList
    global sessionHasBeenSaved
    
    if {$templateMode} {	
	if {$askUser} {
	  set but [dialog .open "Merge Data" \
	     "If you Close without Merging, you will lose access to this data" \
	     "" 2 "Close" "Merge, then Close" "Cancel"]
	} else {
	  set but 0
	}

	if {$but == 2} {
	    return 0
	} elseif {$but == 0} {
	    # Just allow the close to continue.
	} elseif {$but == 1} {
	    DoTemplateMerge
	}
    }	
    
    if {$askUser && [SessionIsOpen]} {
      set but [dialog .open "Close Session" "Close Current Session?" \
	    "" 0 OK Cancel ]
    } else {
      set but 0
    }

    if { $but == 1 } {
	return 0
    }
    
    ProcessViewSelected ""
	
	DEVise clearAll
	set sessionHasBeenSaved 0

    ClearDescription
    UpdateLinkCursorInfo
    set sessionName ""
    UpdateSessionName

    if {$templateMode} {
#TEMPTEMP -- this is still old-style data source code!!
	unset sourceList
	set sourceFile $datadir/sourcedef.tcl
	if {[file exists $sourceFile]} {
	    Puts "Using data stream catalog $sourceFile"
	    source $sourceFile	
	}
	set templateMode 0
    }

    return 1
}

# Do open a session file
proc DoOpen { asTemplate } {
    global fsBox sessiondir restoring template sessionName errorInfo

    if {[SessionIsOpen] && ![DoClose]} {
	# abort opening a new session
	return
    }
    
    # Get a session file name
    set fsBox(path) $sessiondir
    # Change for saving sessions as batch scripts only.
    set fsBox(pattern) {*.[dt][sk]}
    set file [ FSBox "Select session file to open" ]
    
    if {$file == ""} {
	return
    }

    DoActualOpen $file $asTemplate
}

# Update a session file.
proc DoUpdate {} {
    global fsBox sessiondir restoring template sessionName errorInfo

    if {[SessionIsOpen] && ![DoClose]} {
	# abort opening a new session
	return
    }
    
    # Get a session file name
    set fsBox(path) $sessiondir
    # Change for saving sessions as batch scripts only.
    set fsBox(pattern) {*.[dt][sk]}
    set file [ FSBox "Select session file to update" ]
    
    if {$file == ""} {
	return
    }

    set sessionName ""
    UpdateSessionName
    ClearDescription
    set restoring 1
    Puts "Restoring session from $file"
    set err [catch { DEVise updateSession $file } ]

    # Make sure to clean up if things didn't work or the user cancelled.
    if {[DEVise getWinCount] <= 1} {
      DoClose 0
    }
    set restoring 0
    set template 0

    if {!$err} {
	set sessionName $file
	UpdateSessionName

	# "Remember" session directory.
        set tmpIndex [string last "/" $sessionName]
	set sessiondir [string range $sessionName 0 [expr $tmpIndex-1]]
    } else {
	puts "Could not restore session"
        puts $errorInfo
    }

    UpdateLinkCursorInfo
}

# Allow user to delete a session file.
proc DoDelete {} {
    global fsBox sessiondir

    # Get a session file name
    set fsBox(path) $sessiondir
    # Change for saving sessions as batch scripts only.
    #TEMP?set fsBox(pattern) *.tk
    set fsBox(pattern) {*.[dt][sk]}
    set file [ FSBox "Select session file to DELETE" ]
    
    if {$file == ""} {
	return
    }

    set but [dialog .open "Delete Session" "Delete the session file $file?" \
	"" 0 Delete Cancel ]
    if {$but == 0} {
	exec rm $file
    }
}

proc DoDemo {} {
    global libdir fsBox
    set fsBox(path) $libdir/demo
    DoOpen 0
}

# Find a view that uses the specified TData, the mapping class, and
# the specified viewClass.
proc GetView { tdata mapClass viewClass } {
    set views [DEVise get view $viewClass]
    foreach view $views {
	if { ![DEVise isMapped $view] } {
	    # view not yet mapped, see if we can use it.
	    set map [lindex [DEVise getViewMappings $view] 0]
	    set viewMapClass [GetClass mapping $map]
	    set mapParam [DEVise getCreateParam mapping $mapClass $map]
	    set viewTData [lindex $mapParam 0]
	    if {$mapClass == $viewMapClass && $viewTData == $tdata} {
		# found
		return $view
	    }
	}
    }
    
    # not found
    return ""
}

# Find a mapping (GData)that uses the specified TData, and the mapping class
proc GetMapping { tdata mapClass} {
    set maps [DEVise get mapping $mapClass]
    foreach map $maps {
	set mapParam [DEVise getCreateParam mapping $mapClass $map]
	set viewTData [lindex $mapParam 0]
	if {[string compare $viewTData $tdata] == 0 } {
	    # found
	    return $map
	}
    }

    # not found
    return ""
}

#Flush TData and rebuild the index , also issue queries on any view that 
#requires this TData

proc DoFlushTData {} {
    global dialogListVar
    
    set tdata ""
    set tdataSet [TdataSet]
    if { [llength $tdataSet] > 0 } {
	set answer [dialogList .selectTData "Select Data Stream" \
		"Select tdata stream to invalidate" \
		"" 1 { OK Cancel } $tdataSet]
	if { $answer == 1 || $dialogListVar(selected) == "" } {
	    return
	} 
	if { $answer == 0 } {
	    set tdata $dialogListVar(selected)
	} else {
	    return
	}
    }
    puts "Invalidating $tdata"
    DEVise invalidateTData $tdata
}

# Switch to a different TData for current view.
# We implement it by creating a new view and putting it it place
# of the current one

proc DoSwitchTData {} {
    global curView dialogListVar

    if {![CurrentView]} {
	return
    }
    
    set tdata ""

    set tdataSet [TdataSet]
    if {[llength $tdataSet] > 1} {
	set answer [ dialogList .selectTData "Open Data Streams"  \
		"Select a data stream" \
		"" 1 { OK Other Cancel } $tdataSet ]
	if {$answer == 2 || $dialogListVar(selected) == ""} {
	    return
	}
	if {$answer == 0} { 
	    set tdata $dialogListVar(selected)
	} else {
	    set tdata ""
	}
    }

    if {$tdata == ""} {
	set tdata [OpenNewDataSource 0]
    }

    if {$tdata == ""} { return }

    DEVise switchTData $curView $tdata
    return
}

############################################################

proc GetTDataTemplate {type total num} {
#TEMPTEMP -- this doesn't work
    global sourceList

    while {1} {
	set title ""
	if {$total > 0} {
	    set title "Select file $num of $total, type $type"
	}
	set sname [selectStream $title]

	if {$sname == ""} {
	    return ""
	}

	# must choose a single data stream
	if {[llength $sname] > 1} {
	    dialog .singleStream "Select Single Stream" \
		    "You have selected more than one data stream.\
		    Please select a single data stream." "" 0 Continue
	    continue
	}
	set sname [lindex $sname 0]

	# see if data stream already open
	if {[lsearch [TdataSet] $sname] >= 0} {
	    dialog .fileExist "Data Stream Open" \
		    "Data stream $sname already open.\n\
		    Please select another stream." "" 0 Continue
	    continue
	}

	set schema [lindex $sourceList($sname) 2]
	if {$type != $schema} {
	    dialog .fileExist "Incorrect Schema" \
		    "Schema of data stream\n\
		    $sname\n\
		    is not $type.\n\
		    Please select another stream." "" 0 Continue
	    continue
	}

	break
    }

    # make sure data is cached on disk
    set sourcedef [OpenDataSource $sname]
    if {$sourcedef == ""} {
	return ""
    }

    set sname [lindex $sourcedef 0]
    set param [lindex $sourcedef 1]
    set stype [lindex $sourcedef 2]

    statusWindow .info "Status" \
	    "Creating an index on $sname.\n\n\
	    This may take a while."
    DEVise create tdata $type $sname $stype $param
    catch {destroy .info}

    return $sname
}

############################################################

proc NotImplemented {} {
    dialog .notImplemented "Not Implemented" \
	    "This feature not implemented yet." \
	    "" 0 OK
}

############################################################

proc GetTkControlMargins {type} {
    # a view has left and bottom margin controls
    if {$type == "View"} {
	return "5 5 5 20"
    }

    # a window has bottom margin controls
    return "0 0 0 20"
}

############################################################

proc CreateTkControlWindows {name w h margins} {
    set lm [lindex $margins 0]
    set rm [lindex $margins 1]
    set tm [lindex $margins 2]
    set bm [lindex $margins 3]

    set controls ""
    if {$lm > 0} { lappend controls "left" }
    if {$rm > 0} { lappend controls "right" }
    if {$tm > 0} { lappend controls "top" }
    if {$bm > 0} { lappend controls "bottom" }

    foreach side $controls {
	toplevel "$name-$side"
	wm title "$name-$side" "$name-$side"
	pack propagate "$name-$side" 0
    }

    # force new window to screen so that ViewWin.c can reparent
    # a data display subwindow to this window

    update
}

############################################################

proc CreateTkMarginControls {name type w h} {
    set margins [GetTkControlMargins $type]
    CreateTkControlWindows $name $w $h $margins
    UpdateTkControlMargins $name $type $w $h

    if {$type == "View"} {
	frame "$name-bottom.frame" -relief groove -borderwidth 1
	pack "$name-bottom.frame" -side left -fill both -expand 1
	pack propagate "$name-bottom.frame" 0
	button "$name-bottom.frame.zoominx" -text "X-" \
		-command ProcessInButton
	button "$name-bottom.frame.zoomoutx" -text "X+" \
		-command ProcessOutButton
	button "$name-bottom.frame.zoominy" -text "Y-" \
		-command ProcessYInButton
	button "$name-bottom.frame.zoomouty" -text "Y+" \
		-command ProcessYOutButton  
	pack "$name-bottom.frame.zoominx" "$name-bottom.frame.zoomoutx" \
		"$name-bottom.frame.zoominy" "$name-bottom.frame.zoomouty" \
		-side left -padx 0m
    } else {
	button "$name-bottom.print" -text print -command PrintView
	button "$name-bottom.remove" -text remove -command {RemoveWindow ""}
	pack "$name-bottom.print" "$name-bottom.remove" -side left
    }

    return $margins
}

############################################################

proc UpdateTkControlMargins {name type w h} {
    set margins [GetTkControlMargins $type]
    set lm [lindex $margins 0]
    set rm [lindex $margins 1]
    set tm [lindex $margins 2]
    set bm [lindex $margins 3]

    set controls [list \
	    [list left 0 $tm $lm [expr $h - $tm - $bm]] \
	    [list right [expr $w - $rm] $tm $rm [expr $h - $tm - $bm]] \
	    [list top 0 0 $w $tm] \
	    [list bottom 0 [expr $h - $bm] $w $bm]]

    foreach control $controls {
	set side [lindex $control 0]
	set x [lindex $control 1]
	set y [lindex $control 2]
	set width [lindex $control 3]
	set height [lindex $control 4]
	# see if window exists
	set err [catch {set exists [wm state "$name-$side"]}]
	if {!$err} {
	    wm geometry "$name-$side" [format "=%dx%d+%d+%d" \
		    $width $height $x $y]
	}
    }
}


############################################################

proc ShowKGraph {} {
    global curView kval kcurr knew

    if {$kcurr == 0} {
	# Find out the views on which to build the KGraph
	dialog .showKGraph "Error " "Selecting specific views to \
		display is not yet implemented" "" 0 { OK }
	return
    }

    if {![CurrentView]} {
	return
    }

    # Form graph out of all the views in the current window
    set win [DEVise getViewWin $curView]
    set vlist [DEVise getWinViews $win]

    # Pass list of view names and also stat number
    set cmd "DEVise showkgraph $knew $kval {$win} $vlist"
    eval $cmd
}

#global layoutManagerUp
#set layoutManagerUp 0
#proc LayoutManager { } {
#    global layoutManagerUp 
#    if { !$layoutManagerUp } {
#	puts "starting LM ......please wait"
#	DEVise startLayoutManager
#	puts "...................................done"
#	set layoutManagerUp 1
#    } 
#}

# Toggle the visibility of view names.
proc ToggleViewNames {} {
    set viewNamesOn [expr ! [DEVise getShowViewNames]]
    DEVise setShowViewNames $viewNamesOn
}

# Update the displayed session name in the status area.
proc UpdateSessionName {} {
    global sessionName
    global currSessFile

    set tmpIndex [string last "/" $sessionName]
    set currSessFile [string range $sessionName [expr $tmpIndex+1] end]
}

proc ShowMouseLocation {x y} {
    global mouseX mouseY

    set mouseX $x
    set mouseY $y

}

proc PlayBackLog {} {
    global fsBox

    # Get a log file name
    set fsBox(path) /tmp
    # Change for saving sessions as batch scripts only.
    set fsBox(pattern) {cmdLog.*}
    set file [ FSBox "Select log file to play back" ]
    
    if {$file == ""} {
	return
    }

    DEVise playLog $file
}

# Displays a simple text window with the contents of file KeyMouseHelp.txt
# (Needs error checking for the file operation...)
proc ShowKeyMouseHelp {} {
    global libdir

    if {[WindowVisible .keyMouseHelp]}  {
	return
    }

    set w .keyMouseHelp

    toplevel $w
    wm geometry $w +50+50
    wm title $w "Key/Mouse Help"

    frame $w.body
    frame $w.cntl

    # Read message text from help file
    set filename "$libdir/KeyMouseHelp.txt"
    set stream [open $filename]
    set text [read $stream]
    close $stream

    set t [text $w.body.text -width 60 -height 24 -relief groove \
	-wrap none -yscrollcommand "$w.body.scroll set"]

    $t insert 1.0 $text
    $t configure -state disabled

    scrollbar $w.body.scroll -command "$w.body.text yview"

    button $w.cntl.ok -text "OK" -width 8 -command "destroy $w"

    pack $w.body $w.cntl -side top -fill both
    pack $w.body.scroll -side right -fill y
    pack $w.body.text -side left -fill both -expand true
    pack $w.cntl.ok -side right -fill x -expand 1
}
