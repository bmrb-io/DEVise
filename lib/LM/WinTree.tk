proc CreateWindowTree {  } {
    global winTree winFrame
    global rootx rooty 
    set winFrame $winTree.frame
    set xscroll $winTree.xscroll
    set yscroll $winFrame.yscroll
    set winCanvas $winFrame.canvas

    frame $winFrame
    canvas $winCanvas -width 200 -yscrollcommand  "$yscroll set" \
	    -xscrollcommand "$xscroll set"
    scrollbar $yscroll -command "$winCanvas yview"
    scrollbar $xscroll -orient horizontal -command "$winCanvas xview"
    pack $winCanvas $yscroll -in $winFrame -side left -fill y
    pack $winFrame -in $winTree -expand 1 -fill both 
    pack $xscroll -in $winTree -side bottom -fill x

    set lastWin ""
    CreateBinding $winCanvas oval <Double-1>  "global currentWin ; set currentWin"
    CreateBinding $winCanvas text <Double-1>  "global currentWin ; set currentWin"
    CreateWin $winCanvas Display $rootx $rooty $lastWin ""
}    

proc HideWindowTree { } {
    global winTree 
    pack forget $winTree
}

proc ShowWindowTree { } {
    global winTree controlPanel currentMode
    
    if { $currentMode  == "Display" } {
	pack $winTree -side left -in $controlPanel.middle -fill y \
		-before $controlPanel.canvas 
    } else {
	pack $winTree -side left -in $controlPanel.middle -fill y \
		-before $controlPanel.editCanvas 
    }
}

proc GetChildren { w } {
    return [LM getChildren $w]
}


proc WinTreeAddChild { parent child} {
    global winFrame
    
    AddChild $winFrame.canvas $parent $child
}

proc WinTreeDeleteChild { parent child } {
    global winFrame
    
    DeleteChild $winFrame.canvas $parent $child
}