#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 1996
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

############################################################

#	$Id$

#	$Log$
#	Revision 1.1  1996/06/12 14:57:59  wenger
#	Added GUI and some code for saving data to templates; added preliminary
#	graphical display of TDatas; you now have the option of closing a session
#	in template mode without merging the template into the main data catalog;
#	removed some unnecessary interdependencies among include files; updated
#	the dependencies for Sun, Solaris, and HP; removed never-accessed code in
#	ParseAPI.C.
#

############################################################

# Show the TDatas currently used in this session.
# As of right now, this shows all TDatas that are open, even if they
# aren't used in any view.
proc ShowTDatas {} {

    # Return without doing anything if the window is already showing.
    if {[WindowVisible .tdlist]} {
	return
    }

    # Make a list of all of the TDatas.
    set tDataList ""

    set classes [ DEVise get tdata ]
    foreach class $classes {
	set instances [ DEVise get tdata $class ]
	foreach inst $instances {
	    lappend tDataList $inst
	}
    }

    # Build the window to show them in.
    toplevel .tdlist

    wm title .tdlist "Current TDatas"

    wm geometry .tdlist +100+100

    frame .tdlist.ftop
    frame .tdlist.fbot
    pack .tdlist.ftop .tdlist.fbot -side top -fill x

    listbox .tdlist.tdatas -relief raised -borderwidth 2 \
	-yscrollcommand ".tdlist.scroll set"
    foreach tdata $tDataList {
	.tdlist.tdatas insert end $tdata
    }

    scrollbar .tdlist.scroll -command ".tdlist.tdatas yview"

    pack .tdlist.scroll -in .tdlist.ftop -side right -fill y
    pack .tdlist.tdatas -in .tdlist.ftop -side top -fill x

    button .tdlist.ok -text "OK" -width 10 -command { destroy .tdlist }
    button .tdlist.cancel -text "Cancel" -width 10 \
	-command { destroy .tdlist }

    pack .tdlist.ok .tdlist.cancel -in .tdlist.fbot -side left -padx 3m \
	-pady 2m

    return
}
