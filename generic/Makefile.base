.c.o:
	$(CC) -c $(CFLAGS) $<
.C.o: 
	$(CC) -c  $(CFLAGS) $<

CC = g++

CFLAGS = $(ARCH_FLAGS) -Wall -I../../graphics -I../../graphics.new \
	-I../../tape -fexternal-templates -Wall -Wno-unused -O -DUNIX

LDFLAGS = -L../graphics.new -L../graphics -L../tape -L../issm \
	-L../crsp -L../compustat -lgraphics.new -lgraphics \
	-lissm -lcrsp -lcstat -ltape -ltk -ltcl -lXmu -lXt -lXext -lX11 -lm

SRC = generic.c devise.C deviseb.C

OBJ = $(SRC:.c=.o)
OBJ += $(SRC:.C=.o)

ALLLIBS = ../graphics/libgraphics.a ../graphics.new/libgraphics.new.a \
	../tape/libtape.a ../issm/libissm.a ../compustat/libcstat.a \
	../crsp/libcrsp.a

CLIENTLIB = ../graphics.new/libclient.a
SERVERLIB = ../graphics.new/libserver.a
MONOLITHLIB = ../graphics.new/libmonolith.a

all: generic devise devised deviseb

generic: generic.o $(ALLLIBS) $(MONOLITHLIB)
	$(CC) -o $@ $@.o $(ARCH_LDFLAGS) -L../graphics.new -lmonolith \
		$(LDFLAGS) $(ARCH_LDPOST)

devised: generic.o $(ALLLIBS) $(SERVERLIB)
	$(CC) -o $@ generic.o $(ARCH_LDFLAGS) -L../graphics.new -lserver \
		$(LDFLAGS) $(ARCH_LDPOST)

devise: devise.o $(CLIENTLIB)
	$(CC) -o $@ $@.o $(ARCH_LDFLAGS) -L../graphics.new -lclient \
		$(LDFLAGS) $(ARCH_LDPOST)

deviseb: deviseb.o $(CLIENTLIB)
	$(CC) -o $@ $@.o $(ARCH_LDFLAGS) -L../graphics.new -lclient \
		$(ARCH_LDPOST)

.PHONY: clean mostlyclean

clean: mostlyclean
	-rm generic devised devise deviseb

mostlyclean:
	-rm $(OBJ)
