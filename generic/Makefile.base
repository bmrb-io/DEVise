.c.o:
	$(CC) -c $(CFLAGS) $<
.C.o: 
	$(CC) -c  $(CFLAGS) $<

CC = g++

OPTFLAG = -O
#OPTFLAG = -g
#OPTFLAG = -gstabs

CFLAGS = $(ARCH_FLAGS) -I../../graphics -I../../graphics.new \
	-I../../tape -fexternal-templates -Wall -Wno-unused $(OPTFLAG) -DUNIX

# ksb: I created an unfortunate dependency from graphics to graphics.new
# which caused -lgraphicsnew to be listed twice below...
LDFLAGS = -L../graphics.new -L../graphics -L../tape -L../issm \
	-L../crsp -L../compustat -lgraphicsnew -lgraphics -lgraphicsnew \
	-lissm -lcrsp -lcstat -ltape $(ARCH_SYSLIBS)

SRC = generic.c devise.C deviseb.C

OBJ = $(SRC:.c=.o)
OBJ += $(SRC:.C=.o)

ALLLIBS = ../graphics/libgraphics.a ../graphics.new/libgraphicsnew.a \
	../tape/libtape.a ../issm/libissm.a ../compustat/libcstat.a \
	../crsp/libcrsp.a

CLIENTLIB = ../graphics.new/libclient.a
SERVERLIB = ../graphics.new/libserver.a
MONOLITHLIB = ../graphics.new/libmonolith.a

all: generic devise devised deviseb

# Note: the first line below forces CompDate.c to always be compiled when
# we link this module.

generic: generic.o $(ALLLIBS) $(MONOLITHLIB)
	$(CC) -c $(CFLAGS) ../../generic/CompDate.c
	$(CC) -o $@ $@.o CompDate.o $(ARCH_LDFLAGS) -L../graphics.new \
		-lmonolith $(LDFLAGS) $(ARCH_LDPOST)

devised: generic.o $(ALLLIBS) $(SERVERLIB)
	$(CC) -c $(CFLAGS) ../../generic/CompDate.c
	$(CC) -o $@ generic.o CompDate.o $(ARCH_LDFLAGS) -L../graphics.new \
		-lserver $(LDFLAGS) $(ARCH_LDPOST)

devise: devise.o $(CLIENTLIB)
	$(CC) -o $@ $@.o CompDate.o $(ARCH_LDFLAGS) -L../graphics.new \
                -lclient $(LDFLAGS) $(ARCH_LDPOST)

deviseb: deviseb.o $(CLIENTLIB)
	$(CC) -o $@ $@.o CompDate.o $(ARCH_LDFLAGS) -L../graphics.new \
                -lclient $(ARCH_LDPOST)

.PHONY: clean mostlyclean

clean: mostlyclean
	-rm generic devised devise deviseb

mostlyclean:
	-rm $(OBJ)
