#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 1992-1996
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

#  Makefile generic sources.

############################################################

#  $Id$

#  $Log$
#  Revision 1.52  1998/06/10 14:59:28  wenger
#  Added DataReader to link.
#
#  Revision 1.51  1998/05/06 22:04:30  wenger
#  Single-attribute set links are now working except where the slave of
#  one is the master of another.
#
#  Revision 1.50  1998/03/31 16:40:29  wenger
#  Added an 'export' directory to csgroup and re-made solaris dependencies
#  accordingly.
#
#  Revision 1.49  1998/03/26 15:20:21  zhenhai
#  *** empty log message ***
#
#  Revision 1.48  1998/03/12 02:09:16  wenger
#  Fixed dynamic memory errors in collaboration code that caused core dump
#  on Linux; collaboration code now tolerates interruption of accept() and
#  select() in some cases; fixed excessive CPU usage by collaborator
#  (select timeout now non-zero); fixed some other collaboration bugs.
#
#  Revision 1.47  1998/03/03 20:53:53  wenger
#  Fixed bad free in csgroup code; cleaned up (somewhat) the use of the
#  (highly-dangerous) ERROR macro.
#
#  Revision 1.46  1998/02/26 20:39:00  taodb
#  Added support of building csgroup directory
#
#  Revision 1.45  1998/02/20 20:43:03  wenger
#  Changed color and utils libraries to new export directory scheme for
#  dealing with include files (email with complete explanation forthcoming).
#
#  Revision 1.44  1998/02/19 23:24:35  wenger
#  Improved color library and got client/server test code to work
#  (except for setting colors by RGB): reduced compile interdependencies,
#  especially in color library; color and utils libraries install headers
#  as per code reorg plans; added standard DEVise headers to all color
#  manager files; moved color initialization into Display constructors;
#  fixed some compile warnings throughout the code.
#
#  Revision 1.43  1998/02/16 18:13:16  wenger
#  Added collaborator to appropriate release scripts; got deviseb to compile
#  and link.
#
#  Revision 1.42  1998/02/12 17:15:40  wenger
#  Merged through collab_br_2; updated version number to 1.5.1.
#
#  Revision 1.41  1998/01/14 16:38:42  wenger
#  Merged cleanup_1_4_7_br_6 thru cleanup_1_4_7_br_7.
#
#  Revision 1.40.2.2  1998/02/12 05:19:08  taodb
#  Updated dependency list
#
#  Revision 1.40.2.1  1998/01/28 22:43:17  taodb
#  Added support for group communicatoin
#
#  Revision 1.40  1998/01/07 19:28:14  wenger
#  Merged cleanup_1_4_7_br_4 thru cleanup_1_4_7_br_5 (integration of client/
#  server library into Devise); updated solaris, sun, linux, and hp
#  dependencies.
#
#  Revision 1.39  1997/12/23 21:00:26  wenger
#  Got the latest version of DEVise to compile and link on SPARC/Solaris;
#  removed (old) layout manager code from DEVise link.
#
#  Revision 1.38  1997/12/02 17:35:22  wenger
#  Set up src/color and src/utils to compile "normally" for solaris and
#  solsparc.
#
#  Revision 1.37  1997/11/24 23:14:05  weaver
#  Changes for the new ColorManager.
#
#  Revision 1.36  1997/11/05 00:21:18  donjerko
#  Added RTree library.
#
#  Revision 1.35.4.5  1998/01/12 20:35:09  wenger
#  Fixed devise.pure compile.
#
#  Revision 1.35.4.4  1998/01/07 15:59:09  wenger
#  Removed replica cababilities (since this will be replaced by collaboration
#  library); integrated cslib into DEVise server; commented out references to
#  Layout Manager in Tcl/Tk code; changed Dispatcher to allow the same object
#  to be registered and unregistered for different file descriptors (needed
#  for multiple clients); added command line argument to specify port that
#  server listens on.
#
#  Revision 1.35.4.3  1997/12/23 21:43:01  wenger
#  Disabled layout manager GUI and removed (old) layout manager code
#  from DEVise link.
#
#  Revision 1.35.4.2  1997/12/09 19:03:37  wenger
#  deviseb now uses client/server library.
#
#  Revision 1.35.4.1  1997/12/09 16:03:46  wenger
#  Devise client now uses client/server library.
#
#  Revision 1.35  1997/08/12 18:46:42  wenger
#  Fixes to get DEVise to compile on Linux; changed -gstabs to -g in
#  makefiles; various other makefile cleanups.
#
#  Revision 1.34  1997/08/11 14:15:19  wenger
#  Modifications to get DEVise to compile on Linux.
#
#  Revision 1.33  1997/06/16 16:05:33  donjerko
#  New memory management in exec phase. Unidata included.
#
#  Revision 1.32  1997/06/13 18:56:08  wenger
#  Added xvertext lib to ALLLIBS.
#
#  Revision 1.31  1997/06/13 18:07:16  wenger
#  Orientation is now working for text labels and fixed text labels.
#
#  Revision 1.30  1997/05/28 15:38:09  wenger
#  Merged Shilpa's layout manager code through the layout_mgr_branch_2 tag.
#
#  Revision 1.29.4.1  1997/05/20 16:10:41  ssl
#  Added layout manager to DEVise
#
#  Revision 1.29  1997/05/02 15:39:42  wenger
#  Greatly reduced the dependencies of the testWindowSpeed program.
#
#  Revision 1.28.2.1  1997/05/21 20:39:25  weaver
#  Changes for new ColorManager
#
#  Revision 1.28  1997/04/09 18:24:22  wenger
#  Fixed various makefiles (removed extra -gstabs flags, etc.);
#  setup script now links client.tcl into all cslib directories;
#  added 24 point font to available sizes in font selection GUI.
#
#  Revision 1.27  1997/04/04 15:44:36  wenger
#  Set up makefiles to allow making a 'profile' version of Devise.
#
#  Revision 1.26  1997/01/30 19:48:43  jussi
#  Added StateMap.o to object list.
#
#  Revision 1.25  1996/12/23 17:00:06  donjerko
#  Moved -ldte behind -lgraphics
#
#  Revision 1.24  1996/12/16 11:14:28  kmurli
#  No change
#
#  Revision 1.23  1996/11/18 18:12:38  donjerko
#  Added DTE make stuff
#
#  Revision 1.22  1996/11/15 21:30:20  jussi
#  Added testWindowSpeed.
#
#  Revision 1.21  1996/11/01 19:04:31  kmurli
#  Makefile changed to include DQL sources
#
#  Revision 1.20  1996/08/09 15:40:01  wenger
#  Modified makefiles to allow making static and Purify'd executables.
#
#  Revision 1.19  1996/08/06 20:11:37  wenger
#  Set up makefiles to easily compile with -g flag; other cleanup of
#  makefiles.
#

############################################################

include ../../Makefile.common

BASIC_CFLAGS = -D__tcltk $(ARCH_FLAGS) -I../../graphics -I../../graphics.new \
	-I../../src/color/export -I../../src/utils/export -I../../tape \
	$(GLINCLUDE)\
	-Wall -Wno-unused $(TEMPLATE_FLAGS) $(OPTFLAG) -DUNIX -DNEW_LAYOUT

CFLAGS =$(BASIC_CFLAGS) -I../../csgroup/export
BATCH_CFLAGS =$(BASIC_CFLAGS) -I../../csgroup

# ksb: I created an unfortunate dependency from graphics to graphics.new
# which caused -lgraphicsnew to be listed twice below...
# dd: dte need stuff from Jussi's SBM which is in graphics.new

LDFLAGS = -L../DTE/ -L../RTree -L../graphics.new -L../graphics -L../tape \
	-L../color -L../utils -L../issm -L../csgroup\
	-L../crsp -L../compustat -L../LM -L../xvertext \
	-lgraphicsnew -lgraphics -lutils -lcolor \
	-ldte -lrtree -lgraphicsnew -lcsgroup \
	-lXrot \
	-lissm -lcrsp -lcstat -ltape \
	-L../unidata -lunidata \
	-L../DataReader -ldatareader \
	-L$(PERL_CORE) -lperl $(ARCH_SYSLIBS)

TEST_LDFLAGS = -L../graphics -lgraphics -lutils -lcolor -lX11

# Set up for profiling.
ifneq ($(DEV_PROFILE),)
	ARCH_LDPOST  += -ldl
endif


SRC = generic.c devise.C deviseb.C CompDate.c StateMap.C DeviseClient.c \
	DeviseBatchClient.c

SRCc = $(filter %.c,$(SRC))
SRCC = $(filter %.C,$(SRC))
OBJ = $(SRCc:.c=.o)
OBJ += $(SRCC:.C=.o)

ALLLIBS = ../utils/libutils.a ../color/libcolor.a \
	../graphics/libgraphics.a \
	../graphics.new/libgraphicsnew.a ../unidata/libunidata.a \
	../DTE/libdte.a \
	../RTree/librtree.a \
	../tape/libtape.a ../issm/libissm.a ../compustat/libcstat.a \
	../crsp/libcrsp.a ../xvertext/libXrot.a ../DataReader/libdatareader.a

CLIENTLIB = ../graphics.new/libclient.a
SERVERLIB = ../graphics.new/libserver.a ../csgroup/libcsgroup.a
MONOLITHLIB = ../graphics.new/libmonolith.a

all: generic devise devised collaborator deviseb
pure: generic.pure devise.pure devised.pure collaborator.pure deviseb.pure 
static: generic.static

# Note: the line below forces CompDate.c to always be compiled.
FORCE_DATE = $(CC) -c $(CFLAGS) ../../generic/CompDate.c


GENERIC = $(CC) -o $@ generic.o StateMap.o CompDate.o \
		$(ARCH_LDFLAGS) -L../DTE -L../graphics.new \
		-lmonolith $(LDFLAGS)

generic: generic.o StateMap.o $(ALLLIBS) $(MONOLITHLIB) $(SERVERLIB)
	$(FORCE_DATE)
	$(GENERIC) $(ARCH_LDPOST)

generic.pure: generic.o StateMap.o $(ALLLIBS) $(MONOLITHLIB) $(SERVERLIB)
	$(FORCE_DATE)
	$(PURIFY) $(PURE_OPT) $(GENERIC) $(ARCH_LDPOST)

generic.static: generic.o StateMap.o $(ALLLIBS) $(MONOLITHLIB) $(SERVERLIB)
	$(FORCE_DATE)
	$(GENERIC) $(ARCH_STATIC_LDPOST)

DEVISED = $(CC) -o $@ generic.o StateMap.o CompDate.o \
		$(ARCH_LDFLAGS) -L../graphics.new\
		-lserver $(LDFLAGS) $(ARCH_LDPOST) -lcsgroup -lclient

devised: generic.o StateMap.o $(ALLLIBS) $(SERVERLIB) 
	$(FORCE_DATE)
	$(DEVISED)

devised.pure: generic.o StateMap.o $(ALLLIBS) $(SERVERLIB)
	$(FORCE_DATE)
	$(PURIFY) $(PURE_OPT) $(DEVISED)


DEVISE = $(CC) -o $@ devise.o DeviseClient.o ../graphics.new/Version.o \
	$(ARCH_LDFLAGS) -L../csgroup -L../graphics.new -lcsgroup -lclient \
	$(ARCH_SYSLIBS) $(ARCH_LDPOST)

devise: devise.o $(CLIENTLIB) DeviseClient.o ../csgroup/libcsgroup.a
	$(FORCE_DATE)
	$(DEVISE)

devise.pure: devise.o $(CLIENTLIB) DeviseClient.o
	$(FORCE_DATE)
	$(PURIFY) $(PURE_OPT) $(DEVISE)

COLLABORATOR = $(CC) -o $@ -D __tcltk collaborator.o $(ARCH_LDFLAGS) \
	-L../csgroup -L../graphics.new $(ARCH_SYSLIBS) -lcsgroup -lclient\
	$(ARCH_LDPOST) 

collaborator: collaborator.o $(SERVERLIB) 
	$(COLLABORATOR)

collaborator.pure: collaborator.o $(SERVERLIB) 
	$(PURIFY) $(PURE_OPT) $(COLLABORATOR)

DEVISEB = $(CC) -o $@ deviseb.o DeviseBatchClient.o ../graphics.new/Version.o \
	$(ARCH_LDFLAGS) -L../csgroup -L../graphics.new -lcsgroup $(ARCH_LDPOST)\
	-lclient

deviseb.o:../../generic/deviseb.C 
	$(CC) -c $(CFLAGS) $<
	
DeviseBatchClient.o:../../generic/DeviseBatchClient.c
	$(CC) -c $(CFLAGS) $<

deviseb: deviseb.o DeviseBatchClient.o $(CLIENTLIB)
	$(FORCE_DATE)
	$(DEVISEB)

deviseb.pure: deviseb.o DeviseBatchClient.o $(CLIENTLIB)
	$(FORCE_DATE)
	$(PURIFY) $(PURE_OPT) $(DEVISEB)


TESTWS = $(CC) -o $@ testWindowSpeed.o ../graphics.new/MapIntToInt.o \
	../graphics.new/Version.o CompDate.o $(ARCH_LDFLAGS) \
        -L../graphics.new -lmonolith $(TEST_LDFLAGS)

testWindowSpeed: testWindowSpeed.o $(ALLLIBS) $(MONOLITHLIB)
	$(FORCE_DATE)
	$(TESTWS) $(ARCH_LDPOST)


.PHONY: clean mostlyclean

clean: mostlyclean
	-rm generic devised devise deviseb testWindowSpeed collaborator
	-rm generic.pure devised.pure devise.pure deviseb.pure collaborator.pure
	-rm generic.static

mostlyclean:
	-rm $(OBJ) collaborator.o
	-rm *pure*.o
