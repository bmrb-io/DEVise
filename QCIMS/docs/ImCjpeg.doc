ImCjpeg is a JPEG compression program that uses the Independent
JPEG Group's (IJG's) libjpeg library, and the Rdopt library for
optimized/rate-controlled image compression.

This software is released for non-commercial use only. Please
read the file "COPYRIGHT" before anything else.

For figuring out what exactly RD-OPT is, and how it optimizes
DCT quantization, read some papers.. (Proc of Data Compression
Conference 95 and 96 have one each).


Usage:
ImCjpeg [-outfile file][-qclicfile file][-qmetric qm]
  [-rdopt][-nordopt] [-rdcoarse c] [-rdthresh th]
  [-rdtarget metric rdtarg] [-rdmaxtab maxt]
  [-qtables file][-scans file][-sequential]
  [-ntries n] [-negtol del] [-postol del]
  [-target target_metric target] [imfile]

The parameters are explained below. Generally speaking,
there are three ways to set compression parameters with ImCjpeg:

1. Provide compression parameters (quantization tables, scan-scripts)
   explicitly.
2. Ask ImCjpeg to run RD-OPT for generating quantization tables.
3. Ask ImCjpeg to figure out reasonable parameters without running
   RD-OPT. 

Once ImCjpeg knows what parameters to use, it might have the further
task of compressing to a target rate or quality, governed
by the "-target", "-negtol", "-postol", "-ntries" options. If you
use methods 2 or 3 above for figuring out the compression parameters,
ImCjpeg will try to generate compression params best suited for the
target. Fairly accurate rate-control can be achieved, usually
within a hundred bytes. Note that 2 mechanisms are used for
rate-control: firstly, RD-OPT is used to get quant tables that would
compress very close to the target; if we go over the target,
(and you are ok with Progressive JPEG..ie, you haven't specified
-sequential), then some pruning of AC coefficients will be done
to try and match the target exactly ("progressive scan refinement").


Before we get down to the parameter details, it would make sense
to give two examples of (recommended) usage:

1. If you want to compress the image lena.ppm to a size of roughly
   40000 bytes: 
ImCjpeg -outfile lena.jpg -rdopt -rdcoarse 7 -rdthresh 30 \
        -target size 40000 -negt -1 -post -1 lena.ppm	

   "-rdcoarse 7" determines how coarse should the search for qtables 
   by RD-OPT be. 0 is slowest and 8 fastest.
   "-rdthresh 30" determines the range of zeroing thresholds tried
   by RD-OPT. 0 is fastest, 255 is slowest. You never really need
   anything more than 40-50.
   "-target size 40000" should be self-evident
   "-negt -1" says you don't care to specify a lower bound on
   acceptable size
   "-post -1" says you don't care to specify an upper bound on
   acceptable size

2. If you want to compress the image lena.ppm to a size of 40000
   bytes, and want to make sure that no more than 40000 bytes are
   used, and want to come as close to 40000 as possible:
ImCjpeg -outfile lena.jpg -rdopt -rdcoarse 7 -rdthresh 30 \
        -target size 40000 -negt 0 -post 0 lena.ppm	
   
   Note that in this case, the results might be slightly off the
   (nearly) optimal rate-distortion tradeoffs that RD-OPT gives,
   as we are fine-tuning with "progressive scan refinement"

Here are the parameter descriptions:

-outfile file
   Put the compressed image in file "file". Default is stdout.

imfile
   Read the image from file "imfile". If omitted, default is
   to read from stdin. The image can be in PNM, GIF, TIFF, or
   JPEG formats. For the GIF and TIFF images, you need to
   have the unix tools "giftopnm" and "tifftopnm" on your
   search path. If it is a JPEG image, you can't specify new
   quantization tables (-qtables): all you can do is specify
   a target (-target), and ImCjpeg will try to meet the target
   by using the "progressive scan refinement" technique hinted
   at above. Oh, "imfile" can also be an http URL for an image!


-qtables file
   Read quantization tables (in IJG's format: basically, 1, 2, or
   3 8x8 tables of integers in range 1..255 in row-major order) from
   file "file". Qtables generated by "ImRdopt" are also OK (they
   contain additional parameters/info such as zeroing thresholds).
   If this option is used, "-rdopt" and all RD-OPT related options
   will be ignored. 

-scans file
   Read a progressive scan script from file "file". The format is
   as in IJG. If this is not provided, ImCjpeg uses its own scan
   script, which is especially desirable if ImCjpeg uses RD-OPT to
   figure out the qtable, as in that case ImCjpeg has additional
   info available to figure out a "smart" scan script. 

-sequential
   Do not use Progressive JPEG, use Sequential mode only. This is
   OFF by default. With this option set, you can't do fine-tuning
   aka "progressive scan refinement" to meet the target exactly.

-target target_metric target
-postol pt
-negtol nt
-ntries n
   Compress so that "target" is met. "target_metric" determines
   the units in which "target" is measured. The following are possible:
   target_metric    target
   -----------------------
   size             # bytes
   bpp              bits-per-pixel
   psnr             PSNR in dB
   
   "-postol pt" says that it is acceptable to overshoot "target" by
     "pt". If "pt" is -ve, any amount of overshooting is acceptable.
     ImCjpeg (sort of) guarantees to respect the upper bound of
     "target + pt", except for very low targets, such as
     "-target size 400".
   "-negtol nt" says that it is acceptable to undershoot "target" by
     "nt". If "nt" is -ve, any amount of overshooting is acceptable.
     ImCjpeg does *not* guarantee respecting the lower bound. It makes
     at most "n" attempts to do so using "progressive scan refinement",
     where "n" is the value in "-ntries n".
   "-ntries n"
     "n" is the max # of fine-tuning attempts to beat the lower
     bound of "target - nt". It can be any integer >= 0. In any
     case, fine-tuning attempts can only last as long as the
     offending scan can be broken up into sub-scans, so giving
     a very high value to "n" is OK, even recommended if you
     care about the lower bound dearly.
   ImCjpeg uses "target_metric"-specific reasonable defaults for
   "-postol", "-negtol", and "-ntries".

      
-rdopt
-nordopt
-rdcoarse c
-rdthresh th
-rdmaxtab maxt
-rdtarget metric rdtarg
   These control the behavior of RD-OPT. With "-nordopt", Rdopting
   is turned off. Default is to have it turned on (ie, "-rdopt").
   "-rdcoarse c" determines how coarse the search for quantization
     table entries should be. "c" can be any int in range 0-8. 0 is
     slowest (never needed, as very little compromise is made till
     "c" = about 4), and 8 the fastest. 7 is the default.
   "-rdthresh th" governs the zeroing threshold range. "th" can be
     any int in the range 0..255. 30 is the recommended default. 
   "-rdmaxtab maxt" specifies upper bounds for quantization tables
     in the file "maxt". This can be used to further speed up RD-OPT.
   "-rdtarget metric rdtarg" specifies how a quantization table is
     gotten off RD-OPT. By default, is "-postolerance" has
     a non-negative value, (ie, an upper bound is given), RD-OPT is
     asked to give qtables for a target slightly greater than
     that given in "-target", so that progressive scan refinement can
     be used to come close to the target. You can override that with
     this. You can, of course, use an entirely different "-rdtarget"
     than "-target", but one must wonder why you would feel compelled
     to do so.


Examples:
All of these compress the image lena.pgm into the JPEG file lena.jpg.

1. Compression to approximately 1.0 bits per pixel, with the coarsest
   and non-thresholding (hence fastest) RD-OPT:

   ImCjpeg -outf lena.jpg -target bpp 1.0 -negt -1 -post -1 \
	   -rdcoarse 8 -rdthresh 0 lena.pgm

2. Same as above, with target being PSNR of 40 dB, and with
   thresholding (an excellent idea). 

   ImCjpeg -outf lena.jpg -target psnr 40.0 -negt -1 -post -1 \
	   -rdcoarse 8 -rdthresh 10 lena.pgm

3. Compression to 20000 bytes without going over, with a slightly
   slower RD-OPT. 

   ImCjpeg -outf lena.jpg -target size 20000 -negt 0 -post 0 \
	   -rdcoarse 4 -rdthresh 10 lena.pgm

4. Sequential JPEG compression to approximately 5000 bytes, with
   a slower RD-OPT. Note that for low sizes as these, higher values
   of "-rdthresh" and low "-rdcoarse" are useful. 

   ImCjpeg -outf lena.jpg -target size 5000 -sequential \
	   -rdcoarse 2 -rdthresh 50 lena.pgm

This is a rough, hasty draft. Please send comments/bug-reports to:
ratnakar@cs.wisc.edu

Viresh Ratnakar
Computer Sciences Department
UW-Madison

