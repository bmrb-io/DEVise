ImRdopt
-----------

ImRdopt is a program to generate customized DCT quantization
tables for use in JPEG compression. The program runs an
optimization algorithm and then prompts the user to enter
compression or quality specifications whereupon it outputs
a Quantization Table or does the actual compression.

The quantization tables can be used by ImCjpeg for compression.
You can also use IJG's "cjpeg" for compression, but you must
turn thresholding off (with "-thresh 0", which is the default) for
using "cjpeg". Both ImCjpeg and compression-from-ImRdopt's-command
interface use IJG's libjpeg, extended to support thresholding. 

For detailed technical info on the RD-OPT algorithm and thresholding,
please read the Data Compression Conference papers (1995 and 1996) on 
RD-OPT. 


Usage
-----

ImRdopt [flags] [imfile]
  where, flags can be:

   -v: verbose output: The more -v's, the more verbose the output.
   -silent: Normal stderr output will be suppressed. 
   -cmdfile <cfile>: After optimization, read commands from 
      <cfile> instead of stdin.  
   -numtables T: T tables will be used for quantization.
      1 table each for color planes numbered 0..(T-2). Color
      planes numbered T-1 thru N-1 will be quantized together,
      where N=#image planes. (default N). 
   -thresh T: Try zeroing thresholds upto T/2 greater than q/2.
      Default 0. 
   -coarseness C: Use a coarse search for Q entries. C determines
      the coarseness. C = 0 means try every possible value; C=8 is
      the coarsest, currently. Default is 2. 
   -mintable fname: Q tables will have entries no less than those in the
      table listed in the file fname. Upto N tables can be given in the
      file. 
   -maxtable fname: Q tables will have entries no more than those in the
      table listed in the file fname. Upto N tables can be given in the
      file. 
   -weights cwfile: The errors in various DCT coefficients are to be
      weighted according to the weights listed in cwfile. You can give
      upto N (=#planes) 8x8 tables (row-major order). These
      non-negative, real-valued weights will be normalized so that they
      add to 64. Useful for using perceptually weighted distortion
      measures. 
   -pweights w0[,w1,..]: For aggregate error, unit n will have weight
      wn. Unit means a set of plabes with a common quantization table.
      Missing weights will be set to the last specified weight. 
      Weights will be normalized to add up to numtables. 
   -rgbto2ycc: Convert RGB to YCbCr, subsample 2:1 in horiz and
      vert directions for Cb and Cr planes. This is the default for
      3-plane images.
   -rgbtoycc: Convert RGB to YCbCr. 
   -noycc: Do not convert RGB to YCbCr, do not subsample.
   -raw W H N B: Indicates that the image data is in RAW
      (headerless) format. W=width, H=height, N=#planes, B=bytes
      per pixel. B can be 1 or 2 (MSBfirst endian for 2). Planes
      are stored consecutively, each plane in row-major order.
   -sbits s: Use only s bits per pixel from the data. s can be
      8, 10, 12, or 16. Useful for PSNR calculations for images
      with 2-bytes per pixel (such as with B=2 in -raw).
   -clampDC d: Don't consider qtable entries greater than d for the
      DC coefficient (default 255, ie, -dontclampDC). 
   -dontclampDC: Consider all qtable entries for DC too. 
   -dcdpcm: Use an approximation of dpcm coding done for the DC coef
      to estimate its entropy.
   -method meth: Sepcifies the optimization method: meth can be
      lagrange (default) or dynamic.
   -bppmax b: Consider bits per pixel values upto b (default 1.0).
      Ignored if method is lagrangian.
   -bppscale B: Discretize bpp by the integer B (default 5000). The
      slowness of the program grows linearly with b*B. Ignored if
      method is lagrangian.
   -errfile fname: Send stderr to file fname (can be - for stdout). 


Command Interface
-----------------

After the optimization algorithm is done running, ImRdopt prompts the
user with

Command>

unless the -cmdfile option was used in which case commands are read
from the file named in that option. In response to most commands,
quantization tables Q (and thresholding tables, if -thresh was
specified) will be generated.

Valid commands are:

     [compress|correct] size <target_size> 
       find Q to get compressed size <= target_size bytes

     [compress|correct] bpp <target_bpp> 
       find Q to get compressed size <= target_bpp bits per pixel

     [compress|correct] psnr <target_psnr> 
       find Q to get psnr >= target_psnr dB

     [compress|correct] snr <target_snr> 
       find Q to get snr >= target_snr dB

     [compress|correct] rmse <target_rmse> 
       find Q to get rmse <= target_rmse 

     qfile fname
       output subsequent next qtables generated by  commands to
       the file fname instead of stdout. 
     
     cfile fname
       output subsequent compressed files to the file fname instead
       of the default
     
     stats
       If this command is issued, all subsequent qtables will
       also contain coefficient-wise breakup of rate and distortion.
       This is useful for splitting the jpeg file into scans to
       use the "progressive" mode. This info is used by ImCjpeg. 
       By default, ImRdopt does progressive JPEG compression, and
       it's a good idea to issue a "stats" at the command line
       before anything else. 
       Printing these stats can be disabled by specifying:
     
     nostats
       Do not print r-d breakups in qtable files (default).
     
     nocorrect
       Do not apply bpp corrections (default). Undoes any previously
       issued "correct". 

     progressive
       Use progressive JPEG compression (default). 

     sequential
       Use sequential JPEG compression. 
     
     curve file minbpp maxbpp npoints actbpp? [qprefix]
       Print a bpp-psnr curve in file "file". If "file" is "-",
       print on stdout. Use "npoints" points from "minbpp" to
       "maxbpp". If "actbpp?" is 0, then the bpp's printed are
       RD-OPT's predictions, If it is 1, then the bpp's are the
       actual values resulting from compression. If "qprefix" is
       given, qtable files corresponding to each point are
       generated, and named "<qprefix>.<n>", where <n> is the
       point-number (0 to npoints-1).

  The quantization+thresholding tables generated in response to the
  commands "size", "bpp", "psnr", "snr", and "rmse" will be printed
  on stdout (unless a qfile command has been issued earlier),
  if the "compress" or "correct" prefix is not given.

  If the "compress" prefix is specified, then we will compress the
  image using the Q-table(s), and put the results in a file. The name
  of that file is <image>.RDOPT<version>.jpg, unless a "cfile" command
  has been issued earlier. Progressive JPEG will be used (but you can
  switch to Sequential JPEG by issuing a "sequential" command at the
  prompt). 

  In case the lagrangian method is used, three additional commands
  can be issued at the command interface:

    deltabpp <value>
      While searching for a target bpp, stop as soon as you
      have come within plusminus <value>. Default is 0.001, you
      can set this to zero.
    
    deltamse <value>
      While searching for a target distortion, stop as soon as you
      have come within plusminus <value> of the mse. 
      Default is 0.01, you can set this to zero.

    deltalambda <value>
      While using the bisection method to search for the 
      Lagrangian parameter lambda that will give you rate/distortion
      closest to the target, stop when the lambda interval
      becomes smaller than <value>. Default is 1e-8. Avoid tinkering
      with this. Especially, do not set this to zero! 


**********************************************************************
**********************************************************************
                   	    MORE INFO:
**********************************************************************
**********************************************************************

When should I use the Lagrangian method for optimization?
  Almost always, and it is the default. This results in
  substantial improvement in speed. However, for thresholding T
  greater than about 100 along with coarseness < 2 (never really
  needed), use dynamic programming.

What is the deal with "-coarseness"? 
  Determines how coarsely we examine the range of possible quantization
  table entries. 0 means try every value. Highest possible coarseness,
  currently, is 8. The Q entries tried for coarseness=8 are 2,6,10,14,
  18,32,128,255. Execution speed increases with coarseness. 
  Experiments show that usually, very little quality is lost upto
  coarseness=4. The default is 2. 

What then, is "-thresh"?
  When q quantization table entry is q, any coeff with abs value
  less than q/2 gets quantized to zero. With -thresh, we can increase
  this zeroing threshold, with substantial improvements in rate-quality
  tradeoff. The value T in "-thresh T" determines the range of
  thresholds tried by ImRdopt. 
  The default is 0, but you should typically use a threshold of about
  20. Don't really ever need to set this > 50.

What is unit_num??
  Unit number is a number between 0 and (t-1) where t is the
  number of units in the image. Each unit is a set of color planes
  quantized with the same qtable. 

  Examples:

  ImRdopt -numtables 2 lena.ppm 

    Here, there are three color planes (Y, Cb, Cr) and
    two units. Unit # 0 consists of the Y plane and
    Unit # 1 consists of the Cb and Cr planes.

  ImRdopt lena.pgm

    Here, there is just one plane, and one unit.


Accuracy of results
-------------------

The psnr/snr/rmse values predicted by ImRdopt are *very* accurate.
The bpp predicted are *usually* within 0.02 bits per pixel of the
actual rate achieved by any good jpeg compressor using customized
huffman tables. You can use ImCjpeg for fine-tuning the rate-control.

Using the generated Q tables
----------------------------

With this release, you can always do the compression from the
command interface itself. However, if you generate the Q-tables in
files, you can use those files with "ImCjpeg" or with IJG's cjpeg
(only without thresholding, for IJG's cjpeg). For example, 

ImRdopt lena.pgm

Command> cfile lena.jpg
Command> compress bpp 1.0
Command> quit

OR

Command> qfile tab1
Command> bpp 1.0
Command> quit

can be followed with

ImCjpeg -qtables tab1 lena.pgm > lena.jpg

or

cjpeg -dct float -optimize -qtables tab1 -grayscale lena.pgm > lena.jpg

We recommend the use of -dct float and -optimize options in
the cjpeg program, for accuracy of the psnr/bpp predicted by
ImRdopt.


Comments, Suggestions, Bugs
----------------------------

Please send email to

ratnakar@cs.wisc.edu

Viresh Ratnakar
University of Wisconsin-Madison 
Computer Sciences Dept
1210 W Dayton St
Madison, WI 53706

