#  All code below this line (except for automatically created dependencies)
#  is independent of this particular makefile, and should not be changed!
#############################################################################

# ** Butterfly version of the mailfiles
# Flags normally set in top level makefile.  Make sure you want these
# default if you compile locally in this directory
PREFIX = $(PWD)
BIN = $(PREFIX)/bin
LIB = $(PREFIX)/lib
H   = -I../h

# Sun shared libraries with cc
#CC     = cc
#CFLAGS = -g -pic -L$(LIB) $H
#LIBEXT = so

# Static libraries with gcc
#CC       = gcc
#CFLAGS   = $H -L$(LIB) -g -traditional -Wall
#LIBEXT   = a

# Gcc macros for object files, cc for final linking (to get shared libraries)
#CC       = gcc
#CFLAGS   = $H -L$(LIB) -O -g -traditional
#CFLAGS2   = $H -L$(LIB) -g
#LIBEXT   = so
#.c:
#	$(COMPILE.c) $<
#	cc $(CFLAGS2) $(LDFLAGS) $(TARGET_ARCH) -o $@ $@.o $(LDLIBS)
#	$(RM) $@.o

# Libraries on the butterfly
CC	= cc
CFLAGS	= $H -L$(LIB) -g -DBFLY
LIBEXT	= a

# Other macros used in some or all makefiles
PRINT  = print
AR     = -ar
ARFLAGS= urv
RANLIB = ranlib
INSTALL = /bin/mv


# Note that "install" and "all" share the same entry-point.  If you wish
# to install a binary in a non-test directory, you must make sure the
# binary does not exist (eg. "make clean") and then run make specifying
# the proper value for PREFIX.  This ensures that the binary will be
# linked with the proper library (possibly at run-time).
install all: $(SIMPLE) $(COMPLEX)
	$(INSTALL) $? $(BIN)
	touch all install

$(SIMPLE) $(COMPLEX): $(wildcard $(LIB)/*.a)


#########################################################################
# Saving program versions                                               #
#########################################################################
rcs: 
	-ci -q "-mAutomatic Checkin" *.c

#########################################################################
# Odds and ends                                                         #
#########################################################################
clean:
	/bin/rm -f *.o *.BAK $(SIMPLE) $(COMPLEX)


print: $(SIMPLE) $(COMPLEX) $(FILES)
	for f in $? ;\
                do $(PRINT) $$f.* ;\
        done
	touch print

lint: 
	for f in *.c ;\
                do echo $$f; $(LINT) -I../h $$f $(LIB)/llib* ;\
        done

#########################################################################
# Determining program dependencies                                      #
#########################################################################
depend:
	grep '^#[ ]*include' *.c *.l *.y \
		| sed -e 's?:[^"]*"\([^"]*\)".*?: \$H/\1?' \
			-e '/</d' \
		        -e 's/\.c/.o/' \
		        -e 's/\.y/.o/' \
		        -e 's/\.l/.o/' \
		> makedep
	echo '/^# DO NOT DELETE THIS LINE/+2,$$d' >eddep
	echo '$$r makedep' >>eddep
	echo 'w' >>eddep
	cp makefile makefile.bak
	ed - makefile < eddep
	/bin/rm eddep makedep
	echo '# DEPENDENCIES MUST END AT END OF FILE' >> makefile
	echo '# IF YOU PUT STUFF HERE IT WILL GO AWAY' >> makefile
	echo '# see make depend above' >> makefile

# DO NOT DELETE THIS LINE -- make depend uses it


# DEPENDENCIES MUST END AT END OF FILE
# IF YOU PUT STUFF HERE IT WILL GO AWAY
# see make depend above
