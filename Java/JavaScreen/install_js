#! /bin/csh -f

#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 2001
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

############################################################

#  $Id$

############################################################

#-----------------------------------------------------------
# Get the install info and make sure we're on the right
# host, if specified.

if (! -f install_info) then
  echo "You must create the install_info file before doing an installation."
  echo "Edit Makefile.config as appropriate, and then do"
  echo "'make -f Makefile.setup'."
  exit 1
endif

source install_info

if ($install_host != "" && `hostname` != $install_host) then
  echo "Installation is normally done on $install_host."
  echo -n "Are you sure you want to continue? [n] "

  set answer = $<
  if ($answer != y && $answer != Y) then
    echo Aborted.
    exit 1
  endif
endif

#-----------------------------------------------------------
# Make sure we have the files we need.

set files = (JavaScreen/jspop.class JavaScreen/jss.class JavaScreen/js.class \
    jsa1.jar jsa2.jar jsb1.jar jsb2.jar bin/devised bin/Tasvir bin2/java \
    bin2/perl bin2/Xvfb)
foreach file ($files)
  if (! -f $file) then
    echo "File $file missing.  Cannot proceed with install."
    exit 1
  endif
end

#-----------------------------------------------------------
# Make sure we've sent an appropriate warning email.

echo ""
echo -n "Have you send an appropriate email warning? [n] "
set answer = $<
if ($answer != y && $answer != Y) then
  echo "Please send a warning before continuing"
  exit 1
endif

#-----------------------------------------------------------
# Make sure the jspop has been killed.

echo ""
echo -n "Have you killed the appropriate jspop and associated processes? [n] "
set answer = $<
if ($answer != y && $answer != Y) then
  echo "Please kill these processes before continuing"
  exit 1
endif

#-----------------------------------------------------------
# Final confirmation.

echo ""
echo "This process will install files to $popdir,"
echo "  $servdir, $jardir,"
echo "  and $cgidir for the $idstr JavaScreen"
echo -n "Are you sure you want to continue? [n] "
set answer = $<
if ($answer != y && $answer != Y) then
  echo "Aborted."
  exit 1
endif

#-----------------------------------------------------------
# Temporarily disable the cron checking so that we don't get a restart
# in the middle of the install (note that this will cause an error message
# if the cron job happens to run before the new jspop is installed).

echo ""
echo "Temporarily disabling cron checking during installation"

if (-f $popdir/run_check) then
  rm $popdir/run_check
endif

#-----------------------------------------------------------
# Install the jar and html files.

echo ""
echo "Installing jar and html files"

if (! -d $jardir) then
  mkdir $jardir
  chmod 755 $jardir
endif
cp -p *.jar $jardir
chmod 644 $jardir/*.jar
cp -p jsa.html $jardir
cp -p jsb.html $jardir
chmod 644 $jardir/*.html

#-----------------------------------------------------------
# Install the cgi file.

echo ""
echo "Installing CGI file"

if (! -d $cgidir) then
  mkdir $cgidir
  chmod 755 $cgidir
endif
cp -p js.cgi $cgidir
chmod 755 $cgidir/js.cgi

#-----------------------------------------------------------
# Install the jss, devised, and Tasvir.

echo ""
echo "Installing server programs (jss, devised, and Tasvir)"

# Create directories.
if (! -d $servdir) then
  mkdir $servdir
  chmod 755 $servdir
endif
if (! -d $servdir/JavaScreen) then
  mkdir $servdir/JavaScreen
  chmod 755 $servdir/JavaScreen
endif

# Install class files.
cp -p JavaScreen/*.class $servdir/JavaScreen
chmod 644 $servdir/JavaScreen/*.class

# Install misc. scripts.
set files = (check_jss restart_jss jss DEVise.kill jss.kill ports+files \
    DEVise.jspop DEVise.jspop_soil get_timestamp jss_savepid \
    DEVise_savepid)
foreach file ($files)
  cp -p $file $servdir
  chmod 755 $servdir/$file
end

# Install lib files (for devised).
if (! -d $servdir/lib) then
  mkdir $servdir/lib
  chmod 755 $servdir/lib
endif
cp -p lib/composite.ini $servdir/lib
chmod 644 $servdir/lib/composite.ini

# Create bin directory, and install devised and Tasvir.
if (! -d $servdir/bin) then
  mkdir $servdir/bin
  chmod 755 $servdir/bin
endif

if (-f $servdir/bin/devised) then
  mv $servdir/bin/devised $servdir/bin/devised.bak
endif
cp -p bin/devised $servdir/bin
chmod 755 $servdir/bin/devised

if (-f $servdir/bin/Tasvir) then
  mv $servdir/bin/Tasvir $servdir/bin/Tasvir.bak
endif
cp -p bin/Tasvir $servdir/bin
chmod 755 $servdir/bin/Tasvir

# Install bin2 directory (java, perl, Xvfb *links*).
chmod 755 bin2
tar cf bin2.tar bin2
set curdir = `pwd`
cd $servdir
tar xf $curdir/bin2.tar
cd $cgidir
tar xf $curdir/bin2.tar
cd $curdir
rm bin2.tar

# Install dynamic library directory (for devised and Tasvir).
if (-e dyn_lib) then
  if (! -e $servdir/dyn_lib) then
    mkdir $servdir/dyn_lib
  endif
  cp -p dyn_lib/* $servdir/dyn_lib
endif

#-----------------------------------------------------------
# Install the jspop.

echo ""
echo "Installing the JSPoP"

# Create directories.
if (! -d $popdir) then
  mkdir $popdir
  chmod 755 $popdir
endif
if (! -d $popdir/JavaScreen) then
  mkdir $popdir/JavaScreen
  chmod 755 $popdir/JavaScreen
endif

# Install class files.
cp -p JavaScreen/*.class $popdir/JavaScreen
chmod 644 $popdir/JavaScreen/*.class
cp -p *.gif $popdir
chmod 644 $popdir/*.gif

# Install bin2 directory (java, perl, Xvfb *links*).
tar cf bin2.tar bin2
set curdir = `pwd`
cd $popdir
tar xf $curdir/bin2.tar
cd $curdir
rm bin2.tar

# Install misc. scripts, etc.
if (! -f $popdir/users.cfg) then
  cp -p users.cfg $popdir
  chmod 644 $popdir/users.cfg
endif

# Keep run_check last because of cron job.
set files = (check_connect check_jsall check_jspop jspop js js_cgi \
    restart_jspop jspop.kill kill_jsall ports+files get_stats get_timestamp \
    run_top jspop_savepid)
set files = ($files run_check)
foreach file ($files)
  cp -p $file $popdir
  chmod 755 $popdir/$file
end

cp -p cron_entry.* $popdir
chmod 644 $popdir/cron_entry.*

#TEMP -- js_log?

echo ""
echo "Please be sure that the jspop and all associated processes are"
echo "correctly restarted by the cron job"
