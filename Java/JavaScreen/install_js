#! /bin/csh -f

#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 2001-2013
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

############################################################

#  $Id$

############################################################

#-----------------------------------------------------------
# Check for the -client flag (client-only install).

set usage = "Usage: js_install [-client]"

set client_only = 0

if ($#argv == 1 && xx$1 == xx-client) then
  set client_only = 1
else if ($#argv != 0) then
  echo "Illegal argument"
  echo "$usage"
  exit
endif 

#-----------------------------------------------------------
# Get the install info and make sure we're on the right
# host, if specified.

if (! -f install_info) then
  echo ""
  echo "You must create the install_info file before doing an installation."
  echo "Edit Makefile.config as appropriate, and then do"
  echo "'make -f Makefile.setup'."
  exit 1
endif

source install_info

#-----------------------------------------------------------
# Make sure we're on the right host.

if ($install_host != "" && `hostname` != $install_host) then
  echo ""
  echo "Installation is normally done on $install_host."
  echo -n "Are you sure you want to continue? [n] "

  set answer = $<
  if ($answer != y && $answer != Y) then
    echo Aborted.
    exit 1
  endif
endif

#-----------------------------------------------------------
# Make sure we have the files we need.

#TEMP -- bin2p/perl should be in this list, but -e test doesn't work for
# a symlink that points to nothing (needed for BMRB install on yola/aden).
# RKW 2001-11-01.
set files = ( devise_js.jar )
if (! $client_only) then
  set files = ($files JavaScreen/jspop.class JavaScreen/jss.class \
    JavaScreen/js.class bin/devised bin/Tasvir bin2/java \
    bin2/perl bin2/Xvfb bin2p/java)
endif
foreach file ($files)
  if (! -e $file) then
    echo "File $file missing.  Cannot proceed with install."
    exit 1
  endif
end

set signed = `js_is_signed.pl`
if (! $signed) then
  echo ""
  echo "Jar file is not signed"
  echo -n "Are you sure you want to continue? [n] "

  set answer = $<
  if ($answer != y && $answer != Y) then
    echo Aborted.
    exit 1
  endif
endif

#-----------------------------------------------------------
# Make sure we know which ID we're installing for.

echo ""
echo "***********************************"
echo "Installing JavaScreen for ID $idstr"
echo "***********************************"

#-----------------------------------------------------------
# Make sure we've sent an appropriate warning email.

if (! $client_only) then
  echo ""
  echo -n "Have you send an appropriate email warning? [n] "
  set answer = $<
  if ($answer != y && $answer != Y) then
    echo "Please send a warning before continuing"
    exit 1
  endif
endif 

#-----------------------------------------------------------
# Make sure the jspop has been killed.

if (! $client_only) then
  echo ""
  echo -n "Have you killed the appropriate jspop and associated processes? [n] "
  set answer = $<
  if ($answer != y && $answer != Y) then
    echo "Please kill these processes before continuing"
    exit 1
  endif
endif

#-----------------------------------------------------------
# Final confirmation.

echo ""
echo "This process will install files to $jardir,"
if (! $client_only) then
  echo "$popdir $servdir, $jardir, and $cgidir"
endif
echo "for the $idstr JavaScreen"
echo -n "Are you sure you want to continue? [n] "
set answer = $<
if ($answer != y && $answer != Y) then
  echo "Aborted."
  exit 1
endif

#-----------------------------------------------------------
# Temporarily disable the cron checking so that we don't get a restart
# in the middle of the install (note that this will cause an error message
# if the cron job happens to run before the new jspop is installed).

if (! $client_only) then
  echo ""
  echo "Temporarily disabling cron checking during installation"

  if (-f $popdir/run_check) then
    rm $popdir/run_check
  endif
endif

#-----------------------------------------------------------
# Install the jar and html files.

echo ""
echo "Installing jar and html files"

if (! -d $jardir) then
  mkdir -p $jardir
  chmod 755 $jardir
endif
cp -p devise_js.jar $jardir
chmod 644 $jardir/*.jar
cp -p jsa.html $jardir
cp -p jsb.html $jardir
cp -p keyboard.html $jardir
cp -p collab.html $jardir
cp -p collabf.html $jardir
chmod 644 $jardir/*.html
cp -p logo_background.gif $jardir
chmod 644 $jardir/logo_background.gif

set htmldir = $jardir/html
if (! -d $htmldir) then
  mkdir -p $htmldir
  chmod 755 $htmldir
endif
cp -p html/* $htmldir
chmod 644 $htmldir/*

if ($client_only) then
  exit
endif

#-----------------------------------------------------------
# Install the cgi file.

echo ""
echo "Installing CGI file"

if (! -d $cgidir) then
  mkdir -p $cgidir
  chmod 755 $cgidir
endif
cp -p js.cgi $cgidir
chmod 755 $cgidir/js.cgi

set logdir = $cgidir/devise
if (! -d $logdir) then
  mkdir -p $logdir
  chmod 755 $logdir
endif
cp js_log $logdir
chmod 755 $logdir/js_log

set logdir = $cgidir/devise/js_debug_log
if (! -d $logdir) then
  mkdir -p $logdir
  chmod 777 $logdir
endif

#-----------------------------------------------------------
# Install the jss, devised, and Tasvir.

echo ""
echo "Installing server programs (jss, devised, and Tasvir)"

# Create directories.
if (! -d $servdir) then
  mkdir -p $servdir
  chmod 755 $servdir
endif
if (! -d $servdir/JavaScreen) then
  mkdir -p $servdir/JavaScreen
  chmod 755 $servdir/JavaScreen
endif

# Install class files.
cp -p JavaScreen/*.class $servdir/JavaScreen
chmod 644 $servdir/JavaScreen/*.class

# Install misc. scripts.
set files = (check_jss restart_jss jss DEVise.kill jss.kill ports+files \
    DEVise.jspop DEVise.jspop_soil get_timestamp jss_savepid \
    kill_jsall Tasvir)
foreach file ($files)
  cp -p $file $servdir
  chmod 755 $servdir/$file
end

if (! -d $servdir/scripts) then
  mkdir -p $servdir/scripts
  chmod 755 $servdir/scripts
endif
cp -p scripts/* $servdir/scripts
chmod 755 $servdir/scripts/*

# Create the logs directory if necessary.
if (! -d $servdir/logs) then
  mkdir -p $servdir/logs
  chmod 777 $servdir/logs
endif

# Install lib files (for devised).
if (! -d $servdir/lib) then
  mkdir -p $servdir/lib
  chmod 755 $servdir/lib
endif
cp -p lib/composite.ini $servdir/lib
chmod 644 $servdir/lib/composite.ini

# Create bin directory, and install devised and Tasvir.
if (! -d $servdir/bin) then
  mkdir -p $servdir/bin
  chmod 755 $servdir/bin
endif

if (-f $servdir/bin/devised) then
  mv $servdir/bin/devised $servdir/bin/devised.bak
endif
cp -p bin/devised $servdir/bin
chmod 755 $servdir/bin/devised

if (-f $servdir/bin/Tasvir) then
  mv $servdir/bin/Tasvir $servdir/bin/Tasvir.bak
endif
cp -p bin/Tasvir $servdir/bin
chmod 755 $servdir/bin/Tasvir

# Install bin2 directory (java, perl, Xvfb *links*) into server directory.
tar cf bin2.tar bin2
set curdir = `pwd`
cd $servdir
if (-e bin2) then
  \rm -rf bin2
endif
tar xf $curdir/bin2.tar
chmod 755 bin2
chmod 644 bin2/java
cd $curdir
rm bin2.tar

# Install dynamic library directory (for devised and Tasvir).
if (-e dyn_lib) then
  if (! -e $servdir/dyn_lib) then
    mkdir -p $servdir/dyn_lib
  endif
  cp -p dyn_lib/* $servdir/dyn_lib
endif

#-----------------------------------------------------------
# Install the jspop.

echo ""
echo "Installing the JSPoP"

# Create directories.
if (! -d $popdir) then
  mkdir -p $popdir
  chmod 755 $popdir
endif
if (! -d $popdir/JavaScreen) then
  mkdir -p $popdir/JavaScreen
  chmod 755 $popdir/JavaScreen
endif

# Install class files.
cp -p JavaScreen/*.class $popdir/JavaScreen
chmod 644 $popdir/JavaScreen/*.class
cp -p *.gif $popdir
chmod 644 $popdir/*.gif

# Install bin2p directory (java, perl, *links*) into pop and CGI directories.
tar cf bin2p.tar bin2p
set curdir = `pwd`

if ($popdir != $servdir) then
  cd $popdir
  if (-e bin2) then
    \rm -rf bin2
  endif
  tar xf $curdir/bin2p.tar
  chmod 755 bin2p
  chmod 644 bin2p/java
  mv bin2p bin2
endif

cd $cgidir
if (-e bin2) then
  \rm -rf bin2
endif
tar xf $curdir/bin2p.tar
chmod 755 bin2p
chmod 644 bin2p/java
mv bin2p bin2

cd $curdir
rm bin2p.tar

# Install misc. scripts, etc.
if (! -f $popdir/users.cfg) then
  cp -p users.cfg $popdir
  chmod 644 $popdir/users.cfg
endif

if (! -d $popdir/scripts) then
  mkdir -p $popdir/scripts
  chmod 755 $popdir/scripts
endif
cp -p scripts/* $popdir/scripts
chmod 755 $popdir/scripts/*

# Create the logs directory if necessary.
if (! -d $popdir/logs) then
  mkdir -p $popdir/logs
  chmod 777 $popdir/logs
endif

# Keep run_check last because of cron job.
set files = (check_connect check_jsall check_jspop jspop js js_cgi \
    restart_jspop jspop.kill kill_jsall ports+files get_timestamp \
    run_top jspop_savepid)
set files = ($files run_check)
foreach file ($files)
  cp -p $file $popdir
  chmod 755 $popdir/$file
end

cp -p cron_entry.* $popdir
chmod 644 $popdir/cron_entry.*

echo ""
echo "Please be sure that the jspop and all associated processes are"
echo "correctly restarted by the cron job"
