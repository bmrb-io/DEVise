#! /bin/bash

############################################################

# Start the jss (JavaScreen Server) and save its PID.

# Note: specific port number must NOT be specified in this script.

# Note: this script should only be run by the jss script.

#-----------------------------------------------------------

# $Id$

############################################################

#
# Set log file names according to ID string (if any).
#
idStr=""
for arg in $*
do
  if [ $arg = "-idregular" ]
  then
    idStr="regular"
  elif [ $arg = "-idsoil" ]
  then
    idStr="soil"
  elif [ $arg = "-idtest" ]
  then
    idStr="test"
  elif [ $arg = "-idtst2" ]
  then
    idStr="tst2"
  elif [ $arg = "-idwave" ]
  then
    idStr="wave"
  fi
done

info=`./ports+files $idStr`
joutfile=`echo $info | cut -d' ' -f5`
doutfile=`echo $info | cut -d' ' -f6`


#
# Fire up Xvfb and set DISPLAY accordingly.  Note that this now *always*
# attempts to fire up Xvfb, in case the file in /tmp/.X11-unix is there
# but a corresponding Xvfb is not running.  This shouldn't cause any
# problems -- if there is already an Xvfb running, the new one just exits.
#
echo "Attempting to start Xvfb"

display=1
nohup scripts/Xvfb_savepid :$display $XVFB_ARGS -screen 0 1280x1024x8 &

# Make sure Xvfb gets going before starting the jss.
sleep 10

DISPLAY="unix:$display.0"
export DISPLAY


#
# Re-initialize the log files.
#
\rm -f $joutfile
\rm -f $doutfile
touch $joutfile
touch $doutfile

#
# Fire up the jss, creating the appropriate pid file, and deleting the
# pid file when the jss exits.
#
unset CLASSPATH
javaexec=`cat bin2/java`
$javaexec -Xmx256m JavaScreen.jss -debug $* >> $joutfile 2>&1 &

host=`hostname`
pidfile="jss_pid:$idStr:$host:$!"
touch $pidfile
wait $!
rm $pidfile


# Note: we need to to this here because of rsh (because when this script
# finishes rsh exits, which screws up any DEVise_savepid scripts that are
# still running -- stupid rsh!) although it might be a good idea anyhow,
# since if the jss dies, the deviseds don't do us any good anyhow.
./DEVise.kill $idStr
