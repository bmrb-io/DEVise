#! /usr/freeware/bin/perl

#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 1999-2000
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

#  This is a script to check whether the jspop is running, and restart
#  it if it's not.  (This script is for checking the jspop when the
#  jss and devised(s) are running on a different machine.)

############################################################

#  $Id$

#  $Log$
#  Revision 1.1  2000/05/02 18:27:51  wenger
#  Set up restart scripts for BMRB setup on yola/aden.
#

############################################################

die "usage: check_jspop_only [idStr]\n" if ($#ARGV > 0);

if ($#ARGV == 0) {
  $idStr = shift(@ARGV);
} else {
  $idStr = "regular";
}

$debug = 0;

print "idStr = $idStr\n" if ($debug);

$foundJspop = 0;


# One of the hardest parts of getting this script to work has been running
# ps in such a way that the port arguments still show up when the damn
# path to java gets real long.  -ww option to ps would guarantee that
# the line would be long enough, except that with the latest Intel/Solaris
# ps, this makes the command totally hang!!  RKW 1999-12-17.

$arch = `uname`;
chomp $arch;
if ($arch eq "Linux") {
  $ps_cmd = "/bin/ps -axw";
} elsif ($arch eq "IRIX") {
  $ps_cmd = "ps -ef";
} else {
  $ps_cmd = "/usr/ucb/ps -axw";
}

open PS, "$ps_cmd >& 1 |" or die "can't fork: $!";

while (<PS>) {
  if ($_ =~ /.*java *jspop.*id$idStr/) {
    $foundJspop = 1;
  }
}

close PS;

print "foundJspop = $foundJspop\n" if ($debug);

$curTime = localtime(time());
if (!$foundJspop) {
  print "No jspop process found (at $curTime)\n";
}

if (!$foundJspop) {
  print "Restarting jspop\n";

  SaveLog();

  sleep 5;

  StartJspop();

  #TEMP -- rsh to aden to kill jss
}

#-----------------------------------------------------------

sub SaveLog {
  $timestamp = time();
  print "Saving log file as jspop.out.$timestamp\n";

  # Perl's rename() function doesn't seem to work!?!
  @args = ("mv", "jspop.out", "jspop.out.$timestamp");
  0xffff & system(@args) == 0 or print "Can't rename jspop.out ($?)\n";
}

#-----------------------------------------------------------

sub StartJspop {
  if ($idStr eq "regular") {

    sleep 15;
    system("jspop -id$idStr -cmdport6666 -imgport6644 -jspopport8622 &");

  } elsif ($idStr eq "soil") {
    sleep 15;

    system("jspop -idsoil -cmdport5966 -imgport5944 -jspopport8922 &");

    } elsif ($idStr eq "test") {
    
      sleep 15;
      system("jspop -id$idStr -cmdport6266 -imgport6244 -jspopport8822 &");

  } else {

    sleep 5;
    die "Don't know how to start jspop for id $idStr";

  }
}
