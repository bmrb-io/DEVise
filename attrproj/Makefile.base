#  ========================================================================
#  DEVise Data Visualization Software
#  (c) Copyright 1992-1996
#  By the DEVise Development Group
#  Madison, Wisconsin
#  All Rights Reserved.
#  ========================================================================
#
#  Under no circumstances is this software to be copied, distributed,
#  or altered in any way without prior permission from the DEVise
#  Development Group.

#  Makefile for attribute projection code.

############################################################

#  $Id$

#  $Log$
#  Revision 1.30  1996/12/03 20:26:38  jussi
#  Added DCE and MemMgr.
#
#  Revision 1.29  1996/11/26 21:41:11  wenger
#  Fixed various makefile problems; updated dependencies.
#
#  Revision 1.28  1996/11/25 18:15:05  wenger
#  Changes to non-indexed attrproj to match other changes to TData;
#  changes to compile non-index attrproj and to get the rest of Devise
#  to compile with that.
#
#  Revision 1.27  1996/11/23 21:35:51  jussi
#  Added -I../../DTE/Core which seemed to be missing.
#
#  Revision 1.26  1996/11/22 21:15:58  flisakow
#  An example of how to use the new Sequential (no index) TData class.
#  You need to set USE_SEQ to "yes" in the Makefile to build to the
#  new example.
#
#  Revision 1.25  1996/11/18 18:12:33  donjerko
#  Added DTE make stuff
#
#  Revision 1.24  1996/11/01 19:03:31  kmurli
#  Makefile changed to include DQL sources
#
#  Revision 1.23  1996/10/04 17:24:45  wenger
#  Moved handling of indices from TDataAscii and TDataBinary to new
#  FileIndex class.
#
#  Revision 1.22  1996/09/25 18:36:10  wenger
#  Updated again for Linux compile (Linux 2.0.6, Tcl 7.4, Tk 4.0).
#
#  Revision 1.21  1996/08/23 16:55:02  wenger
#  First version that allows the use of Dali to display images (more work
#  needs to be done on this); changed DevStatus to a class to make it work
#  better; various minor bug fixes.
#
#  Revision 1.20  1996/08/15 19:54:50  wenger
#  Added 'pure' targets for attrproj and devread; fixed some dynamic
#  memory problems.  Found some bugs while demo'ing for soils science
#  people.
#
#  Revision 1.19  1996/08/13 17:45:30  flisakow
#      Make consistently uses C and CC for gcc and g++, respectively.
#
#  Revision 1.18  1996/08/12 18:43:21  flisakow
#    Makefiles changed to use AR and RANLIB vars from Makefile.common.
#
#  Revision 1.17  1996/08/06 20:11:08  wenger
#  Set up makefiles to easily compile with -g flag; other cleanup of
#  makefiles.
#

############################################################

include ../../Makefile.common

# Should we use the sequential stuff (no indexes)
USE_SEQ = yes

CFLAGS = $(ARCH_FLAGS) -I../../attrproj -I../../graphics \
	-I../../graphics.new -I../../tape -I../../DTE/RTree -I../../DTE/RTree/tools \
	-I../../DTE -I../../DTE/Core \
	-fexternal-templates -Wall -Wno-unused $(OPTFLAG) -DUNIX \
	-DATTRPROJ -DLIBCS


ifeq (yes, $(USE_SEQ))
TESTSRC = aptest2.c vector.c
else
TESTSRC = aptest.c vector.c
endif
TESTOBJ = $(TESTSRC:.c=.o)

SHOWSRC = show.c vector.c
SHOWOBJ = $(SHOWSRC:.c=.o)

ifeq (yes, $(USE_SEQ))
LOCALSRC = AttrProj2.c ApInit.c ApParseCat2.c VectorArray.c ProjectionList.c
else
LOCALSRC = AttrProj.c ApInit.c ApParseCat.c VectorArray.c ProjectionList.c
endif

#The following sources are in other directories, but must be specially
#compiled for attrproj.
ifeq (yes, $(USE_SEQ))
LOCALSRC += Exit.c TData.c TDataSeqAscii.c TDataSeqAsciiInterp.c \
        TDataBinary.c TDataDQL.c TDataDQLInterp.c DataSourceDQL.c \
	   RTree.c \
        TDataBinaryInterp.c DataSourceSegment.c DCE.C MemMgr.C
else
LOCALSRC += Exit.c TData.c TDataAscii.c TDataAsciiInterp.c \
        TDataBinary.c TDataDQL.c TDataDQLInterp.c DataSourceDQL.c \
	   RTree.c \
        TDataBinaryInterp.c DataSourceSegment.c DCE.C MemMgr.C
endif

SRCc = $(filter %.c,$(LOCALSRC))
SRCC = $(filter %.C,$(LOCALSRC))
LOCALOBJ = $(SRCc:.c=.o)
LOCALOBJ += $(SRCC:.C=.o)

LIBOBJ = \
	../graphics/Parse.o \
	../graphics/AttrList.o \
	../graphics/Time.o \
	../graphics/Util.o \
	../graphics/DevError.o \
	../graphics/DevStatus.o \
	../graphics.new/RecInterp.o \
	../graphics.new/CompositeParser.o \
	../graphics.new/Group.o \
	../graphics.new/GroupDir.o \
	../graphics.new/ItemList.o \
	../graphics.new/DataSeg.o \
	../graphics.new/DataSource.o \
	../graphics.new/DataSourceFileStream.o \
	../graphics.new/DataSourceTape.o \
	../graphics.new/DataSourceBuf.o \
	../graphics.new/DevFileHeader.o \
	../graphics.new/FileIndex.o \
	../graphics.new/Version.o \
	../tape/tapedrive.o \
	../generic/CompDate.o \
	$(LOCALOBJ)

DEVREADOBJ = ApParseCat.o TDataAscii.o TDataAsciiInterp.o

LIB = libattrproj.a

ALLTESTOBJ = $(TESTOBJ)
ALLSHOWOBJ = $(SHOWOBJ)

ifeq (yes, $(USE_SEQ))
all: aptest2 show
else
all: aptest show
endif

lib: $(LIB)
pure: aptest.pure show.pure


APTEST = $(CC) -v -o $@ $(ARCH_LDFLAGS) -L. $(ALLTESTOBJ) \
	-lattrproj

aptest: $(ALLTESTOBJ) $(LIB)
	$(APTEST) $(ARCH_LDPOST)

aptest2: $(ALLTESTOBJ) $(LIB)
	$(APTEST) $(ARCH_LDPOST)

aptest.pure: $(ALLTESTOBJ) $(LIB)
	$(PURIFY) $(PURE_OPT) $(APTEST) $(ARCH_LDPOST)


SHOW = $(CC) -o $@ $(ARCH_LDFLAGS) -L. $(ALLSHOWOBJ) \
	-lattrproj $(ARCH_SYSLIBS) $(ARCH_LDPOST)

show: $(ALLSHOWOBJ) $(LIB)
	$(SHOW) $(ARCH_LDPOST)

show.pure: $(ALLSHOWOBJ) $(LIB)
	$(PURIFY) $(PURE_OPT) $(SHOW) $(ARCH_LDPOST)

# Note: $(DEVREADOBJ) is included in the dependencies solely so that these
# files are always compiled, so that devread and DTE will compile.
# RKW 11/25/96.
$(LIB): $(LIBOBJ) $(DEVREADOBJ)
	$(AR) cr $@ $(LIBOBJ)
	$(RANLIB) $@

.PHONY: clean mostlyclean

clean: mostlyclean
	-rm aptest aptest2 show $(LIB)

mostlyclean:
	-rm $(TESTOBJ) $(SHOWOBJ) $(LOCALOBJ) $(DEVREADOBJ)
